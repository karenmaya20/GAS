var connectionName = 'seguimientodeproyectos:us-west2:seguimientodeproyectos'; //instancia
var db = 'proyectos2'; //nombre de la base a creada
// CREDENCIALES 
var root = 'root';
var rootPwd = 'root';
// var user = 'sp'; 
// var userPwd = 'root';

var instanceUrl = 'jdbc:google:mysql://' + connectionName;
var dbUrl = instanceUrl + '/' + db;

var conn2 = Jdbc.getCloudSqlConnection(dbUrl, root, rootPwd);
var respuestas = {} //arreglo para guardar cada respuestas del formulario
var correos = {}
var temporal = {}
var answer = {}
var array_correoHTML = {}
var array_historial = {}
var cuerpoHistorial = ""
var observaciones_tabla = ""


// ----- Elementos para el armado de la tabla para las listas de verificación 
var parte1 = "";
var punto = '<span style="background:#222222; border-radius: 0.5em; color: #222222; display: inline-block; font-weight: bold; line-height: 1.6em; margin-left: 40px; text-align: center; width: 1.6em;">.</span>';

var tabla_lista = "<table style='table-layout: fixed;width: 90%;border-collapse:collapse;'>"
  + "<tr><th colspan='10' style='background-color:#8F8F8F; padding:5px'>Listado de verificación</th></tr>"
  + "<tr><th colspan='6' style='padding:0px'>Criterio</th><th>Si</th><th>No</th><th>No aplica</th></tr>";

var opcionesBase = ["Si", "No", "No aplica", null]; //Opciones posibles en las listas de verificación

// ---------------------------------------------------------------------
correos.RDI = "elisa_campero@cuaieed.unam.mx"
correos.CDI = "miriam_diaz@cuaieed.unam.mx"
correos.RCE = "brenda_gomez@cuaieed.unam.mx"
//correos.CCE = "brenda_gomez@cuaieed.unam.mx"
correos.RCV = "juandedios_fuentes@cuaieed.unam.mx"
correos.CCV = "fabiola_moncada@cuaieed.unam.mx"
correos.CPR = "juan_becerril@cuaieed.unam.mx"

var lv_di = [
  "La versión que se entrega tiene Vo. Bo. del experto en contenido."
  , "Todos los componentes del guión están desarrollados."
  , "La carga de trabajo es acorde con la carga horaria."
  , "Todos los materiales y actividades contribuyen al logro del objetivo de aprendizaje."
  , "Se consideraron todos los criterios de uniformidad del proyecto."
  , "Las fuentes de información cuentan con todos los datos necesarios para construir las referencia."
  , "Las actividades cuentan con todos los elementos para su desarrollo. (Contextualización, material de apoyo, instrucciones técnicas y didácticas, reactivos con respuesta correcta y distractores, retroalimentaciones y rúbricas.)"
  , "Las categorías de las actividades corresponden a las de los criterios de acreditación y los porcentajes cuadrados al 100%. (ponderación)"
  , "Se entregan todos los anexos indicados en el guion (imágenes, descargables, audios, videos, etc.)"
  , "Los vínculos a sitios electrónicos que se incluyen están activos al momento de la entrega."
  , "La ficha de comunicación visual e integración reúne todos los recursos, imágenes y documentos indicados a lo largo del guión."
  , "Los archivos están nombrados de acuerdo a la nomenclatura establecida."
  , "Los cortes de pantalla están indicados."
  , "El código de colores está correctamente aplicado."
  , "La carpeta está organizada de manera adecuada y sin archivos comprimidos al interior."
];

var lv_ce = [
  "La corrección de estilo contempla la hoja de estilo del proyecto."
  , "El contenido está en el formato establecido (Verdana 11, interlineado sencillo y sin sangría)."
  , "Los nombres de unidades y temas, así como los títulos y subtítulos dentro del texto mantienen uniformidad en el uso de altas y bajas según lo establecido en el manual de estilo."
  , "El contenido mantiene un estilo narrativo uniforme."
  , "Los términos de uso recurrente en el contenido (topónimos, conceptos, épocas históricas, entidades, etc.) se manejan de manera uniforme según su naturaleza."
  , "Los recursos gráficos que presentan errores ortográficos o de redacción tienen las respectivas correcciones en globos de comentarios."
  , "Los pies de imágenes y las referencias mantienen uniformidad en el orden de los datos que presentan."
  , "Las sugerencias u observaciones dirigidas al experto en contenido son pertinentes, claras, precisas y están expresadas con cortesía."
  , "Las solicitudes de correcciones dirigidas a los comunicadores visuales son claras y concisas."
  , "Los archivos anexos en Word y PowerPoint se corrigen conservando el mismo estilo narrativo del guion y atendiendo la hoja de estilo del proyecto."
];

var lv_cv = [
  "Aplicación correcta de hoja de estilo gráfico para el proyecto (interlineado, plecas, iconos, imágenes, esquemas, bordes, interactivos, botones, etc.)."
  , "Implementación correcta de la hoja de estilos (CSS) y visualización correcta en navegadores."
  , "Vinculación correcta de recursos de plataforma (chat, foros, actividades, calificador, etc.)."
  , "Visualización de versión responsiva."
  , "Funcionamiento correcto de la barra de accesibilidad."
  , "Integración secuencial de HTML y paginación correcta."
  , "Funcionamiento correcto de los hipervínculos en todo el contenido del curso (enlaces externos e internos, botones, descargables)."
  , "Condicionamiento de hipervínculos según especificación (blank, self, new, parent, lightbox, tooltip, etc.)."
  , "Visualización y funcionamiento correcto de gráficos, imágenes y elementos interactivos."
  , "Integración adecuada de ID de plataforma en contenido HTML (actividades)."
  , "Definición de ruta de navegación y funcionalidad correcta (breadcrumb)."
  , "Redireccionamiento al sitio público de proyecto (botón Cerrar sesión)."
  , "Recursos multimedia funcionales en el esquema de accesibilidad."
  , "Jerarquía correcta del esquema tipográfico (títulos, subtítulos, párrafos, pies de imágenes)."
  , "Diseño editorial de documentos descargables acorde al proyecto."
  , "Visibilidad de todos los elementos integrados en los diversos navegadores (Explorer, FireFox, Safari, Chrome)."
  , "Ponderación correcta del curso (categorización, porcentajes al 100% y con base 10)."
];

var lv_pr = [
  "El ajuste que se solicitó fue aplicado correctamente."
  , "Despliegue correcto de reactivos en esquema paginado en desktop."
  , "Despliegue correcto de reactivos en esquema paginado en móvil."
  , "Elementos multimedia de reactivos y respuestas se muestran correctamente."
  , "Visualización correcta de retros por respuesta conforme a guión instruccional."
  , "Visualización correcta de retros por reactivo como lo establece el guión instruccional."
  , "Visualización correcta de retros por calificación conforme a guión instruccional."
  , "Se verificó el funcionamiento en desktop (al menos dos navegadores -Firefox y Chrome-)."
  , "Se verificó el funcionamiento en móvil."
  , "Guarda calificación como lo establece el guión instruccional."
  , "El recurso aporta a la barra de avance."
  , "Número de intentos establecido conforme a guión instruccional."
  , "Debug apagado."
  , "Google Analytics funcional."
  , "Versión de recurso de CRM 2020."
];

function main() {
  var form = FormApp.openById('1wKNLoz6LWh-XrHEoL-8OkyC4LXISMTWlXLSZpQji4kk');
  var formResponses = form.getResponses();
  form.collectsEmail()
  form.setCollectEmail(true)
  form.setAllowResponseEdits(true)//habilita la opción de recuperar las respuestas
  var stmt = conn2.createStatement();
  var txn = stmt.execute('SET autocommit=0;');
  txn = stmt.execute('START TRANSACTION;');
  respuestas = {}
  var formResponse = formResponses[formResponses.length - 1];//obtiene el ultimo registro del formulario
  var itemResponses = formResponse.getItemResponses();
  Logger.log(formResponse.getEditResponseUrl());

  for (var j = 0; j < itemResponses.length; j++) {
    var itemResponse = itemResponses[j];
    respuestas.email = formResponse.getRespondentEmail();
    answer.answerURL = formResponse.getEditResponseUrl();

    switch (j) {
      case 0.0:
        respuestas.solicitud = itemResponse.getResponse();
        break;
      case 1.0:
        respuestas.dato1 = itemResponse.getResponse();
        break;
      case 2.0:
        respuestas.dato2 = itemResponse.getResponse();
        break;
      case 3.0:
        respuestas.dato3 = itemResponse.getResponse();
        break;
      case 4.0:
        respuestas.dato4 = itemResponse.getResponse();
        break;
      case 5.0:
        respuestas.dato5 = itemResponse.getResponse();
        break;
      case 6.0:
        respuestas.dato6 = itemResponse.getResponse();
        break;
      case 7.0:
        respuestas.dato7 = itemResponse.getResponse();
        break;
      case 8.0:
        respuestas.dato8 = itemResponse.getResponse();
        break;
      case 9.0:
        respuestas.dato9 = itemResponse.getResponse();
        break;
      case 10.0:
        respuestas.dato10 = itemResponse.getResponse();
        break;
      case 11.0:
        respuestas.dato11 = itemResponse.getResponse();
        break;
      case 12.0:
        respuestas.dato12 = itemResponse.getResponse();
        break;
      case 13.0:
        respuestas.dato13 = itemResponse.getResponse();
        break;
      case 14.0:
        respuestas.dato14 = itemResponse.getResponse();
        break;
      case 15.0:
        respuestas.dato15 = itemResponse.getResponse();
        break;
      case 16.0:
        respuestas.dato16 = itemResponse.getResponse();
        break;
      case 17.0:
        respuestas.dato17 = itemResponse.getResponse();
        break;
      case 18.0:
        respuestas.dato18 = itemResponse.getResponse();
        break;
      case 19.0:
        respuestas.dato19 = itemResponse.getResponse();
        break;
      default:
        Logger.log("Otro");
        break;
    }
  } //itemResponses

  Logger.log(Object.keys(respuestas).length);
  Logger.log((respuestas));

  switch (respuestas.solicitud) {
    case 'Actividades':
      actividades(respuestas);
      break;
    case 'Órdenes':
      ordenes(respuestas);
      break;
    case "Validación":
      validacion(respuestas);
      break;
    default:
      Logger.log("OTRO SOLICITUD")
      break;
  }
  txn = stmt.execute('COMMIT;');
  stmt.close();
  conn2.close();

} //main

function actividades(respuestas) {
  //Caso donde las Actividades requieren de cotejo
  if (respuestas.dato1 == 'Solicitud de material a experto' ||
    respuestas.dato1 == 'AP envía observaciones de material a experto' ||
    respuestas.dato1 == 'Material enviado a VoBo de experto') {

    //Flujo del formulario: Actividades -> Cotejo -> Dependencia -> Proyecto -> Asignatura -> Solicitud
    if (Object.keys(respuestas).length == 13.0) {

      var results = conn2.prepareStatement('INSERT INTO SOLICITUD ' +
        '(nombre, instrucciones, ruta, observacion, email, proyectofk)' +
        'values (?, ?, ?, ?, ?, ?)');
      results.setString(1, respuestas.solicitud);
      results.setString(2, respuestas.dato9); //instrucciones
      results.setString(3, respuestas.dato10); //ruta
      results.setString(4, respuestas.dato11); //observacion
      results.setString(5, respuestas.email);

      var stmt = conn2.createStatement();
      //Query para obtener la llave foránea entre las tablas SOLICITUD y DEPENDENCIA y PROYECTO
      var proyectofk = stmt.executeQuery(`select PROYECTO.id from DEPENDENCIA 
      JOIN PROYECTO on DEPENDENCIA.id = PROYECTO.dependenciafk 
      where (DEPENDENCIA.nombre='${respuestas.dato4}' 
      and PROYECTO.proyecto = '${respuestas.dato5}' 
      and PROYECTO.asignatura = '${respuestas.dato6}' )`);

      var numCols = proyectofk.getMetaData().getColumnCount();
      while (proyectofk.next()) {
        var proyectoFK = '';
        for (var col = 0; col < numCols; col++) {
          proyectoFK += proyectofk.getString(col + 1) + "\n";
        }

        results.setString(6, proyectoFK.toString()); //proyectoFK
        results.execute();
      } //while

      //Obtención del último elemento de la tabla SOLICITUD 
      var maximo = stmt.executeQuery('select last_insert_id();');
      maximo.next();
      var solicitudlast = maximo.getString(1); //solicitudfk

      //Inserción en la tabla ACTIVIDAD
      var results = conn2.prepareStatement('INSERT INTO ACTIVIDAD ' +
        '(nombre, experto, correo, solicitudfk) values (?, ?, ?, ?)');
      results.setString(1, respuestas.dato1);
      results.setString(2, respuestas.dato2);
      results.setString(3, respuestas.dato3);
      results.setString(4, solicitudlast);
      results.execute();

      var temporal = {}
      temporal.entrega = respuestas.dato7
      temporal.numero = respuestas.dato8
      Logger.log(temporal);

      var solicitudfk = stmt.executeQuery(`SELECT id FROM SOLICITUD 
      where proyectofk = '${proyectoFK.toString()}';`); //proyectofk
      var numCols = solicitudfk.getMetaData().getColumnCount();
      while (solicitudfk.next()) {
        var solicitudFK = '';
        for (var col = 0; col < numCols; col++) {
          solicitudFK += solicitudfk.getString(col + 1) + "\n";
        }
      } //while

      avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);

      //------------------------------------------------------------------------

      var iniciales_elemento = '';
      for (var item in temporal) {
        temporal[item].forEach(function (elemento, indice) {

          var entregaM = stmt.executeQuery(`select abreviatura from ELEMENTO
          where (ELEMENTO.nombre='${elemento}')`);
          var numCols = entregaM.getMetaData().getColumnCount();
          while (entregaM.next()) {
            for (var col = 0; col < numCols; col++) {
              iniciales_elemento += entregaM.getString(col + 1) + ",";
            }
          } //while
        });
      }//for
      var iniciales_elemento_mod = ""
      iniciales_elemento_mod = iniciales_elemento.slice(0, -1)

      //------------------------------------------------------------------------

      //Consulta de iniciales para dependencia y proyecto para correo 
      var inicialdep = stmt.executeQuery(`select inicial_dep from DEPENDENCIA 
      where (DEPENDENCIA.nombre='${respuestas.dato4}')`);
      var numCols = inicialdep.getMetaData().getColumnCount();
      while (inicialdep.next()) {
        var iniciales_depend = '';
        for (var col = 0; col < numCols; col++) {
          iniciales_depend += inicialdep.getString(col + 1) + "\n";
        }
      } //while
      var inicialproy = stmt.executeQuery(`select inicial_proy from PROYECTO
      where (PROYECTO.proyecto='${respuestas.dato5}')`);
      var numCols = inicialproy.getMetaData().getColumnCount();
      while (inicialproy.next()) {
        var iniciales_proy = '';
        for (var col = 0; col < numCols; col++) {
          iniciales_proy += inicialproy.getString(col + 1) + "\n";
        }
      } //while

      if (respuestas.dato8 == 0 || (respuestas.dato7 == "Escritorio" || respuestas.dato7 == "Sitio público"
        || respuestas.dato7 == "Componentes Generales")) {

        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: "A." + respuestas.dato1 + " / " + iniciales_elemento_mod + " / " + respuestas.dato6
            + " / " + iniciales_proy + " / " + iniciales_depend.toString(),
          htmlBody: "Buen día, " + respuestas.dato2
            + ".<br>Instrucciones: " + respuestas.dato9
            + ".<br>Ruta de descarga: " + respuestas.dato10
            + ".<br>Comentarios: " + respuestas.dato11
            + ".<br><br>Saludos cordiales!!!"
            + "<br><br>C:" + respuestas.dato3
            + "<br><br>CC:" + (" __" + correos.CDI + ", __" + correos.RDI)
        });
      } else {
        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: "A." + respuestas.dato1 + " / " + iniciales_elemento_mod + respuestas.dato8 + " / " + respuestas.dato6
            + " / " + iniciales_proy + " / " + iniciales_depend.toString(),
          htmlBody: "Buen día, " + respuestas.dato2
            + ".<br>Instrucciones: " + respuestas.dato9
            + ".<br>Ruta de descarga: " + respuestas.dato10
            + ".<br>Comentarios: " + respuestas.dato11
            + ".<br><br>Saludos cordiales!!!"
            + "<br><br>C:" + respuestas.dato3
            + "<br><br>CC:" + (" __" + correos.CDI + ", __" + correos.RDI)
        });
      }

    } //if 13.0

    //Flujo del formulario: Actividades -> Cotejo -> Dependencia -> Proyecto -> Solicitud
    if (Object.keys(respuestas).length == 12.0) {
      var results = conn2.prepareStatement('INSERT INTO SOLICITUD ' +
        '(nombre, instrucciones, ruta, observacion, email, proyectofk)' +
        'values (?, ?, ?, ?, ?, ?)');
      results.setString(1, respuestas.solicitud);
      results.setString(2, respuestas.dato8); //instrucciones
      results.setString(3, respuestas.dato9); //ruta
      results.setString(4, respuestas.dato10); //observacion
      results.setString(5, respuestas.email);

      var stmt = conn2.createStatement();
      //Query para obtener la llave foránea entre las tablas Solicitud y DEPENDENCIA y PROYECTO
      var proyectofk = stmt.executeQuery(`select PROYECTO.id from DEPENDENCIA 
      JOIN PROYECTO on DEPENDENCIA.id = PROYECTO.dependenciafk 
      where (DEPENDENCIA.nombre='${respuestas.dato4}' 
      and PROYECTO.proyecto = '${respuestas.dato5}')`);
      var numCols = proyectofk.getMetaData().getColumnCount();
      while (proyectofk.next()) {
        var proyectoFK = '';
        for (var col = 0; col < numCols; col++) {
          proyectoFK += proyectofk.getString(col + 1) + "\n";
        }

        results.setString(6, proyectoFK.toString()); //proyectofk
        results.execute();
      } //while


      //Obtención del último elemento de la tabla Solicitud 
      var maximo = stmt.executeQuery('select last_insert_id();');
      maximo.next();
      var solicitudlast = maximo.getString(1); //solicitudfk

      //Inserción en la tabla ACTIVIDAD
      var results = conn2.prepareStatement('INSERT INTO ACTIVIDAD ' +
        '(nombre, experto, correo, solicitudfk) values (?, ?, ?, ?)');
      results.setString(1, respuestas.dato1);
      results.setString(2, respuestas.dato2);
      results.setString(3, respuestas.dato3);
      results.setString(4, solicitudlast);
      results.execute();

      //------------------------------------------------------------------------

      var temporal = {}
      temporal.entrega = respuestas.dato6;//entrega
      temporal.numero = respuestas.dato7;//numero
      Logger.log(temporal);

      var solicitudfk = stmt.executeQuery(`SELECT id FROM SOLICITUD 
      where proyectofk = '${proyectoFK.toString()}';`); //proyectofk
      var numCols = solicitudfk.getMetaData().getColumnCount();
      while (solicitudfk.next()) {
        var solicitudFK = '';
        for (var col = 0; col < numCols; col++) {
          solicitudFK += solicitudfk.getString(col + 1) + "\n";
        }
      } //while

      avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);

      //------------------------------------------------------------------------

      var iniciales_elemento = '';
      for (var item in temporal) {
        temporal[item].forEach(function (elemento, indice) {
          var entregaM = stmt.executeQuery(`select abreviatura from ELEMENTO
            where (ELEMENTO.nombre='${elemento}')`);
          var numCols = entregaM.getMetaData().getColumnCount();
          while (entregaM.next()) {
            for (var col = 0; col < numCols; col++) {
              iniciales_elemento += entregaM.getString(col + 1) + ",";
            }
          } //while
        });
      }//for
      var iniciales_elemento_mod = ""
      iniciales_elemento_mod = iniciales_elemento.slice(0, -1);


      //------------------------------------------------------------------------

      //Consulta de iniciales para dependencia y proyecto para correo 

      var inicialdep = stmt.executeQuery(`select inicial_dep from DEPENDENCIA 
      where (DEPENDENCIA.nombre='${respuestas.dato4}')`);
      var numCols = inicialdep.getMetaData().getColumnCount();
      while (inicialdep.next()) {
        var iniciales_depend = '';
        for (var col = 0; col < numCols; col++) {
          iniciales_depend += inicialdep.getString(col + 1) + "\n";
        }
      } //while
      var inicialproy = stmt.executeQuery(`select inicial_proy from PROYECTO
            where (PROYECTO.proyecto='${respuestas.dato5}')`);
      var numCols = inicialproy.getMetaData().getColumnCount();
      while (inicialproy.next()) {
        var iniciales_proy = '';
        for (var col = 0; col < numCols; col++) {
          iniciales_proy += inicialproy.getString(col + 1) + "\n";
        }
      } //while
      if (respuestas.dato7 == 0 || (respuestas.dato6 == "Escritorio" || respuestas.dato6 == "Sitio público"
        || respuestas.dato6 == "Componentes Generales")) {

        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: "A." + respuestas.dato1 + " / " + iniciales_elemento_mod
            + " / " + iniciales_proy + " / " + iniciales_depend.toString(),
          htmlBody: "Buen día, " + respuestas.dato2 + ".<br>"
            + ".<br>Instrucciones: " + respuestas.dato8
            + ".<br>Ruta de descarga: " + respuestas.dato9
            + ".<br>Comentarios: " + respuestas.dato10
            + ".<br><br>Saludos cordiales!!!"
            + "<br><br>C:" + respuestas.dato3
            + "<br><br>CC:" + (" __" + correos.CDI + ", __" + correos.RDI)
        });
      } else {
        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: "A." + respuestas.dato1 + " / " + iniciales_elemento_mod + respuestas.dato7
            + " / " + iniciales_proy + " / " + iniciales_depend.toString(),
          htmlBody: "Buen día, " + respuestas.dato2
            + ".<br>Instrucciones: " + respuestas.dato8
            + ".<br>Ruta de descarga: " + respuestas.dato9
            + ".<br>Comentarios: " + respuestas.dato10
            + ".<br><br>Saludos cordiales!!!"
            + "<br><br>C:" + respuestas.dato3
            + "<br><br>CC:" + (" __" + correos.CDI + ", __" + correos.RDI)
        });
      }
    } //12.0 Actividades que requieren cotejo y NO tienen asignatura

  } //Actividades que requieren cotejo
  else {
    //Caso donde las actividades que NO requieren cotejo
    if (Object.keys(respuestas).length == 11.0) { //Actividades que NO requieren cotejo y tienen Asignatura

      var results = conn2.prepareStatement('INSERT INTO SOLICITUD ' +
        '(nombre, instrucciones, ruta, observacion, email, proyectofk)' +
        'values (?, ?, ?, ?, ?, ?)');
      results.setString(1, respuestas.solicitud);
      results.setString(2, respuestas.dato7); //instrucciones
      results.setString(3, respuestas.dato8); //ruta
      results.setString(4, respuestas.dato9); //observacion
      results.setString(5, respuestas.email);

      var stmt = conn2.createStatement();
      //Query para obtener la llave foránea entre las tablas Solicitud y DEPENDENCIA y PROYECTO
      var proyectofk = stmt.executeQuery(`select PROYECTO.id from DEPENDENCIA 
                    JOIN PROYECTO on DEPENDENCIA.id = PROYECTO.dependenciafk 
                    where (DEPENDENCIA.nombre='${respuestas.dato2}' 
                    and PROYECTO.proyecto = '${respuestas.dato3}' 
                    and PROYECTO.asignatura = '${respuestas.dato4}' )`);
      var numCols = proyectofk.getMetaData().getColumnCount();
      while (proyectofk.next()) {
        var proyectoFK = '';
        for (var col = 0; col < numCols; col++) {
          proyectoFK += proyectofk.getString(col + 1) + "\n";
        }

        results.setString(6, proyectoFK.toString()); //proyectoFK
        results.execute();
      } //while

      //Obtención del último elemento de la tabla SOLICITUD 
      var maximo = stmt.executeQuery('select last_insert_id();');
      maximo.next();
      var solicitudlast = maximo.getString(1); //solicitudfk

      //Inserción en la tabla ACTIVIDAD
      var results = conn2.prepareStatement('INSERT INTO ACTIVIDAD ' +
        '(nombre, experto, correo, solicitudfk) values (?, ?, ?, ?)');
      results.setString(1, respuestas.dato1);
      results.setString(2, "");
      results.setString(3, "");
      results.setString(4, solicitudlast);
      results.execute();

      //------------------------------------------------------------------------
      var temporal = {}
      temporal.entrega = respuestas.dato5;//entrega
      temporal.numero = respuestas.dato6;//numero
      Logger.log(temporal);

      var solicitudfk = stmt.executeQuery(`SELECT id FROM SOLICITUD 
      where proyectofk = '${proyectoFK.toString()}';`); //proyectofk
      var numCols = solicitudfk.getMetaData().getColumnCount();
      while (solicitudfk.next()) {
        var solicitudFK = '';
        for (var col = 0; col < numCols; col++) {
          solicitudFK += solicitudfk.getString(col + 1) + "\n";
        }
      } //while

      avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);

    } //11.0


    if (Object.keys(respuestas).length == 10.0) { //Actividades que NO requieren cotejo y NO tienen Asignatura
      var results = conn2.prepareStatement('INSERT INTO SOLICITUD ' +
        '(nombre, instrucciones, ruta, observacion, email, proyectofk)' +
        'values (?, ?, ?, ?, ?, ?)');
      results.setString(1, respuestas.solicitud);
      results.setString(2, respuestas.dato6); //instrucciones
      results.setString(3, respuestas.dato7); //ruta
      results.setString(4, respuestas.dato8); //observacion
      results.setString(5, respuestas.email);

      var stmt = conn2.createStatement();
      //Query para obtener la llave foránea entre las tablas Solicitud y DEPENDENCIA y PROYECTO
      var proyectofk = stmt.executeQuery(`select PROYECTO.id from DEPENDENCIA 
        JOIN PROYECTO on DEPENDENCIA.id = PROYECTO.dependenciafk 
        where (DEPENDENCIA.nombre='${respuestas.dato2}' 
        and PROYECTO.proyecto = '${respuestas.dato3}')`);
      var numCols = proyectofk.getMetaData().getColumnCount();
      while (proyectofk.next()) {
        var proyectoFK = '';
        for (var col = 0; col < numCols; col++) {
          proyectoFK += proyectofk.getString(col + 1) + "\n";
        }

        results.setString(6, proyectoFK.toString()); //proyectoFK
        results.execute();
      } //while

      //Obtención del último elemento de la tabla Solicitud 
      var maximo = stmt.executeQuery('select last_insert_id();');
      maximo.next();
      var solicitudlast = maximo.getString(1); //solicitudfk

      //Inserción en la tabla ACTIVIDAD
      var results = conn2.prepareStatement('INSERT INTO ACTIVIDAD ' +
        '(nombre, experto, correo, solicitudfk) values (?, ?, ?, ?)');
      results.setString(1, respuestas.dato1);
      results.setString(2, "");
      results.setString(3, "");
      results.setString(4, solicitudlast);
      results.execute();

      //Se utiliza el arreglo "temporal" para el almacenado de (número,ELEMENTOfk,solicitudfk)en la tabla MATERIAL 
      // con base a la búsqueda de las llaves foráneas de la tabla ELEMENTO
      var temporal = {}
      temporal.entrega = respuestas.dato4;//entrega
      temporal.numero = respuestas.dato5;//numero
      Logger.log(temporal);

      var solicitudfk = stmt.executeQuery(`SELECT id FROM SOLICITUD 
      where proyectofk = '${proyectoFK.toString()}';`); //proyectofk
      var numCols = solicitudfk.getMetaData().getColumnCount();
      while (solicitudfk.next()) {
        var solicitudFK = '';
        for (var col = 0; col < numCols; col++) {
          solicitudFK += solicitudfk.getString(col + 1) + "\n";
        }
      } //while

      avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);

    } //10.0      
  } //else
}//actividades

function ordenes(respuestas) {
  switch (respuestas.dato3) {
    case "Corrección":
      // Flujo de trabajo Orden -> Corrección -> LVDI, Observación -> Dependencia -> Proyecto -> Asignatura -> Solicitud
      if (Object.keys(respuestas).length == 15.0) {
        var results = conn2.prepareStatement('INSERT INTO SOLICITUD ' +
          '(nombre, instrucciones, ruta, observacion, email, proyectofk)' +
          'values (?, ?, ?, ?, ?, ?)');
        results.setString(1, respuestas.solicitud);
        results.setString(2, respuestas.dato11); //instrucciones
        results.setString(3, respuestas.dato12); //ruta
        results.setString(4, respuestas.dato13); //observacion
        results.setString(5, respuestas.email);

        var stmt = conn2.createStatement();
        //Query para obtener la llave foránea entre las tablas Solicitud y DEPENDENCIA y PROYECTO
        var proyectofk = stmt.executeQuery(`select PROYECTO.id from DEPENDENCIA 
        JOIN PROYECTO on DEPENDENCIA.id = PROYECTO.dependenciafk 
        where (DEPENDENCIA.nombre='${respuestas.dato6}' 
        and PROYECTO.proyecto = '${respuestas.dato7}' 
        and PROYECTO.asignatura = '${respuestas.dato8}' )`);

        var numCols = proyectofk.getMetaData().getColumnCount();
        while (proyectofk.next()) {
          var proyectoFK = '';
          for (var col = 0; col < numCols; col++) {
            proyectoFK += proyectofk.getString(col + 1) + "\n";
          }

          results.setString(6, proyectoFK.toString()); //proyectoFK
          results.execute();
        } //while

        //Obtención del último elemento de la tabla Solicitud 
        var maximo = stmt.executeQuery('select last_insert_id();');
        maximo.next();
        var solicitudlast = maximo.getString(1); //solicitudfk

        //Inserción en la tabla ORDEN
        var results = conn2.prepareStatement('INSERT INTO ORDEN ' +
          '(nombre, depa_solicitante, depa_atencion, solicitudfk, url) values (?, ?, ?, ?, ?)');
        results.setString(1, respuestas.dato3); //nombre
        results.setString(2, respuestas.dato1); //depa_solictante
        results.setString(3, respuestas.dato2); //depa_atencion
        results.setString(4, solicitudlast);
        results.setString(5, answer.answerURL);
        results.execute();

        //Obtención del último elemento de la tabla ORDEN
        var maximo = stmt.executeQuery('select last_insert_id();');
        maximo.next();
        var ordenfk = maximo.getString(1); //ordenfk

        //Inserción en la tabla LISTA
        var results = conn2.prepareStatement('INSERT INTO LISTA ' +
          '(respuesta, observacion, ordenfk)' + 'values (?, ?, ?)');
        results.setString(1, respuestas.dato4);//lv_di
        results.setString(2, respuestas.dato5); //observacion_di
        results.setString(3, ordenfk);
        results.execute();

        var temporal = {}
        temporal.entrega = respuestas.dato9;//entrega
        temporal.numero = respuestas.dato10;//numero
        Logger.log(temporal);

        var solicitudfk = stmt.executeQuery(`SELECT id FROM SOLICITUD 
        where proyectofk = '${proyectoFK.toString()}';`); //proyectofk
        var numCols = solicitudfk.getMetaData().getColumnCount();
        while (solicitudfk.next()) {
          var solicitudFK = '';
          for (var col = 0; col < numCols; col++) {
            solicitudFK += solicitudfk.getString(col + 1) + "\n";
          }
        } //while

        //Validación de los departamentos de atención y solicitud sean los correctos para el registro del avance
        if (respuestas.dato1 == "Diseño Instruccional" && respuestas.dato2 == "Corrección de Estilo") {
          avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
        }
        //------------------------------------------------------------------------

        var iniciales_elemento = '';
        for (var item in temporal) {
          temporal[item].forEach(function (elemento, indice) {

            var entregaM = stmt.executeQuery(`select abreviatura from ELEMENTO
            where (ELEMENTO.nombre='${elemento}')`);
            var numCols = entregaM.getMetaData().getColumnCount();
            while (entregaM.next()) {
              for (var col = 0; col < numCols; col++) {
                iniciales_elemento += entregaM.getString(col + 1) + ",";
              }
            } //while
          });
        }//for
        var iniciales_elemento_mod = ""
        iniciales_elemento_mod = iniciales_elemento.slice(0, -1)

        //------------------------------------------------------------------------

        //Liga con las respuestas del formulario

        var liga = stmt.executeQuery(`select url from ORDEN 
        where (solicitudfk='${solicitudlast}')`);
        var numCols = liga.getMetaData().getColumnCount();
        while (liga.next()) {
          var liga_form = '';
          for (var col = 0; col < numCols; col++) {
            liga_form += liga.getString(col + 1) + "\n";
          }
        } //while

        //------------------------------------------------------------------------

        //Consulta de iniciales para dependencia y proyecto para correo 

        var inicialdep = stmt.executeQuery(`select inicial_dep from DEPENDENCIA 
        where (DEPENDENCIA.nombre='${respuestas.dato6}')`);
        var numCols = inicialdep.getMetaData().getColumnCount();
        while (inicialdep.next()) {
          var iniciales_depend = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_depend += inicialdep.getString(col + 1) + "\n";
          }
        } //while

        var inicialproy = stmt.executeQuery(`select inicial_proy from PROYECTO
            where (PROYECTO.proyecto='${respuestas.dato7}')`);
        var numCols = inicialproy.getMetaData().getColumnCount();
        while (inicialproy.next()) {
          var iniciales_proy = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_proy += inicialproy.getString(col + 1) + "\n";
          }
        } //while

        //-------------------------------------------------------------------------------
        //Consulta del semestre y el total 
        var datos_principal = stmt.executeQuery(`select PRINCIPAL.total, PRINCIPAL.organizacion, PRINCIPAL.semestre  
            from PRINCIPAL 
            JOIN PROYECTO on PRINCIPAL.proyectofk = PROYECTO.id  
            where (PROYECTO.proyecto = '${respuestas.dato7}' 
            and PROYECTO.asignatura = '${respuestas.dato8}' )`);
        var tos = [];
        while (datos_principal.next()) {
          for (var x = 1; x <= datos_principal.getMetaData().getColumnCount(); x++) {
            tos.push(datos_principal.getString(x));
          }
        }
        //Validación de campos nulos o con valor 0
        if (tos[2] == 0) {
          tos[2] = "----";
        }

        if (tos[1] == "Módulo") {
          tos[1] = "Módulos"
        } else if (tos[1] == "Unidad") {
          tos[1] = "Unidades"
        } else if (tos[1] == "Tema") {
          tos[1] = "Temas"
        } else if (tos[1] == "Secuencia") {
          tos[1] = "Secuencias"
        }

        if (respuestas.dato13 == 0) {
          respuestas.dato13 = "----";
        }

        if (respuestas.dato5 == 0) {
          respuestas.dato5 = "----";
        }

        if (respuestas.dato12 == 0) {
          respuestas.dato12 = "----";
        }

        //-------------------------Estructura del correo---------------------
        //con y sin aprobación


        //Validación para no colocar el 0 en el asunto y en cuerpo del correo
        if (respuestas.dato10 == 0 || (respuestas.dato9 == "Escritorio" || respuestas.dato9 == "Sitio público"
          || respuestas.dato9 == "Componentes Generales")) {
          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
          results.setString(1, solicitudlast);
          results.setString(2, iniciales_elemento_mod);
          results.setString(3, 0);
          results.execute();

          var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod +
            " / " + respuestas.dato8 + " / " + iniciales_proy + " / " + iniciales_depend;

          var txtEmail = cuerpoEmailCA_CG_SP_E(
            respuestas.dato3,
            respuestas.dato1,
            respuestas.dato6,
            respuestas.dato8,
            respuestas.dato11,
            respuestas.dato13,
            respuestas.dato12,
            iniciales_proy, tos, iniciales_elemento_mod);
        } else {
          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
          results.setString(1, solicitudlast);
          results.setString(2, iniciales_elemento_mod);
          results.setString(3, respuestas.dato10);
          results.execute();
          var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod + respuestas.dato10 +
            " / " + respuestas.dato8 + " / " + iniciales_proy + " / " + iniciales_depend;

          var txtEmail = cuerpoEmailCA_M_U_T_S(
            respuestas.dato3,
            respuestas.dato1,
            respuestas.dato6,
            respuestas.dato8,
            respuestas.dato11,
            respuestas.dato13,
            respuestas.dato12,
            iniciales_proy, tos, iniciales_elemento_mod, respuestas.dato10);
        }

        var cuerpoCA = "Da clic en esta <a href = " + liga_form
          + ">liga</a> para aprobar o rechazar la solicitud. <br> Saludos cordiales!!!";

        var parte1 = listaVerificacion(respuestas.dato4, lv_di);


        var observaciones_tabla = '<tr><th style="border:1px solid;padding:5px;text-align:inherit;font-weight:lighter;"' 
        + 'colspan="2">' + 'Observaciones específicas: </th><td style="border:1px solid;" colspan="8">' 
        + respuestas.dato5 + '</td></tr>';

        if (respuestas.dato1 == "Diseño Instruccional" && respuestas.dato2 == "Corrección de Estilo") {
          var datosDeptos = [];
          datosDeptos = deptoDI(proyectoFK); //Retorna nombre, correoCDI, correoRDI en ese orden

          MailApp.sendEmail({

            to: ("karen_maya@cuaieed.unam.mx"),
            subject: asuntoCA,
            htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>" + txtEmail
              + "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>" + cuerpoCA
              + "<br><br>TO: " + ("__" + datosDeptos[1])
              + "<br><br>CC: " + ("__" + datosDeptos[2])
          });

        } else {

          var nombreRemitente = remitenteEmail(respuestas.email);
          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: "No aplica / " + asuntoCA,
            htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
              + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
              + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
              + "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>Saludos cordiales!!!"
              + "<br><br>TO: " + respuestas.email
          });
        }
      } //15.0      

      // Flujo de trabajo Orden -> Corrección -> LVDI, Observación -> Dependencia -> Proyecto -> Solicitud
      if (Object.keys(respuestas).length == 14.0) {
        var results = conn2.prepareStatement('INSERT INTO SOLICITUD ' +
          '(nombre, instrucciones, ruta, observacion, email, proyectofk)' +
          'values (?, ?, ?, ?, ?, ?)');
        results.setString(1, respuestas.solicitud);
        results.setString(2, respuestas.dato10); //instrucciones
        results.setString(3, respuestas.dato11); //ruta
        results.setString(4, respuestas.dato12); //observacion
        results.setString(5, respuestas.email);

        var stmt = conn2.createStatement();
        //Query para obtener la llave foránea entre las tablas Solicitud y DEPENDENCIA y PROYECTO
        var proyectofk = stmt.executeQuery(`select PROYECTO.id from DEPENDENCIA 
                      JOIN PROYECTO on DEPENDENCIA.id = PROYECTO.dependenciafk 
                      where (DEPENDENCIA.nombre='${respuestas.dato6}' 
                      and PROYECTO.proyecto = '${respuestas.dato7}' )`);
        var numCols = proyectofk.getMetaData().getColumnCount();
        while (proyectofk.next()) {
          var proyectoFK = '';
          for (var col = 0; col < numCols; col++) {
            proyectoFK += proyectofk.getString(col + 1) + "\n";
          }
          results.setString(6, proyectoFK.toString()); //dependenciafk
          results.execute();
        } //while

        //Obtención del último elemento de la tabla Solicitud 
        var maximo = stmt.executeQuery('select last_insert_id();');
        maximo.next();
        var solicitudlast = maximo.getString(1); //solicitudfk

        //Inserción en la tabla ORDEN
        var results = conn2.prepareStatement('INSERT INTO ORDEN ' +
          '(nombre, depa_solicitante, depa_atencion, solicitudfk, url) values (?, ?, ?, ?, ?)');
        results.setString(1, respuestas.dato3); //nombre
        results.setString(2, respuestas.dato1); //depa_solictante
        results.setString(3, respuestas.dato2); //depa_atencion
        results.setString(4, solicitudlast);
        results.setString(5, answer.answerURL);
        results.execute();

        //Obtención del último elemento de la tabla ORDEN
        var maximo = stmt.executeQuery('select last_insert_id();');
        maximo.next();
        var ordenfk = maximo.getString(1); //ordenfk

        //Inserción en la tabla LISTA
        var results = conn2.prepareStatement('INSERT INTO LISTA ' +
          '(respuesta, observacion, ordenfk)' + 'values (?, ?, ?)');
        results.setString(1, respuestas.dato4);//lv_di
        results.setString(2, respuestas.dato5); //observacion_di
        results.setString(3, ordenfk);
        results.execute();

        //Se utiliza el arreglo "temporal" para el almacenado de (número,ELEMENTOfk,solicitudfk)en la tabla MATERIAL 
        // con base a la búsqueda de las llaves foráneas de la tabla ELEMENTO
        var temporal = {}
        temporal.entrega = respuestas.dato8;//entrega
        temporal.numero = respuestas.dato9;//numero
        Logger.log(temporal);

        var solicitudfk = stmt.executeQuery(`SELECT id FROM SOLICITUD 
        where proyectofk = '${proyectoFK.toString()}';`); //proyectofk
        var numCols = solicitudfk.getMetaData().getColumnCount();
        while (solicitudfk.next()) {
          var solicitudFK = '';
          for (var col = 0; col < numCols; col++) {
            solicitudFK += solicitudfk.getString(col + 1) + "\n";
          }
        } //while

        //Validación de los departamentos de atención y solicitud sean los correctos para el registro del avance
        if ((respuestas.dato1 == "Diseño Instruccional") && (respuestas.dato2 == "Corrección de Estilo")) {
          avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
        }

        //------------------------------------------------------------------------
        var iniciales_elemento = '';
        for (var item in temporal) {
          temporal[item].forEach(function (elemento, indice) {
            var entregaM = stmt.executeQuery(`select abreviatura from ELEMENTO
              where (ELEMENTO.nombre='${elemento}')`);
            var numCols = entregaM.getMetaData().getColumnCount();
            while (entregaM.next()) {

              for (var col = 0; col < numCols; col++) {
                if (col == numCols - 1) {
                  iniciales_elemento += entregaM.getString(col + 1) + ",";
                } else {
                  iniciales_elemento += entregaM.getString(col + 1);
                }

              }
            } //while
          });
        }//for

        var iniciales_elemento_mod = ""
        iniciales_elemento_mod = iniciales_elemento.slice(0, -1)


        //------------------------------------------------------------------------

        //Liga con las respuestas del formulario

        var liga = stmt.executeQuery(`select url from ORDEN 
        where (solicitudfk='${solicitudlast}')`);
        var numCols = liga.getMetaData().getColumnCount();
        while (liga.next()) {
          var liga_form = '';
          for (var col = 0; col < numCols; col++) {
            liga_form += liga.getString(col + 1) + "\n";
          }
        } //while

        //------------------------------------------------------------------------

        //Consulta de iniciales para dependencia y proyecto para correo 

        var inicialdep = stmt.executeQuery(`select inicial_dep from DEPENDENCIA 
          where (DEPENDENCIA.nombre='${respuestas.dato6}')`);
        var numCols = inicialdep.getMetaData().getColumnCount();
        while (inicialdep.next()) {
          var iniciales_depend = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_depend += inicialdep.getString(col + 1) + "\n";
          }
        } //while
        var inicialproy = stmt.executeQuery(`select inicial_proy from PROYECTO
            where (PROYECTO.proyecto='${respuestas.dato7}')`);
        var numCols = inicialproy.getMetaData().getColumnCount();
        while (inicialproy.next()) {
          var iniciales_proy = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_proy += inicialproy.getString(col + 1) + "\n";
          }
        } //while

        //-------------------------------------------------------------------------------
        //Consulta del semestre y el total 
        var datos_principal = stmt.executeQuery(`select PRINCIPAL.total, PRINCIPAL.organizacion, PRINCIPAL.semestre  
            from PRINCIPAL 
            JOIN PROYECTO on PRINCIPAL.proyectofk = PROYECTO.id  
            where (PROYECTO.proyecto = '${respuestas.dato7}');`);
        var tos = [];
        while (datos_principal.next()) {
          for (var x = 1; x <= datos_principal.getMetaData().getColumnCount(); x++) {
            tos.push(datos_principal.getString(x));
          }
        }
        //Validación de campos nulos o con valor 0
        if (tos[2] == 0) {
          tos[2] = "----";
        }
        
        if (tos[1] == "Módulo") {
          tos[1] = "Módulos"
        } else if (tos[1] == "Unidad") {
          tos[1] = "Unidades"
        } else if (tos[1] == "Tema") {
          tos[1] = "Temas"
        } else if (tos[1] == "Secuencia") {
          tos[1] = "Secuencias"
        }
        if (respuestas.dato12 == 0) {
          respuestas.dato12 = "----";
        }

        if (respuestas.dato5 == 0) {
          respuestas.dato5 = "----";
        }

        if (respuestas.dato11 == 0) {
          respuestas.dato11 == "----";
        }

        //-------------------------Estructura del correo---------------------
        if (respuestas.dato9 == 0 || (respuestas.dato8 == "Escritorio" || respuestas.dato8 == "Sitio público"
          || respuestas.dato8 == "Componentes Generales")) {
          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
          results.setString(1, solicitudlast);
          results.setString(2, iniciales_elemento_mod);
          results.setString(3, 0);
          results.execute();

          var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod + " / "
            + iniciales_proy + " / " + iniciales_depend;
          var txtEmail = cuerpoEmailSA_CG_SP_E(
            respuestas.dato3,
            respuestas.dato1,
            respuestas.dato6,
            respuestas.dato10,
            respuestas.dato12,
            respuestas.dato11,
            iniciales_proy, tos, iniciales_elemento_mod);

        } else {

          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
          results.setString(1, solicitudlast);
          results.setString(2, iniciales_elemento_mod);
          results.setString(3, respuestas.dato9);
          results.execute();

          var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod + respuestas.dato9 + " / "
            + iniciales_proy + " / " + iniciales_depend;

          var txtEmail = cuerpoEmailSA_M_U_T_S(
            respuestas.dato3,
            respuestas.dato1,
            respuestas.dato6,
            respuestas.dato10,
            respuestas.dato12,
            respuestas.dato11,
            iniciales_proy, tos, iniciales_elemento_mod, respuestas.dato9);

        }

        var cuerpoCA = "Da clic en esta <a href = " + liga_form
          + ">liga</a> para aprobar o rechazar la solicitud. <br><br> Saludos cordiales!!!";


        var parte1 = listaVerificacion(respuestas.dato4, lv_di);

        var observaciones_tabla = '<tr><th style="border:1px solid;padding:5px;text-align:inherit;font-weight:lighter;"' 
        + 'colspan="2">' + 'Observaciones específicas: </th><td style="border:1px solid;" colspan="8">' 
        + respuestas.dato5 + '</td></tr>';

        if (respuestas.dato1 == "Diseño Instruccional" && respuestas.dato2 == "Corrección de Estilo") {
          var datosDeptos = [];
          datosDeptos = deptoDI(proyectoFK); //Retorna nombre, correoCDI, correoRDI en ese orden
          MailApp.sendEmail({
            //to: ("__" + correoCDI),
            //cc: ("__" + correoRDI),
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: asuntoCA,
            htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>" + txtEmail
              + "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>" + cuerpoCA
              + "<br><br>TO: " + ("__" + datosDeptos[1])
              + "<br><br>CC: " + ("__" + datosDeptos[2])
          });
        } else {

          var nombreRemitente = remitenteEmail(respuestas.email);
          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: "No aplica / " + asuntoCA,
            htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
              + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
              + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
              + "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>Saludos cordiales!!!"
              + "<br><br>TO: " + respuestas.email
          });
        }


      } //14.0                 
      break;
    case "Integración":
      if (Object.keys(respuestas).length == 15.0) {
        var results = conn2.prepareStatement('INSERT INTO SOLICITUD ' +
          '(nombre, instrucciones, ruta, observacion, email, proyectofk)' +
          'values (?, ?, ?, ?, ?, ?)');
        results.setString(1, respuestas.solicitud);
        results.setString(2, respuestas.dato11); //instrucciones
        results.setString(3, respuestas.dato12); //ruta
        results.setString(4, respuestas.dato13); //observacion
        results.setString(5, respuestas.email);

        var stmt = conn2.createStatement();

        //Query para obtener la llave foránea entre las tablas SOLICITUD y DEPENDENCIA y PROYECTO
        var proyectofk = stmt.executeQuery(`select PROYECTO.id from DEPENDENCIA 
        JOIN PROYECTO on DEPENDENCIA.id = PROYECTO.dependenciafk 
        where (DEPENDENCIA.nombre='${respuestas.dato6}' 
        and PROYECTO.proyecto = '${respuestas.dato7}' 
        and PROYECTO.asignatura = '${respuestas.dato8}' )`);

        var numCols = proyectofk.getMetaData().getColumnCount();
        while (proyectofk.next()) {
          var proyectoFK = '';
          for (var col = 0; col < numCols; col++) {
            proyectoFK += proyectofk.getString(col + 1) + "\n";
          }
          results.setString(6, proyectoFK.toString()); //proyectoFK
          results.execute();
        } //while

        //Obtención del último elemento de la tabla Solicitud           
        var maximo = stmt.executeQuery('select last_insert_id();');
        maximo.next();
        var solicitudlast = maximo.getString(1); //solicitudfk

        //Inserción en la tabla ORDEN
        var results = conn2.prepareStatement('INSERT INTO ORDEN ' +
          '(nombre, depa_solicitante, depa_atencion, solicitudfk, url) values (?, ?, ?, ?, ?)');
        results.setString(1, respuestas.dato3); //nombre
        results.setString(2, respuestas.dato1); //depa_solictante
        results.setString(3, respuestas.dato2); //depa_atencion
        results.setString(4, solicitudlast);
        results.setString(5, answer.answerURL);
        results.execute();

        //Obtención del último elemento de la tabla LISTA
        var maximo = stmt.executeQuery('select last_insert_id();');
        maximo.next();
        var ordenfk = maximo.getString(1); //ordenfk

        //Inserción en la tabla LISTA
        var results = conn2.prepareStatement('INSERT INTO LISTA ' +
          '(respuesta, observacion, ordenfk)' + 'values (?, ?, ?)');
        results.setString(1, respuestas.dato4);//lv_di
        results.setString(2, respuestas.dato5); //observacion_di
        results.setString(3, ordenfk);
        results.execute();
        //------------------------------------------------------------------------
        var temporal = {}
        temporal.entrega = respuestas.dato9;//entrega
        temporal.numero = respuestas.dato10;//numero
        Logger.log(temporal);

        var solicitudfk = stmt.executeQuery(`SELECT id FROM SOLICITUD 
        where proyectofk = '${proyectoFK.toString()}';`); //proyectofk
        var numCols = solicitudfk.getMetaData().getColumnCount();
        while (solicitudfk.next()) {
          var solicitudFK = '';
          for (var col = 0; col < numCols; col++) {
            solicitudFK += solicitudfk.getString(col + 1) + "\n";
          }
        } //while

        //Validación de los departamentos de atención y solicitud sean los correctos para el registro del avance
        if ((respuestas.dato1 == "Diseño Instruccional" && respuestas.dato2 == "Multimedia")
          || (respuestas.dato1 == "Corrección de Estilo" && respuestas.dato2 == "Multimedia")) {
          avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
        }

        //------------------------------------------------------------------------

        var iniciales_elemento = '';
        for (var item in temporal) {
          temporal[item].forEach(function (elemento, indice) {

            var entregaM = stmt.executeQuery(`select abreviatura from ELEMENTO
          where (ELEMENTO.nombre='${elemento}')`);
            var numCols = entregaM.getMetaData().getColumnCount();
            while (entregaM.next()) {
              for (var col = 0; col < numCols; col++) {
                iniciales_elemento += entregaM.getString(col + 1) + ",";
              }
            } //while
          });
        }//for
        var iniciales_elemento_mod = ""
        iniciales_elemento_mod = iniciales_elemento.slice(0, -1)

        //------------------------------------------------------------------------


        //Liga con las respuestas del formulario

        var liga = stmt.executeQuery(`select url from ORDEN 
        where (solicitudfk='${solicitudlast}')`);
        var numCols = liga.getMetaData().getColumnCount();
        while (liga.next()) {
          var liga_form = '';
          for (var col = 0; col < numCols; col++) {
            liga_form += liga.getString(col + 1) + "\n";
          }
        } //while

        //------------------------------------------------------------------------

        //Consulta de iniciales para dependencia y proyecto para correo 

        var inicialdep = stmt.executeQuery(`select inicial_dep from DEPENDENCIA 
        where (DEPENDENCIA.nombre='${respuestas.dato6}')`);
        var numCols = inicialdep.getMetaData().getColumnCount();
        while (inicialdep.next()) {
          var iniciales_depend = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_depend += inicialdep.getString(col + 1) + "\n";
          }
        } //while
        var inicialproy = stmt.executeQuery(`select inicial_proy from PROYECTO
            where (PROYECTO.proyecto='${respuestas.dato7}')`);
        var numCols = inicialproy.getMetaData().getColumnCount();
        while (inicialproy.next()) {
          var iniciales_proy = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_proy += inicialproy.getString(col + 1) + "\n";
          }
        } //while

        //-------------------------------------------------------------------------------
        //Consulta del semestre y el total 
        var datos_principal = stmt.executeQuery(`select PRINCIPAL.total, PRINCIPAL.organizacion, PRINCIPAL.semestre  
            from PRINCIPAL 
            JOIN PROYECTO on PRINCIPAL.proyectofk = PROYECTO.id  
            where (PROYECTO.proyecto = '${respuestas.dato7}' 
            and PROYECTO.asignatura = '${respuestas.dato8}' )`);
        var tos = [];
        while (datos_principal.next()) {
          for (var x = 1; x <= datos_principal.getMetaData().getColumnCount(); x++) {
            tos.push(datos_principal.getString(x));
          }
        }
        //Validación de campos nulos o con valor 0
        if (tos[2] == 0) {
          tos[2] = "----";
        }
        if (tos[1] == "Módulo") {
          tos[1] = "Módulos"
        } else if (tos[1] == "Unidad") {
          tos[1] = "Unidades"
        } else if (tos[1] == "Tema") {
          tos[1] = "Temas"
        } else if (tos[1] == "Secuencia") {
          tos[1] = "Secuencias"
        }
        if (respuestas.dato13 == 0) {
          respuestas.dato13 = "----";
        }

        if (respuestas.dato5 == 0) {
          respuestas.dato5 = "----";
        }

        if (respuestas.dato12 == 0) {
          respuestas.dato12 = "----";
        }

        //-------------------------Estructura del correo---------------------
        if (respuestas.dato10 == 0 || (respuestas.dato9 == "Escritorio" || respuestas.dato9 == "Sitio público"
          || respuestas.dato9 == "Componentes Generales")) {
          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
          results.setString(1, solicitudlast);
          results.setString(2, iniciales_elemento_mod);
          results.setString(3, 0);
          results.execute();
          var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod +
            " / " + respuestas.dato8 + " / " + iniciales_proy + " / " + iniciales_depend;

          var txtEmail = cuerpoEmailCA_CG_SP_E(
            respuestas.dato3,
            respuestas.dato1,
            respuestas.dato6,
            respuestas.dato8,
            respuestas.dato11,
            respuestas.dato13,
            respuestas.dato12,
            iniciales_proy, tos, iniciales_elemento_mod);


        } else {
          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
          results.setString(1, solicitudlast);
          results.setString(2, iniciales_elemento_mod);
          results.setString(3, respuestas.dato10);
          results.execute();

          var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod + respuestas.dato10
            + " / " + respuestas.dato8 + " / " + iniciales_proy + " / " + iniciales_depend;

          var txtEmail = cuerpoEmailCA_M_U_T_S(
            respuestas.dato3,
            respuestas.dato1,
            respuestas.dato6,
            respuestas.dato8,
            respuestas.dato11,
            respuestas.dato13,
            respuestas.dato12,
            iniciales_proy, tos, iniciales_elemento_mod, respuestas.dato10);

        }//else


        var cuerpoCA = "Da clic en esta <a href = " + liga_form
          + ">liga</a> para aprobar o rechazar la solicitud. <br> Saludos cordiales!!!";
        var parte1 = listaVerificacion(respuestas.dato4, lv_ce);

        var observaciones_tabla = '<tr><th style="border:1px solid;padding:5px;text-align:inherit;font-weight:lighter;"' 
        + 'colspan="2">' + 'Observaciones específicas: </th><td style="border:1px solid;" colspan="8">' 
        + respuestas.dato5 + '</td></tr>';

        if (respuestas.dato1 == "Diseño Instruccional" && respuestas.dato2 == "Multimedia") {

          var datosDeptos = [];
          datosDeptos = deptoDI(proyectoFK); //Retorna nombre, correoCDI, correoRDI en ese orden
          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: asuntoCA,
            htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>" + txtEmail
              + "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>" + cuerpoCA
              + "<br><br>TO: " + ("__" + datosDeptos[1])
              + "<br><br>CC: " + ("__" + datosDeptos[2])
          });
        } else if (respuestas.dato1 == "Corrección de Estilo" && respuestas.dato2 == "Multimedia") {

          var datosDeptos = [];
          datosDeptos = deptoCE(proyectoFK); //Retorna nombre, correoRCE

          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: asuntoCA,
            htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>" + txtEmail
              + "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>" + cuerpoCA
              + "<br><br>TO: " + ("__" + datosDeptos[1]),
          });
        } else {
          var nombreRemitente = remitenteEmail(respuestas.email);
          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: "No aplica / " + asuntoCA,
            htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
              + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
              + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
              + "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>Saludos cordiales!!!"
              + "<br><br> Saludos cordiales"
              + "<br><br>TO: " + respuestas.email
          });
        }
      } //15.0      
      // Flujo de trabajo Orden -> Integración -> LVDI, Observación -> Dependencia -> Proyecto -> Solicitud
      if (Object.keys(respuestas).length == 14.0) {
        var results = conn2.prepareStatement('INSERT INTO SOLICITUD ' +
          '(nombre, instrucciones, ruta, observacion, email, proyectofk)' +
          'values (?, ?, ?, ?, ?, ?)');
        results.setString(1, respuestas.solicitud);
        results.setString(2, respuestas.dato10); //instrucciones
        results.setString(3, respuestas.dato11); //ruta
        results.setString(4, respuestas.dato12); //observacion
        results.setString(5, respuestas.email);


        var stmt = conn2.createStatement();
        //Query para obtener la llave foránea entre las tablas Solicitud y DEPENDENCIA y PROYECTO
        var proyectofk = stmt.executeQuery(`select PROYECTO.id from DEPENDENCIA 
        JOIN PROYECTO on DEPENDENCIA.id = PROYECTO.dependenciafk 
        where (DEPENDENCIA.nombre='${respuestas.dato6}' 
        and PROYECTO.proyecto = '${respuestas.dato7}' )`);

        var numCols = proyectofk.getMetaData().getColumnCount();
        while (proyectofk.next()) {
          var proyectoFK = '';
          for (var col = 0; col < numCols; col++) {
            proyectoFK += proyectofk.getString(col + 1) + "\n";
          }

          results.setString(6, proyectoFK.toString()); //proyectoFK
          results.execute();
        } //while

        //Obtención del último elemento de la tabla Solicitud 
        var maximo = stmt.executeQuery('select last_insert_id();');
        maximo.next();
        var solicitudlast = maximo.getString(1); //solicitudfk
        //Inserción en la tabla ORDEN
        var results = conn2.prepareStatement('INSERT INTO ORDEN ' +
          '(nombre, depa_solicitante, depa_atencion, solicitudfk, url) values (?, ?, ?, ?, ?)');
        results.setString(1, respuestas.dato3); //nombre
        results.setString(2, respuestas.dato1); //depa_solictante
        results.setString(3, respuestas.dato2); //depa_atencion
        results.setString(4, solicitudlast);
        results.setString(5, answer.answerURL);
        results.execute();

        //Obtención del último elemento de la tabla ORDEN
        var maximo = stmt.executeQuery('select last_insert_id();');
        maximo.next();
        var ordenfk = maximo.getString(1); //ordenfk
        //Inserción en la tabla LISTA
        var results = conn2.prepareStatement('INSERT INTO LISTA ' +
          '(respuesta, observacion, ordenfk)' + 'values (?, ?, ?)');
        results.setString(1, respuestas.dato4);//lv_di
        results.setString(2, respuestas.dato5); //observacion_di
        results.setString(3, ordenfk);
        results.execute();
        //------------------------------------------------------------------------

        var temporal = {}
        temporal.entrega = respuestas.dato8;//entrega
        temporal.numero = respuestas.dato9;//numero
        Logger.log(temporal);

        var solicitudfk = stmt.executeQuery(`SELECT id FROM SOLICITUD 
       where proyectofk = '${proyectoFK.toString()}';`); //proyectofk
        var numCols = solicitudfk.getMetaData().getColumnCount();
        while (solicitudfk.next()) {
          var solicitudFK = '';
          for (var col = 0; col < numCols; col++) {
            solicitudFK += solicitudfk.getString(col + 1) + "\n";
          }
        } //while

        //Validación de los departamentos de atención y solicitud sean los correctos para el registro del avance
        if ((respuestas.dato1 == "Diseño Instruccional" && respuestas.dato2 == "Multimedia")
          || (respuestas.dato1 == "Corrección de Estilo" && respuestas.dato2 == "Multimedia")) {
          avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
        }

        //------------------------------------------------------------------------

        var iniciales_elemento = '';
        for (var item in temporal) {
          temporal[item].forEach(function (elemento, indice) {
            var entregaM = stmt.executeQuery(`select abreviatura from ELEMENTO
          where (ELEMENTO.nombre='${elemento}')`);
            var numCols = entregaM.getMetaData().getColumnCount();
            while (entregaM.next()) {
              for (var col = 0; col < numCols; col++) {
                iniciales_elemento += entregaM.getString(col + 1) + ",";
              }
            } //while
          });
        }//for
        var iniciales_elemento_mod = ""
        iniciales_elemento_mod = iniciales_elemento.slice(0, -1)

        //------------------------------------------------------------------------

        //Liga con las respuestas del formulario

        var liga = stmt.executeQuery(`select url from ORDEN 
        where (solicitudfk='${solicitudlast}')`);
        var numCols = liga.getMetaData().getColumnCount();
        while (liga.next()) {
          var liga_form = '';
          for (var col = 0; col < numCols; col++) {
            liga_form += liga.getString(col + 1) + "\n";
          }
        } //while

        //------------------------------------------------------------------------

        //Consulta de iniciales para dependencia y proyecto para correo 

        var inicialdep = stmt.executeQuery(`select inicial_dep from DEPENDENCIA 
          where (DEPENDENCIA.nombre='${respuestas.dato6}')`);
        var numCols = inicialdep.getMetaData().getColumnCount();
        while (inicialdep.next()) {
          var iniciales_depend = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_depend += inicialdep.getString(col + 1) + "\n";
          }
        } //while
        var inicialproy = stmt.executeQuery(`select inicial_proy from PROYECTO
            where (PROYECTO.proyecto='${respuestas.dato7}')`);
        var numCols = inicialproy.getMetaData().getColumnCount();
        while (inicialproy.next()) {
          var iniciales_proy = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_proy += inicialproy.getString(col + 1) + "\n";
          }
        } //while

        //-------------------------------------------------------------------------------
        //Consulta del semestre y el total 
        var datos_principal = stmt.executeQuery(`select PRINCIPAL.total, PRINCIPAL.organizacion, PRINCIPAL.semestre  
            from PRINCIPAL 
            JOIN PROYECTO on PRINCIPAL.proyectofk = PROYECTO.id  
            where (PROYECTO.proyecto = '${respuestas.dato7}');`);
        var tos = [];
        while (datos_principal.next()) {
          for (var x = 1; x <= datos_principal.getMetaData().getColumnCount(); x++) {
            tos.push(datos_principal.getString(x));
          }
        }
        //Validación de campos nulos o con valor 0
        if (tos[2] == 0) {
          tos[2] = "----";
        }
        if (tos[1] == "Módulo") {
          tos[1] = "Módulos"
        } else if (tos[1] == "Unidad") {
          tos[1] = "Unidades"
        } else if (tos[1] == "Tema") {
          tos[1] = "Temas"
        } else if (tos[1] == "Secuencia") {
          tos[1] = "Secuencias"
        }        
        if (respuestas.dato12 == 0) {
          respuestas.dato12 = "----";
        }

        if (respuestas.dato5 == 0) {
          respuestas.dato5 = "----";
        }

        if (respuestas.dato11 == 0) {
          respuestas.dato11 = "----";
        }
        //-------------------------Estructura del correo---------------------
        if (respuestas.dato9 == 0 || (respuestas.dato8 == "Escritorio" || respuestas.dato8 == "Sitio público"
          || respuestas.dato8 == "Componentes Generales")) {
          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
          results.setString(1, solicitudlast);
          results.setString(2, iniciales_elemento_mod);
          results.setString(3, 0);
          results.execute();
          var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod + " / "
            + iniciales_proy + " / " + iniciales_depend;

          var txtEmail = cuerpoEmailSA_CG_SP_E(
            respuestas.dato3,
            respuestas.dato1,
            respuestas.dato6,
            respuestas.dato10,
            respuestas.dato12,
            respuestas.dato11,
            iniciales_proy, tos, iniciales_elemento_mod);
        } else {
          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
          results.setString(1, solicitudlast);
          results.setString(2, iniciales_elemento_mod);
          results.setString(3, respuestas.dato9);
          results.execute();

          var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod + respuestas.dato9 + " / "
            + iniciales_proy + " / " + iniciales_depend;

          var txtEmail = cuerpoEmailSA_M_U_T_S(
            respuestas.dato3,
            respuestas.dato1,
            respuestas.dato6,
            respuestas.dato10,
            respuestas.dato12,
            respuestas.dato11,
            iniciales_proy, tos, iniciales_elemento_mod, respuestas.dato9);
        }

        var cuerpoCA = "Da clic en esta <a href = " + liga_form
          + ">liga</a> para aprobar o rechazar la solicitud.<br><br> Saludos cordiales!!!";
        var parte1 = listaVerificacion(respuestas.dato4, lv_ce);

        var observaciones_tabla = '<tr><th style="border:1px solid;padding:5px;text-align:inherit;font-weight:lighter;"' 
        + 'colspan="2">' + 'Observaciones específicas: </th><td style="border:1px solid;" colspan="8">' 
        + respuestas.dato5 + '</td></tr>';

        if (respuestas.dato1 == "Diseño Instruccional" && respuestas.dato2 == "Multimedia") {
          var datosDeptos = [];
          datosDeptos = deptoDI(proyectoFK); //Retorna nombre, correoCDI, correoRDI en ese orden

          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: asuntoCA,
            htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>" + txtEmail
              + "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>" + cuerpoCA
              + "<br><br>TO: " + ("__" + datosDeptos[1])
              + "<br><br>CC: " + ("__" + datosDeptos[2])
          });
        } else if (respuestas.dato1 == "Corrección de Estilo" && respuestas.dato2 == "Multimedia") {
          var datosDeptos = [];
          datosDeptos = deptoCE(proyectoFK); //Retorna nombre, correoRCE

          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: asuntoCA,
            htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>" + txtEmail
              + "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>" + cuerpoCA
              + "<br><br>TO: " + ("__" + datosDeptos[1]),
          });
        } else {
          var nombreRemitente = remitenteEmail(respuestas.email);
          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: "No aplica / " + asuntoCA,
            htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
              + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
              + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
              + "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>Saludos cordiales!!!"
              + "<br><br> Saludos cordiales"
              + "<br><br>TO: " + respuestas.email
          });
        }
      } //14.0          

      break;

    case "Programación finalizada":
      // Flujo de trabajo Orden -> Programación finalizada -> LVPR, Observación -> Dependencia -> 
      //Proyecto -> Asignatura -> Solicitud
      if (Object.keys(respuestas).length == 15.0) {
        var results = conn2.prepareStatement('INSERT INTO SOLICITUD ' +
          '(nombre, instrucciones, ruta, observacion, email, proyectofk)' +
          'values (?, ?, ?, ?, ?, ?)');
        results.setString(1, respuestas.solicitud);
        results.setString(2, respuestas.dato11); //instrucciones
        results.setString(3, respuestas.dato12); //ruta
        results.setString(4, respuestas.dato13); //observacion
        results.setString(5, respuestas.email);

        var stmt = conn2.createStatement();
        var proyectofk = stmt.executeQuery(`select PROYECTO.id from DEPENDENCIA 
        JOIN PROYECTO on DEPENDENCIA.id = PROYECTO.dependenciafk 
        where (DEPENDENCIA.nombre='${respuestas.dato6}' 
        and PROYECTO.proyecto = '${respuestas.dato7}' 
        and PROYECTO.asignatura = '${respuestas.dato8}' )`);

        var numCols = proyectofk.getMetaData().getColumnCount();
        while (proyectofk.next()) {
          var proyectoFK = '';
          for (var col = 0; col < numCols; col++) {
            proyectoFK += proyectofk.getString(col + 1) + "\n";
          }

          results.setString(6, proyectoFK.toString());//proyectoFK
          results.execute();
        } //while

        var maximo = stmt.executeQuery('select last_insert_id();');
        maximo.next();
        var solicitudlast = maximo.getString(1); //solicitudfk
        var results = conn2.prepareStatement('INSERT INTO ORDEN ' +
          '(nombre, depa_solicitante, depa_atencion, solicitudfk, url) values (?, ?, ?, ?, ?)');
        results.setString(1, respuestas.dato3); //nombre
        results.setString(2, respuestas.dato1); //depa_solictante
        results.setString(3, respuestas.dato2); //depa_atencion
        results.setString(4, solicitudlast);
        results.setString(5, answer.answerURL);
        results.execute();

        var maximo = stmt.executeQuery('select last_insert_id();');
        maximo.next();
        var ordenfk = maximo.getString(1); //ordenfk

        //Inserción en la tabla LISTA
        var results = conn2.prepareStatement('INSERT INTO LISTA ' +
          '(respuesta, observacion, ordenfk)' + 'values (?, ?, ?)');
        results.setString(1, respuestas.dato4);//lv_di
        results.setString(2, respuestas.dato5); //observacion_di
        results.setString(3, ordenfk);
        results.execute();

        //------------------------------------------------------------------------

        var temporal = {}
        temporal.entrega = respuestas.dato9;//entrega
        temporal.numero = respuestas.dato10;//numero
        Logger.log(temporal);

        var solicitudfk = stmt.executeQuery(`SELECT id FROM SOLICITUD 
        where proyectofk = '${proyectoFK.toString()}';`); //proyectofk
        var numCols = solicitudfk.getMetaData().getColumnCount();
        while (solicitudfk.next()) {
          var solicitudFK = '';
          for (var col = 0; col < numCols; col++) {
            solicitudFK += solicitudfk.getString(col + 1) + "\n";
          }
        } //while

        //Validación de los departamentos de atención y solicitud sean los correctos para el registro del avance
        if (respuestas.dato1 == "Programación de Recursos" && respuestas.dato2 == "Multimedia") {
          avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
        }

        //------------------------------------------------------------------------

        var iniciales_elemento = '';
        for (var item in temporal) {
          temporal[item].forEach(function (elemento, indice) {

            var entregaM = stmt.executeQuery(`select abreviatura from ELEMENTO
          where (ELEMENTO.nombre='${elemento}')`);
            var numCols = entregaM.getMetaData().getColumnCount();
            while (entregaM.next()) {
              for (var col = 0; col < numCols; col++) {
                iniciales_elemento += entregaM.getString(col + 1) + ",";
              }
            } //while
          });
        }//for
        var iniciales_elemento_mod = ""
        iniciales_elemento_mod = iniciales_elemento.slice(0, -1)

        //------------------------------------------------------------------------

        //Liga con las respuestas del formulario

        var liga = stmt.executeQuery(`select url from ORDEN 
        where (solicitudfk='${solicitudlast}')`);
        var numCols = liga.getMetaData().getColumnCount();
        while (liga.next()) {
          var liga_form = '';
          for (var col = 0; col < numCols; col++) {
            liga_form += liga.getString(col + 1) + "\n";
          }
        } //while

        //------------------------------------------------------------------------

        //Consulta de iniciales para dependencia y proyecto para correo 

        var inicialdep = stmt.executeQuery(`select inicial_dep from DEPENDENCIA 
        where (DEPENDENCIA.nombre='${respuestas.dato6}')`);
        var numCols = inicialdep.getMetaData().getColumnCount();
        while (inicialdep.next()) {
          var iniciales_depend = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_depend += inicialdep.getString(col + 1) + "\n";
          }
        } //while
        var inicialproy = stmt.executeQuery(`select inicial_proy from PROYECTO
            where (PROYECTO.proyecto='${respuestas.dato7}')`);
        var numCols = inicialproy.getMetaData().getColumnCount();
        while (inicialproy.next()) {
          var iniciales_proy = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_proy += inicialproy.getString(col + 1) + "\n";
          }
        } //while

        //-------------------------------------------------------------------------------
        //Consulta del semestre y el total 
        var datos_principal = stmt.executeQuery(`select PRINCIPAL.total, PRINCIPAL.organizacion, PRINCIPAL.semestre  
            from PRINCIPAL 
            JOIN PROYECTO on PRINCIPAL.proyectofk = PROYECTO.id  
            where (PROYECTO.proyecto = '${respuestas.dato7}' 
            and PROYECTO.asignatura = '${respuestas.dato8}' )`);
        var tos = [];
        while (datos_principal.next()) {
          for (var x = 1; x <= datos_principal.getMetaData().getColumnCount(); x++) {
            tos.push(datos_principal.getString(x));
          }
        }
        //Validación de campos nulos o con valor 0
        if (tos[2] == 0) {
          tos[2] = "----";
        }
        if (tos[1] == "Módulo") {
          tos[1] = "Módulos"
        } else if (tos[1] == "Unidad") {
          tos[1] = "Unidades"
        } else if (tos[1] == "Tema") {
          tos[1] = "Temas"
        } else if (tos[1] == "Secuencia") {
          tos[1] = "Secuencias"
        }
        if (respuestas.dato13 == 0) {
          respuestas.dato13 = "----";
        }

        if (respuestas.dato5 == 0) {
          respuestas.dato5 = "----";
        }

        if (respuestas.dato12 == 0) {
          respuestas.dato12 = "----";
        }

        //-------------------------Estructura del correo---------------------

        if (respuestas.dato10 == 0 || (respuestas.dato9 == "Escritorio" || respuestas.dato9 == "Sitio público"
          || respuestas.dato9 == "Componentes Generales")) {

          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
          results.setString(1, solicitudlast);
          results.setString(2, iniciales_elemento_mod);
          results.setString(3, 0);
          results.execute();

          var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod +
            " / " + respuestas.dato8 + " / " + iniciales_proy + " / " + iniciales_depend;
          var txtEmail = cuerpoEmailCA_CG_SP_E(
            respuestas.dato3,
            respuestas.dato1,
            respuestas.dato6,
            respuestas.dato8,
            respuestas.dato11,
            respuestas.dato13,
            respuestas.dato12,
            iniciales_proy, tos, iniciales_elemento_mod);

        } else {
          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
          results.setString(1, solicitudlast);
          results.setString(2, iniciales_elemento_mod);
          results.setString(3, respuestas.dato10);
          results.execute();

          var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod + respuestas.dato10 +
            " / " + respuestas.dato8 + " / " + iniciales_proy + " / " + iniciales_depend;

          var txtEmail = cuerpoEmailCA_M_U_T_S(
            respuestas.dato3,
            respuestas.dato1,
            respuestas.dato6,
            respuestas.dato8,
            respuestas.dato11,
            respuestas.dato13,
            respuestas.dato12,
            iniciales_proy, tos, iniciales_elemento_mod, respuestas.dato10);

        }

        var cuerpoCA = "Da clic en esta <a href = " + liga_form
          + ">liga</a> para aprobar o rechazar la solicitud. <br><br> Saludos cordiales!!!";

        var parte1 = listaVerificacion(respuestas.dato4, lv_pr);

        var observaciones_tabla = '<tr><th style="border:1px solid;padding:5px;text-align:inherit;font-weight:lighter;"' 
        + 'colspan="2">' + 'Observaciones específicas: </th><td style="border:1px solid;" colspan="8">' 
        + respuestas.dato5 + '</td></tr>';

        if (respuestas.dato1 == "Programación de Recursos" && respuestas.dato2 == "Multimedia") {

          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: asuntoCA,
            htmlBody: "Hola, Juan.<br><br>" + "Envío para tu aprobación. <br><br>" + txtEmail
              + "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>" + cuerpoCA
              + "<br><br>TO: " + ("__" + correos.CPR)
          });
        } else {
          var nombreRemitente = remitenteEmail(respuestas.email);
          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: "No aplica / " + asuntoCA,
            htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
              + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
              + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
              + "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>Saludos cordiales!!!"
              + "<br><br>TO: " + respuestas.email
          });
        }
      } //15.0      

      // Flujo de trabajo Orden -> Programación finalizada -> LVPR, Observación -> Dependencia -> 
      //Proyecto -> Asignatura -> Solicitud
      if (Object.keys(respuestas).length == 14.0) {
        var results = conn2.prepareStatement('INSERT INTO SOLICITUD ' +
          '(nombre, instrucciones, ruta, observacion, email, proyectofk)' +
          'values (?, ?, ?, ?, ?, ?)');

        results.setString(1, respuestas.solicitud);
        results.setString(2, respuestas.dato10); //instrucciones
        results.setString(3, respuestas.dato11); //ruta
        results.setString(4, respuestas.dato12); //observacion
        results.setString(5, respuestas.email);

        var stmt = conn2.createStatement();
        var proyectofk = stmt.executeQuery(`select PROYECTO.id from DEPENDENCIA 
        JOIN PROYECTO on DEPENDENCIA.id = PROYECTO.dependenciafk 
        where (DEPENDENCIA.nombre='${respuestas.dato6}' 
        and PROYECTO.proyecto = '${respuestas.dato7}' )`);

        var numCols = proyectofk.getMetaData().getColumnCount();
        while (proyectofk.next()) {
          var proyectoFK = '';
          for (var col = 0; col < numCols; col++) {
            proyectoFK += proyectofk.getString(col + 1) + "\n";
          }

          results.setString(6, proyectoFK.toString());//proyectoFK
          results.execute();
        } //while

        var maximo = stmt.executeQuery('select last_insert_id();');
        maximo.next();
        var solicitudlast = maximo.getString(1); //solicitudfk
        var results = conn2.prepareStatement('INSERT INTO ORDEN ' +
          '(nombre, depa_solicitante, depa_atencion, solicitudfk, url) values (?, ?, ?, ?, ?)');
        results.setString(1, respuestas.dato3); //nombre
        results.setString(2, respuestas.dato1); //depa_solictante
        results.setString(3, respuestas.dato2); //depa_atencion
        results.setString(4, solicitudlast);
        results.setString(5, answer.answerURL);
        results.execute();

        var maximo = stmt.executeQuery('select last_insert_id();');
        maximo.next();
        var ordenfk = maximo.getString(1); //ordenfk
        //Inserción en la tabla LISTA
        var results = conn2.prepareStatement('INSERT INTO LISTA ' +
          '(respuesta, observacion, ordenfk)' + 'values (?, ?, ?)');
        results.setString(1, respuestas.dato4);//lv_di
        results.setString(2, respuestas.dato5); //observacion_di
        results.setString(3, ordenfk);
        results.execute();
        //------------------------------------------------------------------------

        var temporal = {}
        temporal.entrega = respuestas.dato8;//entrega
        temporal.numero = respuestas.dato9;//numero
        Logger.log(temporal);

        var solicitudfk = stmt.executeQuery(`SELECT id FROM SOLICITUD 
        where proyectofk = '${proyectoFK.toString()}';`); //proyectofk
        var numCols = solicitudfk.getMetaData().getColumnCount();
        while (solicitudfk.next()) {
          var solicitudFK = '';
          for (var col = 0; col < numCols; col++) {
            solicitudFK += solicitudfk.getString(col + 1) + "\n";
          }
        } //while

        //Validación de los departamentos de atención y solicitud sean los correctos para el registro del avance
        if (respuestas.dato1 == "Programación de Recursos" && respuestas.dato2 == "Multimedia") {
          avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
        }

        //------------------------------------------------------------------------

        var iniciales_elemento = '';
        for (var item in temporal) {
          temporal[item].forEach(function (elemento, indice) {

            var entregaM = stmt.executeQuery(`select abreviatura from ELEMENTO
          where (ELEMENTO.nombre='${elemento}')`);
            var numCols = entregaM.getMetaData().getColumnCount();
            while (entregaM.next()) {
              for (var col = 0; col < numCols; col++) {
                iniciales_elemento += entregaM.getString(col + 1) + ",";
              }
            } //while
          });
        }//for
        var iniciales_elemento_mod = ""
        iniciales_elemento_mod = iniciales_elemento.slice(0, -1)

        //------------------------------------------------------------------------

        //Liga con las respuestas del formulario

        var liga = stmt.executeQuery(`select url from ORDEN 
        where (solicitudfk='${solicitudlast}')`);
        var numCols = liga.getMetaData().getColumnCount();
        while (liga.next()) {
          var liga_form = '';
          for (var col = 0; col < numCols; col++) {
            liga_form += liga.getString(col + 1) + "\n";
          }
        } //while
        //------------------------------------------------------------------------

        //Consulta de iniciales para dependencia y proyecto para correo 

        var inicialdep = stmt.executeQuery(`select inicial_dep from DEPENDENCIA 
          where (DEPENDENCIA.nombre='${respuestas.dato6}')`);
        var numCols = inicialdep.getMetaData().getColumnCount();
        while (inicialdep.next()) {
          var iniciales_depend = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_depend += inicialdep.getString(col + 1) + "\n";
          }
        } //while
        var inicialproy = stmt.executeQuery(`select inicial_proy from PROYECTO
            where (PROYECTO.proyecto='${respuestas.dato7}')`);
        var numCols = inicialproy.getMetaData().getColumnCount();
        while (inicialproy.next()) {
          var iniciales_proy = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_proy += inicialproy.getString(col + 1) + "\n";
          }
        } //while

        //Consulta del semestre y el total 
        var datos_principal = stmt.executeQuery(`select PRINCIPAL.total, PRINCIPAL.organizacion, PRINCIPAL.semestre  
            from PRINCIPAL 
            JOIN PROYECTO on PRINCIPAL.proyectofk = PROYECTO.id  
            where PROYECTO.proyecto = '${respuestas.dato7}'`);
        var tos = [];
        while (datos_principal.next()) {
          for (var x = 1; x <= datos_principal.getMetaData().getColumnCount(); x++) {
            tos.push(datos_principal.getString(x));
          }
        }
        //Validación de campos nulos o con valor 0
        if (tos[2] == 0) {
          tos[2] = "----";
        }
        if (tos[1] == "Módulo") {
          tos[1] = "Módulos"
        } else if (tos[1] == "Unidad") {
          tos[1] = "Unidades"
        } else if (tos[1] == "Tema") {
          tos[1] = "Temas"
        } else if (tos[1] == "Secuencia") {
          tos[1] = "Secuencias"
        }
        if (respuestas.dato12 == 0) {
          respuestas.dato12 = "----";
        }

        if (respuestas.dato5 == 0) {
          respuestas.dato5 = "----";
        }

        if (respuestas.dato11 == 0) {
          respuestas.dato11 = "----";
        }

        //-------------------------Estructura del correo---------------------
        if (respuestas.dato9 == 0 || (respuestas.dato8 == "Escritorio" || respuestas.dato8 == "Sitio público"
          || respuestas.dato8 == "Componentes Generales")) {
          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
          results.setString(1, solicitudlast);
          results.setString(2, iniciales_elemento_mod);
          results.setString(3, 0);
          results.execute();

          var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod + " / "
            + iniciales_proy + " / " + iniciales_depend;


          var txtEmail = cuerpoEmailSA_CG_SP_E(
            respuestas.dato3,
            respuestas.dato1,
            respuestas.dato6,
            respuestas.dato10,
            respuestas.dato12,
            respuestas.dato11,
            iniciales_proy, tos, iniciales_elemento_mod);
        } else {
          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
          results.setString(1, solicitudlast);
          results.setString(2, iniciales_elemento_mod);
          results.setString(3, respuestas.dato9);
          results.execute();

          var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod + respuestas.dato9 + " / "
            + iniciales_proy + " / " + iniciales_depend;

          var txtEmail = cuerpoEmailSA_M_U_T_S(
            respuestas.dato3,
            respuestas.dato1,
            respuestas.dato6,
            respuestas.dato10,
            respuestas.dato12,
            respuestas.dato11,
            iniciales_proy, tos, iniciales_elemento_mod, respuestas.dato9);
        }
        var cuerpoCA = "Da clic en esta <a href = " + liga_form
          + ">liga</a> para aprobar o rechazar la solicitud. <br><br> Saludos cordiales!!!";

        var parte1 = listaVerificacion(respuestas.dato4, lv_pr);
        var observaciones_tabla = '<tr><th style="border:1px solid;padding:5px;text-align:inherit;font-weight:lighter;"' 
        + 'colspan="2">' + 'Observaciones específicas: </th><td style="border:1px solid;" colspan="8">' 
        + respuestas.dato5 + '</td></tr>';

        if (respuestas.dato1 == "Programación de Recursos" && respuestas.dato2 == "Multimedia") {
          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: asuntoCA,
            htmlBody: "Hola, Juan.<br><br>" + "Envío para tu aprobación. <br><br>" + txtEmail
              + "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>" + cuerpoCA
              + "<br><br>TO: " + ("__" + correos.CPR)
          });
        } else {
          var nombreRemitente = remitenteEmail(respuestas.email);
          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: "No aplica / " + asuntoCA,
            htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
              + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
              + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
              + "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>Saludos cordiales!!!"
              + "<br><br>TO: " + respuestas.email
          });
        }
      } //14.0      

      break;
    case "Integración finalizada":
      // Flujo de trabajo Orden -> Integración finalizada -> Cotejo -> Dependencia -> Proyecto -> Asignatura -> Solicitud
      if (Object.keys(respuestas).length == 20.0) {
        var results = conn2.prepareStatement('INSERT INTO SOLICITUD ' +
          '(nombre, instrucciones, ruta, observacion, email, proyectofk)' +
          'values (?, ?, ?, ?, ?, ?)');
        results.setString(1, respuestas.solicitud);
        results.setString(2, respuestas.dato16); //instrucciones
        results.setString(3, respuestas.dato17); //ruta
        results.setString(4, respuestas.dato18); //observacion
        results.setString(5, respuestas.email);

        var stmt = conn2.createStatement();
        var proyectofk = stmt.executeQuery(`select PROYECTO.id from DEPENDENCIA 
        JOIN PROYECTO on DEPENDENCIA.id = PROYECTO.dependenciafk 
        where (DEPENDENCIA.nombre='${respuestas.dato11}' 
        and PROYECTO.proyecto = '${respuestas.dato12}' 
        and PROYECTO.asignatura = '${respuestas.dato13}' )`);

        var numCols = proyectofk.getMetaData().getColumnCount();
        while (proyectofk.next()) {
          var proyectoFK = '';
          for (var col = 0; col < numCols; col++) {
            proyectoFK += proyectofk.getString(col + 1) + "\n";
          }

          results.setString(6, proyectoFK.toString());//proyectoFK
          results.execute();
        } //while
        var maximo = stmt.executeQuery('select last_insert_id();');
        maximo.next();
        var solicitudlast = maximo.getString(1); //solicitudfk
        var results = conn2.prepareStatement('INSERT INTO ORDEN ' +
          '(nombre, depa_solicitante, depa_atencion, solicitudfk, url) values (?, ?, ?, ?, ?)');
        results.setString(1, respuestas.dato3); //nombre
        results.setString(2, respuestas.dato1); //depa_solictante
        results.setString(3, respuestas.dato2); //depa_atencion
        results.setString(4, solicitudlast);
        results.setString(5, answer.answerURL);
        results.execute();

        var maximo = stmt.executeQuery('select last_insert_id();');
        maximo.next();
        var ordenfk = maximo.getString(1); //ordenfk
        var results = conn2.prepareStatement('INSERT INTO COTEJO ' +
          '(alr_usuario, alr_pass, ar_usuario, ar_pass, url_acceso, ordenfk)' +
          'values (?, ?, ?, ?, ?, ?)');
        results.setString(1, respuestas.dato7); //alr_usuario
        results.setString(2, respuestas.dato8); //alr_pass
        results.setString(3, respuestas.dato9); //ar_usuario
        results.setString(4, respuestas.dato10); //ar_pass
        results.setString(5, respuestas.dato6); //url_acesso
        results.setString(6, ordenfk);
        results.execute();

        //Inserción en la tabla LISTA
        var results = conn2.prepareStatement('INSERT INTO LISTA ' +
          '(respuesta, observacion, ordenfk)' + 'values (?, ?, ?)');
        results.setString(1, respuestas.dato4);//lv_di
        results.setString(2, respuestas.dato5); //observacion_di
        results.setString(3, ordenfk);
        results.execute();

        //------------------------------------------------------------------------
        var temporal = {}
        temporal.entrega = respuestas.dato14;//entrega
        temporal.numero = respuestas.dato15;//numero
        Logger.log(temporal);

        var solicitudfk = stmt.executeQuery(`SELECT id FROM SOLICITUD 
        where proyectofk = '${proyectoFK.toString()}';`); //proyectofk
        var numCols = solicitudfk.getMetaData().getColumnCount();
        while (solicitudfk.next()) {
          var solicitudFK = '';
          for (var col = 0; col < numCols; col++) {
            solicitudFK += solicitudfk.getString(col + 1) + "\n";
          }
        } //while

        //Validación de los departamentos de atención y solicitud sean los correctos para el registro del avance
        if (respuestas.dato1 == "Multimedia" && respuestas.dato2 == "Diseño Instruccional") {
          avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
        }

        //------------------------------------------------------------------------

        var iniciales_elemento = '';
        for (var item in temporal) {
          temporal[item].forEach(function (elemento, indice) {

            var entregaM = stmt.executeQuery(`select abreviatura from ELEMENTO
          where (ELEMENTO.nombre='${elemento}')`);
            var numCols = entregaM.getMetaData().getColumnCount();
            while (entregaM.next()) {
              for (var col = 0; col < numCols; col++) {
                iniciales_elemento += entregaM.getString(col + 1) + ",";
              }
            } //while
          });
        }//for
        var iniciales_elemento_mod = ""
        iniciales_elemento_mod = iniciales_elemento.slice(0, -1)

        //------------------------------------------------------------------------

        //Liga con las respuestas del formulario

        var liga = stmt.executeQuery(`select url from ORDEN 
        where (solicitudfk='${solicitudlast}')`);
        var numCols = liga.getMetaData().getColumnCount();
        while (liga.next()) {
          var liga_form = '';
          for (var col = 0; col < numCols; col++) {
            liga_form += liga.getString(col + 1) + "\n";
          }
        } //while

        //------------------------------------------------------------------------

        //Consulta de iniciales para dependencia y proyecto para correo 

        var inicialdep = stmt.executeQuery(`select inicial_dep from DEPENDENCIA 
        where (DEPENDENCIA.nombre='${respuestas.dato11}')`);
        var numCols = inicialdep.getMetaData().getColumnCount();
        while (inicialdep.next()) {
          var iniciales_depend = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_depend += inicialdep.getString(col + 1) + "\n";
          }
        } //while
        var inicialproy = stmt.executeQuery(`select inicial_proy from PROYECTO
            where (PROYECTO.proyecto='${respuestas.dato12}')`);
        var numCols = inicialproy.getMetaData().getColumnCount();
        while (inicialproy.next()) {
          var iniciales_proy = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_proy += inicialproy.getString(col + 1) + "\n";
          }
        } //while

        //-------------------------------------------------------------------------------
        //Consulta del semestre y el total 
        var datos_principal = stmt.executeQuery(`select PRINCIPAL.total, PRINCIPAL.organizacion, PRINCIPAL.semestre  
            from PRINCIPAL 
            JOIN PROYECTO on PRINCIPAL.proyectofk = PROYECTO.id  
            where (PROYECTO.proyecto = '${respuestas.dato12}' 
            and PROYECTO.asignatura = '${respuestas.dato13}' )`);
        var tos = [];
        while (datos_principal.next()) {
          for (var x = 1; x <= datos_principal.getMetaData().getColumnCount(); x++) {
            tos.push(datos_principal.getString(x));
          }
        }
        //Validación de campos nulos o con valor 0
        if (tos[2] == 0) {
          tos[2] = "----";
        }
        if (tos[1] == "Módulo") {
          tos[1] = "Módulos"
        } else if (tos[1] == "Unidad") {
          tos[1] = "Unidades"
        } else if (tos[1] == "Tema") {
          tos[1] = "Temas"
        } else if (tos[1] == "Secuencia") {
          tos[1] = "Secuencias"
        }        
        if (respuestas.dato18 == 0) {
          respuestas.dato18 = "----";
        }

        if (respuestas.dato5 == 0) {
          respuestas.dato5 = "----";
        }

        //Datos de cotejo
        if (respuestas.dato6 == 0) {
          respuestas.dato6 = "----";
        }
        if (respuestas.dato7 == 0) {
          respuestas.dato7 = "----";
        }
        if (respuestas.dato8 == 0) {
          respuestas.dato8 = "----";
        }
        if (respuestas.dato9 == 0) {
          respuestas.dato9 = "----";
        }
        if (respuestas.dato10 == 0) {
          respuestas.dato10 = "----";
        }
        if (respuestas.dato17 == 0) {
          respuestas.dato17 = "----";
        }

        //-------------------------Estructura del correo---------------------
        if (respuestas.dato15 == 0 || (respuestas.dato14 == "Escritorio" || respuestas.dato14 == "Sitio público"
          || respuestas.dato14 == "Componentes Generales")) {
          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
          results.setString(1, solicitudlast);
          results.setString(2, iniciales_elemento_mod);
          results.setString(3, 0);
          results.execute();

          var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod + " / "
            + respuestas.dato13 + " / " + iniciales_proy + " / " + iniciales_depend;

          var txtEmail = cuerpoEmailCA_CG_SP_E(
            respuestas.dato3,
            respuestas.dato1,
            respuestas.dato6,
            respuestas.dato11,
            respuestas.dato16,
            respuestas.dato18,
            respuestas.dato17,
            iniciales_proy, tos, iniciales_elemento_mod);
        } else {
          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
          results.setString(1, solicitudlast);
          results.setString(2, iniciales_elemento_mod);
          results.setString(3, respuestas.dato15);
          results.execute();

          var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod + respuestas.dato15 + " / "
            + respuestas.dato13 + " / " + iniciales_proy + " / " + iniciales_depend;


          var txtEmail = cuerpoEmailCA_M_U_T_S(
            respuestas.dato3,
            respuestas.dato1,
            respuestas.dato6,
            respuestas.dato11,
            respuestas.dato16,
            respuestas.dato18,
            respuestas.dato17,
            iniciales_proy, tos, iniciales_elemento_mod, respuestas.dato15);


        }

        var cotejo = cuerpoCotejo(
          respuestas.dato6,
          respuestas.dato7,
          respuestas.dato8,
          respuestas.dato9,
          respuestas.dato10,
        );

        var cuerpoCA = "Da clic en esta <a href = " + liga_form
          + ">liga</a> para aprobar o rechazar la solicitud. <br><br> Saludos cordiales!!!";

        var parte1 = listaVerificacion(respuestas.dato4, lv_cv);

        var observaciones_tabla = '<tr><th style="border:1px solid;padding:5px;text-align:inherit;font-weight:lighter;"' 
        + 'colspan="2">' + 'Observaciones específicas: </th><td style="border:1px solid;" colspan="8">' 
        + respuestas.dato5 + '</td></tr>';

        if (respuestas.dato1 == "Multimedia" && respuestas.dato2 == "Diseño Instruccional") {
          var datosDeptos = [];
          datosDeptos = deptoCV(proyectoFK); //Retorna nombre, correoCCV, correoRCV en ese orden

          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: asuntoCA,
            htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>" + txtEmail
              + "<br>" + cotejo + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>"
              + cuerpoCA
              + "<br><br>TO: " + ("__" + datosDeptos[1])
              + "<br><br>CC: " + ("__" + datosDeptos[2])
          });
        } else {
          var nombreRemitente = remitenteEmail(respuestas.email);
          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: "No aplica / " + asuntoCA,
            htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
              + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
              + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
              + "<br>" + cotejo + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>"
              + "<br><br>Saludos cordiales!!!"
              + "<br><br>TO: " + (respuestas.email)
          });
        }
      } //20.0      

      // Flujo de trabajo Orden -> Integración finalizada -> Cotejo -> Dependencia -> Proyecto -> Solicitud
      if (Object.keys(respuestas).length == 19.0) {
        var results = conn2.prepareStatement('INSERT INTO SOLICITUD ' +
          '(nombre, instrucciones, ruta, observacion, email, proyectofk)' +
          'values (?, ?, ?, ?, ?, ?)');

        results.setString(1, respuestas.solicitud);
        results.setString(2, respuestas.dato15); //instrucciones
        results.setString(3, respuestas.dato16); //ruta
        results.setString(4, respuestas.dato17); //observacion
        results.setString(5, respuestas.email);

        var stmt = conn2.createStatement();
        var proyectofk = stmt.executeQuery(`select PROYECTO.id from DEPENDENCIA 
        JOIN PROYECTO on DEPENDENCIA.id = PROYECTO.dependenciafk 
        where (DEPENDENCIA.nombre='${respuestas.dato11}' 
        and PROYECTO.proyecto = '${respuestas.dato12}' )`);
        var numCols = proyectofk.getMetaData().getColumnCount();
        while (proyectofk.next()) {
          var proyectoFK = '';
          for (var col = 0; col < numCols; col++) {
            proyectoFK += proyectofk.getString(col + 1) + "\n";
          }

          results.setString(6, proyectoFK.toString());
          results.execute();
        } //while
        var maximo = stmt.executeQuery('select last_insert_id();');
        maximo.next();
        var solicitudlast = maximo.getString(1); //solicitudfk
        var results = conn2.prepareStatement('INSERT INTO ORDEN ' +
          '(nombre, depa_solicitante, depa_atencion, solicitudfk, url) values (?, ?, ?, ?, ?)');
        results.setString(1, respuestas.dato3); //nombre
        results.setString(2, respuestas.dato1); //depa_solictante
        results.setString(3, respuestas.dato2); //depa_atencion
        results.setString(4, solicitudlast);
        results.setString(5, answer.answerURL);
        results.execute();

        var maximo = stmt.executeQuery('select last_insert_id();');
        maximo.next();
        var ordenfk = maximo.getString(1); //ordenfk
        var results = conn2.prepareStatement('INSERT INTO COTEJO ' +
          '(alr_usuario, alr_pass, ar_usuario, ar_pass, url_acceso, ordenfk)' +
          'values (?, ?, ?, ?, ?, ?)');
        results.setString(1, respuestas.dato7); //alr_usuario
        results.setString(2, respuestas.dato8); //alr_pass
        results.setString(3, respuestas.dato9); //ar_usuario
        results.setString(4, respuestas.dato10); //ar_pass
        results.setString(5, respuestas.dato6); //url_acesso
        results.setString(6, ordenfk);
        results.execute();

        //Inserción en la tabla LISTA
        var results = conn2.prepareStatement('INSERT INTO LISTA ' +
          '(respuesta, observacion, ordenfk)' + 'values (?, ?, ?)');
        results.setString(1, respuestas.dato4);//lv_di
        results.setString(2, respuestas.dato5); //observacion_di
        results.setString(3, ordenfk);
        results.execute();
        //------------------------------------------------------------------------

        var temporal = {}
        temporal.entrega = respuestas.dato13;//entrega
        temporal.numero = respuestas.dato14;//numero
        Logger.log(temporal);

        var solicitudfk = stmt.executeQuery(`SELECT id FROM SOLICITUD 
        where proyectofk = '${proyectoFK.toString()}';`); //proyectofk
        var numCols = solicitudfk.getMetaData().getColumnCount();
        while (solicitudfk.next()) {
          var solicitudFK = '';
          for (var col = 0; col < numCols; col++) {
            solicitudFK += solicitudfk.getString(col + 1) + "\n";
          }
        } //while

        //Validación de los departamentos de atención y solicitud sean los correctos para el registro del avance
        if (respuestas.dato1 == "Multimedia" && respuestas.dato2 == "Diseño Instruccional") {
          avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
        }

        //------------------------------------------------------------------------

        var iniciales_elemento = '';
        for (var item in temporal) {
          temporal[item].forEach(function (elemento, indice) {

            var entregaM = stmt.executeQuery(`select abreviatura from ELEMENTO
          where (ELEMENTO.nombre='${elemento}')`);
            var numCols = entregaM.getMetaData().getColumnCount();
            while (entregaM.next()) {
              for (var col = 0; col < numCols; col++) {
                iniciales_elemento += entregaM.getString(col + 1) + ",";
              }
            } //while
          });
        }//for
        var iniciales_elemento_mod = ""
        iniciales_elemento_mod = iniciales_elemento.slice(0, -1)

        //-----------------------------------------------------------------------

        //Liga con las respuestas del formulario

        var liga = stmt.executeQuery(`select url from ORDEN 
        where (solicitudfk='${solicitudlast}')`);
        var numCols = liga.getMetaData().getColumnCount();
        while (liga.next()) {
          var liga_form = '';
          for (var col = 0; col < numCols; col++) {
            liga_form += liga.getString(col + 1) + "\n";
          }
        } //while

        //------------------------------------------------------------------------

        //Consulta de iniciales para dependencia y proyecto para correo 

        var inicialdep = stmt.executeQuery(`select inicial_dep from DEPENDENCIA 
          where (DEPENDENCIA.nombre='${respuestas.dato11}')`);
        var numCols = inicialdep.getMetaData().getColumnCount();
        while (inicialdep.next()) {
          var iniciales_depend = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_depend += inicialdep.getString(col + 1) + "\n";
          }
        } //while
        var inicialproy = stmt.executeQuery(`select inicial_proy from PROYECTO
            where (PROYECTO.proyecto='${respuestas.dato12}')`);
        var numCols = inicialproy.getMetaData().getColumnCount();
        while (inicialproy.next()) {
          var iniciales_proy = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_proy += inicialproy.getString(col + 1) + "\n";
          }
        } //while

        //-------------------------------------------------------------------------------
        //Consulta del semestre y el total 
        var datos_principal = stmt.executeQuery(`select PRINCIPAL.total, PRINCIPAL.organizacion, PRINCIPAL.semestre  
            from PRINCIPAL 
            JOIN PROYECTO on PRINCIPAL.proyectofk = PROYECTO.id  
            where (PROYECTO.proyecto = '${respuestas.dato12}');`);
        var tos = [];
        while (datos_principal.next()) {
          for (var x = 1; x <= datos_principal.getMetaData().getColumnCount(); x++) {
            tos.push(datos_principal.getString(x));
          }
        }
        //Validación de campos nulos o con valor 0
        if (tos[2] == 0) {
          tos[2] = "----";
        }
        if (tos[1] == "Módulo") {
          tos[1] = "Módulos"
        } else if (tos[1] == "Unidad") {
          tos[1] = "Unidades"
        } else if (tos[1] == "Tema") {
          tos[1] = "Temas"
        } else if (tos[1] == "Secuencia") {
          tos[1] = "Secuencias"
        }
        if (respuestas.dato17 == 0) {
          respuestas.dato17 = "----";
        }

        if (respuestas.dato5 == 0) {
          respuestas.dato5 = "----";
        }

        //Datos de cotejo
        if (respuestas.dato6 == 0) {
          respuestas.dato6 = "----";
        }
        if (respuestas.dato7 == 0) {
          respuestas.dato7 = "----";
        }
        if (respuestas.dato8 == 0) {
          respuestas.dato8 = "----";
        }
        if (respuestas.dato9 == 0) {
          respuestas.dato9 = "----";
        }
        if (respuestas.dato10 == 0) {
          respuestas.dato10 = "----";
        }
        if (respuestas.dato16 == 0) {
          respuestas.dato16 = "----";
        }

        //-------------------------Estructura del correo---------------------
        if (respuestas.dato14 == 0 || (respuestas.dato13 == "Escritorio" || respuestas.dato13 == "Sitio público"
          || respuestas.dato13 == "Componentes Generales")) {
          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
          results.setString(1, solicitudlast);
          results.setString(2, iniciales_elemento_mod);
          results.setString(3, 0);
          results.execute();
          var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod + " / "
            + iniciales_proy + " / " + iniciales_depend;

          var txtEmail = cuerpoEmailSA_CG_SP_E(
            respuestas.dato3,
            respuestas.dato1,
            respuestas.dato11,
            respuestas.dato15,
            respuestas.dato17,
            respuestas.dato16,
            iniciales_proy, tos, iniciales_elemento_mod);

        } else {
          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
          results.setString(1, solicitudlast);
          results.setString(2, iniciales_elemento_mod);
          results.setString(3, respuestas.dato14);
          results.execute();
          var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod + respuestas.dato14 + " / "
            + iniciales_proy + " / " + iniciales_depend;
          var txtEmail = cuerpoEmailSA_M_U_T_S(
            respuestas.dato3,
            respuestas.dato1,
            respuestas.dato11,
            respuestas.dato15,
            respuestas.dato17,
            respuestas.dato16,
            iniciales_proy, tos, iniciales_elemento_mod, respuestas.dato14);
        }

        var cotejo = cuerpoCotejo(
          respuestas.dato6,
          respuestas.dato7,
          respuestas.dato8,
          respuestas.dato9,
          respuestas.dato10,
        );

        var cuerpoCA = "Da clic en esta <a href = " + liga_form
          + ">liga</a> para aprobar o rechazar la solicitud. <br><br> Saludos cordiales!!!";

        var parte1 = listaVerificacion(respuestas.dato4, lv_cv);

        var observaciones_tabla = '<tr><th style="border:1px solid;padding:5px;text-align:inherit;font-weight:lighter;"' 
        + 'colspan="2">' + 'Observaciones específicas: </th><td style="border:1px solid;" colspan="8">' 
        + respuestas.dato5 + '</td></tr>';


        if (respuestas.dato1 == "Multimedia" && respuestas.dato2 == "Diseño Instruccional") {

          var datosDeptos = [];
          datosDeptos = deptoCV(proyectoFK); //Retorna nombre, correoCCV, correoRCV en ese orden

          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: asuntoCA,
            htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>" + txtEmail
              + "<br>" + cotejo + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>"
              + cuerpoCA
              + "<br><br>TO: " + ("__" + datosDeptos[1])
              + "<br><br>CC: " + ("__" + datosDeptos[2])
          });
        } else {
          var nombreRemitente = remitenteEmail(respuestas.email);
          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: "No aplica / " + asuntoCA,
            htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
              + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
              + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
              + "<br>" + cotejo + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>"
              + "<br><br>Saludos cordiales!!!"
              + "<br><br>TO: " + respuestas.email
          });
        }
      } //19.0     
      break;
    case "Correcciones aplicadas":
      // Flujo de trabajo Orden -> Correcciones aplicadas -> Cotejo -> Dependencia -> Proyecto -> Asignatura -> Solicitud
      if (Object.keys(respuestas).length == 18.0) {
        var results = conn2.prepareStatement('INSERT INTO SOLICITUD ' +
          '(nombre, instrucciones, ruta, observacion, email, proyectofk)' +
          'values (?, ?, ?, ?, ?, ?)');

        results.setString(1, respuestas.solicitud);
        results.setString(2, respuestas.dato14); //instrucciones
        results.setString(3, respuestas.dato15); //ruta
        results.setString(4, respuestas.dato16); //observacion
        results.setString(5, respuestas.email);

        var stmt = conn2.createStatement();
        var proyectofk = stmt.executeQuery(`select PROYECTO.id from DEPENDENCIA 
        JOIN PROYECTO on DEPENDENCIA.id = PROYECTO.dependenciafk 
        where (DEPENDENCIA.nombre='${respuestas.dato9}' 
        and PROYECTO.proyecto = '${respuestas.dato10}' 
        and PROYECTO.asignatura = '${respuestas.dato11}' )`);
        var numCols = proyectofk.getMetaData().getColumnCount();
        while (proyectofk.next()) {
          var proyectoFK = '';
          for (var col = 0; col < numCols; col++) {
            proyectoFK += proyectofk.getString(col + 1) + "\n";
          }

          results.setString(6, proyectoFK.toString());
          results.execute();
        } //while
        var maximo = stmt.executeQuery('select last_insert_id();');
        maximo.next();
        var solicitudlast = maximo.getString(1); //solicitudfk
        var results = conn2.prepareStatement('INSERT INTO ORDEN ' +
          '(nombre, depa_solicitante, depa_atencion, solicitudfk, url) values (?, ?, ?, ?, ?)');
        results.setString(1, respuestas.dato3); //nombre
        results.setString(2, respuestas.dato1); //depa_solictante
        results.setString(3, respuestas.dato2); //depa_atencion
        results.setString(4, solicitudlast);
        results.setString(5, answer.answerURL);
        results.execute();

        var maximo = stmt.executeQuery('select last_insert_id();');
        maximo.next();
        var ordenfk = maximo.getString(1); //ordenfk
        var results = conn2.prepareStatement('INSERT INTO COTEJO ' +
          '(alr_usuario, alr_pass, ar_usuario, ar_pass, url_acceso, ordenfk)' +
          'values (?, ?, ?, ?, ?, ?)');
        results.setString(1, respuestas.dato5); //alr_usuario
        results.setString(2, respuestas.dato6); //alr_pass
        results.setString(3, respuestas.dato7); //ar_usuario
        results.setString(4, respuestas.dato8); //ar_pass
        results.setString(5, respuestas.dato4); //url_acesso
        results.setString(6, ordenfk);
        results.execute();

        //------------------------------------------------------------------------

        var temporal = {}

        temporal.entrega = respuestas.dato12;//entrega
        temporal.numero = respuestas.dato13;//numero
        Logger.log(temporal);

        var solicitudfk = stmt.executeQuery(`SELECT id FROM SOLICITUD 
        where proyectofk = '${proyectoFK.toString()}';`); //proyectofk
        var numCols = solicitudfk.getMetaData().getColumnCount();
        while (solicitudfk.next()) {
          var solicitudFK = '';
          for (var col = 0; col < numCols; col++) {
            solicitudFK += solicitudfk.getString(col + 1) + "\n";
          }
        } //while

        //Validación de los departamentos de atención y solicitud sean los correctos para el registro del avance
        if (respuestas.dato1 == "Multimedia" && respuestas.dato2 == "Diseño Instruccional") {
          avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
        }


        //------------------------------------------------------------------------
        var iniciales_elemento = '';
        for (var item in temporal) {
          temporal[item].forEach(function (elemento, indice) {

            var entregaM = stmt.executeQuery(`select abreviatura from ELEMENTO
          where (ELEMENTO.nombre='${elemento}')`);
            var numCols = entregaM.getMetaData().getColumnCount();
            while (entregaM.next()) {
              for (var col = 0; col < numCols; col++) {
                iniciales_elemento += entregaM.getString(col + 1) + ",";
              }
            } //while
          });
        }//for
        var iniciales_elemento_mod = ""
        iniciales_elemento_mod = iniciales_elemento.slice(0, -1)

        //------------------------------------------------------------------------

        //Liga con las respuestas del formulario

        var liga = stmt.executeQuery(`select url from ORDEN 
        where (solicitudfk='${solicitudlast}')`);
        var numCols = liga.getMetaData().getColumnCount();
        while (liga.next()) {
          var liga_form = '';
          for (var col = 0; col < numCols; col++) {
            liga_form += liga.getString(col + 1) + "\n";
          }
        } //while
        //------------------------------------------------------------------------

        //Consulta de iniciales para dependencia y proyecto para correo 

        var inicialdep = stmt.executeQuery(`select inicial_dep from DEPENDENCIA 
        where (DEPENDENCIA.nombre='${respuestas.dato9}')`);
        var numCols = inicialdep.getMetaData().getColumnCount();
        while (inicialdep.next()) {
          var iniciales_depend = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_depend += inicialdep.getString(col + 1) + "\n";
          }
        } //while
        var inicialproy = stmt.executeQuery(`select inicial_proy from PROYECTO
            where (PROYECTO.proyecto='${respuestas.dato10}')`);
        var numCols = inicialproy.getMetaData().getColumnCount();
        while (inicialproy.next()) {
          var iniciales_proy = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_proy += inicialproy.getString(col + 1) + "\n";
          }
        } //while

        //-------------------------------------------------------------------------------
        //Consulta del semestre y el total 
        var datos_principal = stmt.executeQuery(`select PRINCIPAL.total, PRINCIPAL.organizacion, PRINCIPAL.semestre  
            from PRINCIPAL 
            JOIN PROYECTO on PRINCIPAL.proyectofk = PROYECTO.id  
            where (PROYECTO.proyecto = '${respuestas.dato10}' 
            and PROYECTO.asignatura = '${respuestas.dato11}' )`);
        var tos = [];
        while (datos_principal.next()) {
          for (var x = 1; x <= datos_principal.getMetaData().getColumnCount(); x++) {
            tos.push(datos_principal.getString(x));
          }
        }
        //Validación de campos nulos o con valor 0
        if (tos[2] == 0) {
          tos[2] = "----";
        }
        if (tos[1] == "Módulo") {
          tos[1] = "Módulos"
        } else if (tos[1] == "Unidad") {
          tos[1] = "Unidades"
        } else if (tos[1] == "Tema") {
          tos[1] = "Temas"
        } else if (tos[1] == "Secuencia") {
          tos[1] = "Secuencias"
        }
        if (respuestas.dato16 == 0) {
          respuestas.dato16 = "----";
        }

        //Datos de cotejo

        if (respuestas.dato4 == 0) {
          respuestas.dato4 = "----";
        }
        if (respuestas.dato5 == 0) {
          respuestas.dato5 = "----";
        }
        if (respuestas.dato6 == 0) {
          respuestas.dato6 = "----";
        }
        if (respuestas.dato7 == 0) {
          respuestas.dato7 = "----";
        }
        if (respuestas.dato8 == 0) {
          respuestas.dato8 = "----";
        }
        if (respuestas.dato15 == 0) {
          respuestas.dato15 = "----";
        }

        //-------------------------Estructura del correo---------------------
        if (respuestas.dato13 == 0 || (respuestas.dato12 == "Escritorio" || respuestas.dato12 == "Sitio público"
          || respuestas.dato12 == "Componentes Generales")) {
          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
          results.setString(1, solicitudlast);
          results.setString(2, iniciales_elemento_mod);
          results.setString(3, 0);
          results.execute();

          var maximo = stmt.executeQuery('select last_insert_id();');
          maximo.next();
          var auxiliarlast = maximo.getString(1); //auxiliarfk

          var elemento_auxiliar = stmt.executeQuery(`SELECT elemento FROM AUXILIAR 
          WHERE AUXILIAR.id = '${auxiliarlast}'`);
          var numCols = elemento_auxiliar.getMetaData().getColumnCount();
          while (elemento_auxiliar.next()) {
            var elemento_aux = '';
            for (var col = 0; col < numCols; col++) {
              elemento_aux += elemento_auxiliar.getString(col + 1);
            }
          } //while

          var conteo_solicitudes = stmt.executeQuery(`SELECT COUNT(*) FROM ORDEN 
          JOIN SOLICITUD ON SOLICITUD.id = ORDEN.solicitudfk
          JOIN AUXILIAR ON AUXILIAR.solicitudfk = SOLICITUD.id
          WHERE (ORDEN.nombre = "Correcciones aplicadas"
          AND SOLICITUD.proyectofk ='${proyectoFK.toString()}'
          AND AUXILIAR.elemento ='${elemento_aux}');`);

          var numCols = conteo_solicitudes.getMetaData().getColumnCount();
          while (conteo_solicitudes.next()) {
            var cont = '';
            for (var col = 0; col < numCols; col++) {
              cont += conteo_solicitudes.getString(col + 1);
            }
          } //while


          if (cont == 1) {
            var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod
              + " / " + respuestas.dato11 + " / " + iniciales_proy + " / " + iniciales_depend;
            var txtEmail = cuerpoEmailCA_CG_SP_E(
              respuestas.dato3,
              respuestas.dato1,
              respuestas.dato9,
              respuestas.dato11,
              respuestas.dato14,
              respuestas.dato16,
              respuestas.dato15,
              iniciales_proy, tos, iniciales_elemento_mod);
          } else {
            var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " " + cont + " / " + iniciales_elemento_mod
              + " / " + respuestas.dato11 + " / " + iniciales_proy + " / " + iniciales_depend;
            var txtEmail = cuerpoEmailCACount_CG_SP_E(
              respuestas.dato3,
              respuestas.dato1,
              respuestas.dato9,
              respuestas.dato11,
              respuestas.dato14,
              respuestas.dato16,
              respuestas.dato15,
              iniciales_proy, tos, iniciales_elemento_mod, cont);
          }

        } else {
          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
          results.setString(1, solicitudlast);
          results.setString(2, iniciales_elemento_mod);
          results.setString(3, respuestas.dato13);
          results.execute();

          var maximo = stmt.executeQuery('select last_insert_id();');
          maximo.next();
          var auxiliarlast = maximo.getString(1); //auxiliarfk

          var elemento_auxiliar = stmt.executeQuery(`SELECT elemento FROM AUXILIAR 
          WHERE AUXILIAR.id = '${auxiliarlast}'`);
          var numCols = elemento_auxiliar.getMetaData().getColumnCount();
          while (elemento_auxiliar.next()) {
            var elemento_aux = '';
            for (var col = 0; col < numCols; col++) {
              elemento_aux += elemento_auxiliar.getString(col + 1);
            }
          } //while

          var conteo_solicitudes = stmt.executeQuery(`SELECT COUNT(*) FROM ORDEN 
            JOIN SOLICITUD ON SOLICITUD.id = ORDEN.solicitudfk
            JOIN AUXILIAR ON AUXILIAR.solicitudfk = SOLICITUD.id
            WHERE (ORDEN.nombre = "Correcciones aplicadas"
            AND SOLICITUD.proyectofk ='${proyectoFK.toString()}'
            AND AUXILIAR.elemento ='${elemento_aux}');`);

          var numCols = conteo_solicitudes.getMetaData().getColumnCount();
          while (conteo_solicitudes.next()) {
            var cont = '';
            for (var col = 0; col < numCols; col++) {
              cont += conteo_solicitudes.getString(col + 1);
            }
          } //while
          if (cont == 1) {
            var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod + respuestas.dato13
              + " / " + respuestas.dato11 + " / " + iniciales_proy + " / " + iniciales_depend;
            var txtEmail = cuerpoEmailCA_M_U_T_S(
              respuestas.dato3,
              respuestas.dato1,
              respuestas.dato9,
              respuestas.dato11,
              respuestas.dato14,
              respuestas.dato16,
              respuestas.dato15,
              iniciales_proy, tos, iniciales_elemento_mod, respuestas.dato13);

          } else {
            var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " " + cont + " / "
              + iniciales_elemento_mod + respuestas.dato13
              + " / " + respuestas.dato11 + " / " + iniciales_proy + " / " + iniciales_depend;

            var txtEmail = cuerpoEmailCACount_CG_SP_E(
              respuestas.dato3,
              respuestas.dato1,
              respuestas.dato9,
              respuestas.dato11,
              respuestas.dato14,
              respuestas.dato16,
              respuestas.dato15,
              iniciales_proy, tos, iniciales_elemento_mod, respuestas.dato13, cont);

          }

        }

        var cotejo = cuerpoCotejo(
          respuestas.dato4,
          respuestas.dato5,
          respuestas.dato6,
          respuestas.dato7,
          respuestas.dato8,
        );


        var cuerpoCA = "Da clic en esta <a href = " + liga_form
          + ">liga</a> para aprobar o rechazar la solicitud. <br><br> Saludos cordiales!!!";

        if (respuestas.dato1 == "Multimedia" && respuestas.dato2 == "Diseño Instruccional") {
          var datosDeptos = [];
          datosDeptos = deptoCV(proyectoFK); //Retorna nombre, correoCCV, correoRCV en ese orden

          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: asuntoCA,
            htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>" + txtEmail
              + "<br>" + cotejo + "<br><br>"
              + cuerpoCA
              + "<br><br>TO: " + ("__" + datosDeptos[1])
              + "<br><br>CC: " + ("__" + datosDeptos[2])
          });
        } else {
          var nombreRemitente = remitenteEmail(respuestas.email);
          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: "No aplica / " + asuntoCA,
            htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
              + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
              + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
              + "<br>" + cotejo + "<br><br>"
              + "<br><br>Saludos cordiales!!!"
              + "<br><br>TO: " + (respuestas.email)
          });
        }
      } //18.0      

      // Flujo de trabajo Orden -> Correcciones aplicadas -> Cotejo -> Dependencia -> Proyecto -> Solicitud
      if (Object.keys(respuestas).length == 17.0) {
        var results = conn2.prepareStatement('INSERT INTO SOLICITUD ' +
          '(nombre, instrucciones, ruta, observacion, email, proyectofk)' +
          'values (?, ?, ?, ?, ?, ?)');
        results.setString(1, respuestas.solicitud);
        results.setString(2, respuestas.dato13); //instrucciones
        results.setString(3, respuestas.dato14); //ruta
        results.setString(4, respuestas.dato15); //observacion
        results.setString(5, respuestas.email);

        var stmt = conn2.createStatement();
        var proyectofk = stmt.executeQuery(`select PROYECTO.id from DEPENDENCIA 
        JOIN PROYECTO on DEPENDENCIA.id = PROYECTO.dependenciafk 
        where (DEPENDENCIA.nombre='${respuestas.dato9}' 
        and PROYECTO.proyecto = '${respuestas.dato10}' )`);
        var numCols = proyectofk.getMetaData().getColumnCount();
        while (proyectofk.next()) {
          var proyectoFK = '';
          for (var col = 0; col < numCols; col++) {
            proyectoFK += proyectofk.getString(col + 1) + "\n";
          }

          results.setString(6, proyectoFK.toString());
          results.execute();
        } //while
        var maximo = stmt.executeQuery('select last_insert_id();');
        maximo.next();
        var solicitudlast = maximo.getString(1); //solicitudfk
        var results = conn2.prepareStatement('INSERT INTO ORDEN ' +
          '(nombre, depa_solicitante, depa_atencion, solicitudfk, url) values (?, ?, ?, ?, ?)');
        results.setString(1, respuestas.dato3); //nombre
        results.setString(2, respuestas.dato1); //depa_solictante
        results.setString(3, respuestas.dato2); //depa_atencion
        results.setString(4, solicitudlast);
        results.setString(5, answer.answerURL);
        results.execute();

        var maximo = stmt.executeQuery('select last_insert_id();');
        maximo.next();
        var ordenfk = maximo.getString(1); //ordenfk
        var results = conn2.prepareStatement('INSERT INTO COTEJO ' +
          '(alr_usuario, alr_pass, ar_usuario, ar_pass, url_acceso, ordenfk)' +
          'values (?, ?, ?, ?, ?, ?)');
        results.setString(1, respuestas.dato5); //alr_usuario
        results.setString(2, respuestas.dato6); //alr_pass
        results.setString(3, respuestas.dato7); //ar_usuario
        results.setString(4, respuestas.dato8); //ar_pass
        results.setString(5, respuestas.dato4); //url_acesso
        results.setString(6, ordenfk);
        results.execute();

        //------------------------------------------------------------------------

        var temporal = {}
        temporal.entrega = respuestas.dato11;//entrega
        temporal.numero = respuestas.dato12;//numero
        Logger.log(temporal);

        var solicitudfk = stmt.executeQuery(`SELECT id FROM SOLICITUD 
        where proyectofk = '${proyectoFK.toString()}';`); //proyectofk
        var numCols = solicitudfk.getMetaData().getColumnCount();
        while (solicitudfk.next()) {
          var solicitudFK = '';
          for (var col = 0; col < numCols; col++) {
            solicitudFK += solicitudfk.getString(col + 1) + "\n";
          }
        } //while

        //Validación de los departamentos de atención y solicitud sean los correctos para el registro del avance
        if (respuestas.dato1 == "Multimedia" && respuestas.dato2 == "Diseño Instruccional") {
          avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
        }

        var iniciales_elemento = '';
        for (var item in temporal) {
          temporal[item].forEach(function (elemento, indice) {

            var entregaM = stmt.executeQuery(`select abreviatura from ELEMENTO
          where (ELEMENTO.nombre='${elemento}')`);
            var numCols = entregaM.getMetaData().getColumnCount();
            while (entregaM.next()) {
              for (var col = 0; col < numCols; col++) {
                iniciales_elemento += entregaM.getString(col + 1) + ",";
              }
            } //while
          });
        }//for
        var iniciales_elemento_mod = ""
        iniciales_elemento_mod = iniciales_elemento.slice(0, -1)

        //Liga con las respuestas del formulario

        var liga = stmt.executeQuery(`select url from ORDEN 
        where (solicitudfk='${solicitudlast}')`);
        var numCols = liga.getMetaData().getColumnCount();
        while (liga.next()) {
          var liga_form = '';
          for (var col = 0; col < numCols; col++) {
            liga_form += liga.getString(col + 1) + "\n";
          }
        } //while

        //------------------------------------------------------------------------

        //Consulta de iniciales para dependencia y proyecto para correo 

        var inicialdep = stmt.executeQuery(`select inicial_dep from DEPENDENCIA 
          where (DEPENDENCIA.nombre='${respuestas.dato9}')`);
        var numCols = inicialdep.getMetaData().getColumnCount();
        while (inicialdep.next()) {
          var iniciales_depend = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_depend += inicialdep.getString(col + 1) + "\n";
          }
        } //while
        var inicialproy = stmt.executeQuery(`select inicial_proy from PROYECTO
            where (PROYECTO.proyecto='${respuestas.dato10}')`);
        var numCols = inicialproy.getMetaData().getColumnCount();
        while (inicialproy.next()) {
          var iniciales_proy = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_proy += inicialproy.getString(col + 1) + "\n";
          }
        } //while

        //-------------------------------------------------------------------------------
        //Consulta del semestre y el total 
        var datos_principal = stmt.executeQuery(`select PRINCIPAL.total, PRINCIPAL.organizacion, PRINCIPAL.semestre  
            from PRINCIPAL 
            JOIN PROYECTO on PRINCIPAL.proyectofk = PROYECTO.id  
            where (PROYECTO.proyecto = '${respuestas.dato10}');`);
        var tos = [];
        while (datos_principal.next()) {
          for (var x = 1; x <= datos_principal.getMetaData().getColumnCount(); x++) {
            tos.push(datos_principal.getString(x));
          }
        }
        //Validación de campos nulos o con valor 0
        if (tos[2] == 0) {
          tos[2] = "----";
        }
        if (tos[1] == "Módulo") {
          tos[1] = "Módulos"
        } else if (tos[1] == "Unidad") {
          tos[1] = "Unidades"
        } else if (tos[1] == "Tema") {
          tos[1] = "Temas"
        } else if (tos[1] == "Secuencia") {
          tos[1] = "Secuencias"
        }        
        if (respuestas.dato15 == 0) {
          respuestas.dato15 = "----";
        }

        //Datos de cotejo

        if (respuestas.dato4 == 0) {
          respuestas.dato4 = "----";
        }
        if (respuestas.dato5 == 0) {
          respuestas.dato5 = "----";
        }
        if (respuestas.dato6 == 0) {
          respuestas.dato6 = "----";
        }
        if (respuestas.dato7 == 0) {
          respuestas.dato7 = "----";
        }
        if (respuestas.dato8 == 0) {
          respuestas.dato8 = "----";
        }
        if (respuestas.dato14 == 0) {
          respuestas.dato14 = "----";
        }

        //-------------------------Estructura del correo---------------------

        if (respuestas.dato12 == 0 || (respuestas.dato11 == "Escritorio" || respuestas.dato11 == "Sitio público"
          || respuestas.dato11 == "Componentes Generales")) {

          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
          results.setString(1, solicitudlast);
          results.setString(2, iniciales_elemento_mod);
          results.setString(3, 0);
          results.execute();
          var maximo = stmt.executeQuery('select last_insert_id();');
          maximo.next();
          var auxiliarlast = maximo.getString(1); //auxiliarfk

          var elemento_auxiliar = stmt.executeQuery(`SELECT elemento FROM AUXILIAR 
          WHERE AUXILIAR.id = '${auxiliarlast}'`);
          var numCols = elemento_auxiliar.getMetaData().getColumnCount();
          while (elemento_auxiliar.next()) {
            var elemento_aux = '';
            for (var col = 0; col < numCols; col++) {
              elemento_aux += elemento_auxiliar.getString(col + 1);
            }
          } //while

          var conteo_solicitudes = stmt.executeQuery(`SELECT COUNT(*) FROM ORDEN 
          JOIN SOLICITUD ON SOLICITUD.id = ORDEN.solicitudfk
          JOIN AUXILIAR ON AUXILIAR.solicitudfk = SOLICITUD.id
          WHERE (ORDEN.nombre = "Correcciones aplicadas"
          AND SOLICITUD.proyectofk ='${proyectoFK.toString()}'
          AND AUXILIAR.elemento ='${elemento_aux}');`);

          var numCols = conteo_solicitudes.getMetaData().getColumnCount();
          while (conteo_solicitudes.next()) {
            var cont = '';
            for (var col = 0; col < numCols; col++) {
              cont += conteo_solicitudes.getString(col + 1);
            }
          } //while

          if (cont == 1) {
            var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod + " / "
              + iniciales_proy + " / " + iniciales_depend;
            var txtEmail = cuerpoEmailSA_CG_SP_E(
              respuestas.dato3,
              respuestas.dato1,
              respuestas.dato9,
              respuestas.dato13,
              respuestas.dato15,
              respuestas.dato14,
              iniciales_proy, tos, iniciales_elemento_mod);
          } else {
            var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " " + cont + " / " + iniciales_elemento_mod + " / "
              + iniciales_proy + " / " + iniciales_depend;
            var txtEmail = cuerpoEmailSACount_CG_SP_E(
              respuestas.dato3,
              respuestas.dato1,
              respuestas.dato9,
              respuestas.dato13,
              respuestas.dato15,
              respuestas.dato14,
              iniciales_proy, tos, iniciales_elemento_mod, cont);
          }

        } else {
          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
          results.setString(1, solicitudlast);
          results.setString(2, iniciales_elemento_mod);
          results.setString(3, respuestas.dato12);
          results.execute();

          var maximo = stmt.executeQuery('select last_insert_id();');
          maximo.next();
          var auxiliarlast = maximo.getString(1); //auxiliarfk

          var elemento_auxiliar = stmt.executeQuery(`SELECT elemento FROM AUXILIAR 
          WHERE AUXILIAR.id = '${auxiliarlast}'`);
          var numCols = elemento_auxiliar.getMetaData().getColumnCount();
          while (elemento_auxiliar.next()) {
            var elemento_aux = '';
            for (var col = 0; col < numCols; col++) {
              elemento_aux += elemento_auxiliar.getString(col + 1);
            }
          } //while

          var conteo_solicitudes = stmt.executeQuery(`SELECT COUNT(*) FROM ORDEN 
          JOIN SOLICITUD ON SOLICITUD.id = ORDEN.solicitudfk
          JOIN AUXILIAR ON AUXILIAR.solicitudfk = SOLICITUD.id
          WHERE (ORDEN.nombre = "Correcciones aplicadas"
          AND SOLICITUD.proyectofk ='${proyectoFK.toString()}'
          AND AUXILIAR.elemento ='${elemento_aux}');`);

          var numCols = conteo_solicitudes.getMetaData().getColumnCount();
          while (conteo_solicitudes.next()) {
            var cont = '';
            for (var col = 0; col < numCols; col++) {
              cont += conteo_solicitudes.getString(col + 1);
            }
          } //while

          if (cont == 1) {
            var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod + respuestas.dato12 + " / "
              + iniciales_proy + " / " + iniciales_depend;
            var txtEmail = cuerpoEmailSA_M_U_T_S(
              respuestas.dato3,
              respuestas.dato1,
              respuestas.dato9,
              respuestas.dato13,
              respuestas.dato15,
              respuestas.dato14,
              iniciales_proy, tos, iniciales_elemento_mod, respuestas.dato12);

          } else {
            var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " " + cont + " / "
              + iniciales_elemento_mod + respuestas.dato12 + " / "
              + iniciales_proy + " / " + iniciales_depend;
            var txtEmail = cuerpoEmailSACount_M_U_T_S(
              respuestas.dato3,
              respuestas.dato1,
              respuestas.dato9,
              respuestas.dato13,
              respuestas.dato15,
              respuestas.dato14,
              iniciales_proy, tos, iniciales_elemento_mod, respuestas.dato12);

          }

        }
        var cotejo = cuerpoCotejo(
          respuestas.dato4,
          respuestas.dato5,
          respuestas.dato6,
          respuestas.dato7,
          respuestas.dato8,
        );


        var cuerpoCA = "Da clic en esta <a href = " + liga_form
          + ">liga</a> para aprobar o rechazar la solicitud. <br><br> Saludos cordiales!!!";

        if (respuestas.dato1 == "Multimedia" && respuestas.dato2 == "Diseño Instruccional") {
          var datosDeptos = [];
          datosDeptos = deptoCV(proyectoFK); //Retorna nombre, correoCCV, correoRCV en ese orden
          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: asuntoCA,
            htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>" + txtEmail
              + "<br>" + cotejo + "<br><br>"
              + cuerpoCA
              + "<br><br>TO: " + ("__" + datosDeptos[1])
              + "<br><br>CC: " + ("__" + datosDeptos[2])
          });
        } else {
          var nombreRemitente = remitenteEmail(respuestas.email);
          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: "No aplica / " + asuntoCA,
            htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
              + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
              + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
              + "<br>" + cotejo + "<br><br>"
              + "<br><br>Saludos cordiales!!!"
              + "<br><br>TO: " + (respuestas.email)
          });
        }
      } //17.0       
      break;
    case 'Entrega CE con comentarios':
    case 'Revisión':
    case 'Correcciones':
    case 'Programación':
    case 'Liberación':
    case 'Actualización':
    case 'Actualización finalizada':
      // Flujo de trabajo -> Orden -> Órdenes(varias) -> Dependencia -> Proyecto -> Asignatura -> Solicitud
      if (Object.keys(respuestas).length == 13.0) { //Órdenes que tienen Asignatura

        var results = conn2.prepareStatement('INSERT INTO SOLICITUD ' +
          '(nombre, instrucciones, ruta, observacion, email, proyectofk)' +
          'values (?, ?, ?, ?, ?, ?)');
          results.setString(1, respuestas.solicitud);
          results.setString(2, respuestas.dato9); //instrucciones
          results.setString(3, respuestas.dato10); //ruta
          results.setString(4, respuestas.dato11); //observacion
          results.setString(5, respuestas.email);

        var stmt = conn2.createStatement();
        var proyectofk = stmt.executeQuery(`select PROYECTO.id from DEPENDENCIA 
        JOIN PROYECTO on DEPENDENCIA.id = PROYECTO.dependenciafk 
        where (DEPENDENCIA.nombre='${respuestas.dato4}' 
        and PROYECTO.proyecto = '${respuestas.dato5}' 
        and PROYECTO.asignatura = '${respuestas.dato6}' )`);

        var numCols = proyectofk.getMetaData().getColumnCount();
        while (proyectofk.next()) {
          var proyectoFK = '';
          for (var col = 0; col < numCols; col++) {
            proyectoFK += proyectofk.getString(col + 1) + "\n";
          }
          results.setString(6, proyectoFK.toString());
          results.execute();
        } //while
        var maximo = stmt.executeQuery('select last_insert_id();');
        maximo.next();
        var solicitudlast = maximo.getString(1); //solicitudfk
        var results = conn2.prepareStatement('INSERT INTO ORDEN ' +
          '(nombre, depa_solicitante, depa_atencion, solicitudfk, url) values (?, ?, ?, ?, ?)');
        results.setString(1, respuestas.dato3); //nombre
        results.setString(2, respuestas.dato1); //depa_solicitante
        results.setString(3, respuestas.dato2); //depa_atencion
        results.setString(4, solicitudlast);
        results.setString(5, answer.answerURL);
        results.execute();
        //------------------------------------------------------------------------
        var temporal = {}
        temporal.entrega = respuestas.dato7;//entrega
        temporal.numero = respuestas.dato8;//numero
        Logger.log(temporal);

        var solicitudfk = stmt.executeQuery(`SELECT id FROM SOLICITUD 
        where proyectofk = '${proyectoFK.toString()}';`); //proyectofk
        var numCols = solicitudfk.getMetaData().getColumnCount();
        while (solicitudfk.next()) {
          var solicitudFK = '';
          for (var col = 0; col < numCols; col++) {
            solicitudFK += solicitudfk.getString(col + 1) + "\n";
          }
        } //while

        switch (respuestas.dato3) {
          case 'Revisión':
            if ((respuestas.dato1 == "Diseño Instruccional") && (respuestas.dato2 == "Corrección de Estilo")) {
              avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
            }
            break;
          case 'Entrega CE con comentarios':

            if ((respuestas.dato1 == "Corrección de Estilo") && (respuestas.dato2 == "Diseño Instruccional")) {
              avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
            }
            break;
          case 'Correcciones':
            if ((respuestas.dato1 == "Diseño Instruccional") && (respuestas.dato2 == "Multimedia")) {
              avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
            }
            break;

          case "Programación":
            if ((respuestas.dato1 == "Multimedia") && (respuestas.dato2 == "Programación de Recursos")) {
              avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
            }
            break;
          case "Liberación":
            if ((respuestas.dato1 == "Diseño Instruccional") && (respuestas.dato2 == "Administración de Proyectos")) {
              avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
            }
            break;
          case "Actualización":
            if ((respuestas.dato1 == "Diseño Instruccional") && (respuestas.dato2 == "Multimedia")) {
              avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
            }
            break;
          case "Actualización finalizada":
            if ((respuestas.dato1 == "Multimedia") && (respuestas.dato2 == "Diseño Instruccional")) {
              avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
            }
            break;
          default:
            Logger.log("Error varias ordenes: avance")
            break;
        }

        //------------------------------------------------------------------------

        var iniciales_elemento = '';
        for (var item in temporal) {
          temporal[item].forEach(function (elemento, indice) {
            var entregaM = stmt.executeQuery(`select abreviatura from ELEMENTO
          where (ELEMENTO.nombre='${elemento}')`);
            var numCols = entregaM.getMetaData().getColumnCount();
            while (entregaM.next()) {
              for (var col = 0; col < numCols; col++) {
                iniciales_elemento += entregaM.getString(col + 1) + ",";
              }
            } //while
          });
        }//for
        var iniciales_elemento_mod = ""
        iniciales_elemento_mod = iniciales_elemento.slice(0, -1)

        //------------------------------------------------------------------------
        //Liga con las respuestas del formulario
        var liga = stmt.executeQuery(`select url from ORDEN 
        where (solicitudfk='${solicitudlast}')`);
        var numCols = liga.getMetaData().getColumnCount();
        while (liga.next()) {
          var liga_form = '';
          for (var col = 0; col < numCols; col++) {
            liga_form += liga.getString(col + 1) + "\n";
          }
        } //while

        //------------------------------------------------------------------------

        //Consulta de iniciales para dependencia y proyecto para correo 

        var inicialdep = stmt.executeQuery(`select inicial_dep from DEPENDENCIA 
        where (DEPENDENCIA.nombre='${respuestas.dato4}')`);
        var numCols = inicialdep.getMetaData().getColumnCount();
        while (inicialdep.next()) {
          var iniciales_depend = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_depend += inicialdep.getString(col + 1) + "\n";
          }
        } //while
        var inicialproy = stmt.executeQuery(`select inicial_proy from PROYECTO
            where (PROYECTO.proyecto='${respuestas.dato5}')`);
        var numCols = inicialproy.getMetaData().getColumnCount();
        while (inicialproy.next()) {
          var iniciales_proy = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_proy += inicialproy.getString(col + 1) + "\n";
          }
        } //while

        //-------------------------------------------------------------------------------
        //Consulta del semestre y el total 
        var datos_principal = stmt.executeQuery(`select PRINCIPAL.total, PRINCIPAL.organizacion, PRINCIPAL.semestre  
            from PRINCIPAL 
            JOIN PROYECTO on PRINCIPAL.proyectofk = PROYECTO.id  
            where (PROYECTO.proyecto = '${respuestas.dato5}' 
            and PROYECTO.asignatura = '${respuestas.dato6}' )`);
        var tos = [];
        while (datos_principal.next()) {
          for (var x = 1; x <= datos_principal.getMetaData().getColumnCount(); x++) {
            tos.push(datos_principal.getString(x));
          }
        }
        //Validación de campos nulos o con valor 0
        if (tos[2] == 0) {
          tos[2] = "----";
        }
        if (tos[1] == "Módulo") {
          tos[1] = "Módulos"
        } else if (tos[1] == "Unidad") {
          tos[1] = "Unidades"
        } else if (tos[1] == "Tema") {
          tos[1] = "Temas"
        } else if (tos[1] == "Secuencia") {
          tos[1] = "Secuencias"
        }        
        if (respuestas.dato11 == 0) {
          respuestas.dato11 = "----";
        }
        if (respuestas.dato10 == 0) {
          respuestas.dato10 = "----";
        }

        //-------------------------Estructura del correo---------------------
        if (respuestas.dato8 == 0 || (respuestas.dato7 == "Escritorio" || respuestas.dato7 == "Sitio público"
          || respuestas.dato7 == "Componentes Generales")) {
          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
              results.setString(1, solicitudlast);
              results.setString(2, iniciales_elemento_mod);
              results.setString(3, 0);
              results.execute();

          var maximo = stmt.executeQuery('select last_insert_id();');
          maximo.next();
          var auxiliarlast = maximo.getString(1); //auxiliarfk

          var elemento_auxiliar = stmt.executeQuery(`SELECT elemento FROM AUXILIAR 
          WHERE AUXILIAR.id = '${auxiliarlast}'`);
          var numCols = elemento_auxiliar.getMetaData().getColumnCount();
          while (elemento_auxiliar.next()) {
            var elemento_aux = '';
            for (var col = 0; col < numCols; col++) {
              elemento_aux += elemento_auxiliar.getString(col + 1);
            }
          } //while

          if (respuestas.dato3 == "Correcciones" || respuestas.dato3 == "Revisión" ||
            respuestas.dato3 == "Entrega CE con comentarios") {
              var conteo_solicitudes = stmt.executeQuery(`SELECT COUNT(*) FROM ORDEN 
                JOIN SOLICITUD ON SOLICITUD.id = ORDEN.solicitudfk
                JOIN AUXILIAR ON AUXILIAR.solicitudfk = SOLICITUD.id
                WHERE (ORDEN.nombre = '${respuestas.dato3}'
                AND SOLICITUD.proyectofk ='${proyectoFK.toString()}'
                AND AUXILIAR.elemento ='${elemento_aux}');`);

              var numCols = conteo_solicitudes.getMetaData().getColumnCount();
              while (conteo_solicitudes.next()) {
                var cont = '';
                for (var col = 0; col < numCols; col++) {
                  cont += conteo_solicitudes.getString(col + 1);
                }
              } //while  

            if (cont == 1) {
              var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod
                + " / " + respuestas.dato6 + " / " + iniciales_proy + " / " + iniciales_depend;
              var txtEmail = cuerpoEmailCA_CG_SP_E(
                respuestas.dato3,
                respuestas.dato1,
                respuestas.dato4,
                respuestas.dato6,
                respuestas.dato9,
                respuestas.dato11,
                respuestas.dato10,
                iniciales_proy, tos, iniciales_elemento_mod);

            } else {
              var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " " + cont + " / " + iniciales_elemento_mod
                + " / " + respuestas.dato6 + " / " + iniciales_proy + " / " + iniciales_depend;

              var txtEmail = cuerpoEmailCACount_CG_SP_E(
                respuestas.dato3,
                respuestas.dato1,
                respuestas.dato4,
                respuestas.dato6,
                respuestas.dato9,
                respuestas.dato11,
                respuestas.dato10,
                iniciales_proy, tos, iniciales_elemento_mod, cont);

            }                  
            
          }else{
              var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod
                + " / " + respuestas.dato6 + " / " + iniciales_proy + " / " + iniciales_depend;
              var txtEmail = cuerpoEmailCA_CG_SP_E(
                respuestas.dato3,
                respuestas.dato1,
                respuestas.dato4,
                respuestas.dato6,
                respuestas.dato9,
                respuestas.dato11,
                respuestas.dato10,
                iniciales_proy, tos, iniciales_elemento_mod);
          }


        
        } else {//aqui if SP, Escritorio SP
          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
          results.setString(1, solicitudlast);
          results.setString(2, iniciales_elemento_mod);
          results.setString(3, respuestas.dato8);
          results.execute();

          var maximo = stmt.executeQuery('select last_insert_id();');
          maximo.next();
          var auxiliarlast = maximo.getString(1); //auxiliarfk

          var elemento_auxiliar = stmt.executeQuery(`SELECT elemento FROM AUXILIAR 
          WHERE AUXILIAR.id = '${auxiliarlast}'`);
          var numCols = elemento_auxiliar.getMetaData().getColumnCount();
          while (elemento_auxiliar.next()) {
            var elemento_aux = '';
            for (var col = 0; col < numCols; col++) {
              elemento_aux += elemento_auxiliar.getString(col + 1);
            }
          } //while
          if (respuestas.dato3 == "Correcciones" || respuestas.dato3 == "Revisión" ||
            respuestas.dato3 == "Entrega CE con comentarios") {
            var conteo_solicitudes = stmt.executeQuery(`SELECT COUNT(*) FROM ORDEN 
            JOIN SOLICITUD ON SOLICITUD.id = ORDEN.solicitudfk
            JOIN AUXILIAR ON AUXILIAR.solicitudfk = SOLICITUD.id
            WHERE (ORDEN.nombre = '${respuestas.dato3}'
            AND SOLICITUD.proyectofk ='${proyectoFK.toString()}'
            AND AUXILIAR.elemento ='${elemento_aux}');`);

            var numCols = conteo_solicitudes.getMetaData().getColumnCount();
            while (conteo_solicitudes.next()) {
              var cont = '';
              for (var col = 0; col < numCols; col++) {
                cont += conteo_solicitudes.getString(col + 1);
              }
            } //while    
          if (cont == 1) {
            var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod + respuestas.dato8
              + " / " + respuestas.dato6 + " / " + iniciales_proy + " / " + iniciales_depend;
            var txtEmail = cuerpoEmailCA_M_U_T_S(
              respuestas.dato3,
              respuestas.dato1,
              respuestas.dato4,
              respuestas.dato6,
              respuestas.dato9,
              respuestas.dato11,
              respuestas.dato10,
              iniciales_proy, tos, iniciales_elemento_mod, respuestas.dato8);

          } else {
            var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " " + cont + " / "
              + iniciales_elemento_mod + respuestas.dato8
              + " / " + respuestas.dato6 + " / " + iniciales_proy + " / " + iniciales_depend;

            var txtEmail = cuerpoEmailCACount_M_U_T_S(
              respuestas.dato3,
              respuestas.dato1,
              respuestas.dato4,
              respuestas.dato6,
              respuestas.dato9,
              respuestas.dato11,
              respuestas.dato10,
              iniciales_proy, tos, iniciales_elemento_mod, respuestas.dato8, cont);

          }                    
          }else{
            //otras ordenes
            var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod + respuestas.dato8
              + " / " + respuestas.dato6 + " / " + iniciales_proy + " / " + iniciales_depend;
            var txtEmail = cuerpoEmailCA_M_U_T_S(
              respuestas.dato3,
              respuestas.dato1,
              respuestas.dato4,
              respuestas.dato6,
              respuestas.dato9,
              respuestas.dato11,
              respuestas.dato10,
              iniciales_proy, tos, iniciales_elemento_mod, respuestas.dato8);            
          }


        }

        var cuerpoCA = "Da clic en esta <a href = " + liga_form
          + ">liga</a> para aprobar o rechazar la solicitud. <br><br> Saludos  cordiales!!!";

        switch (respuestas.dato3) {
          case 'Revisión':
            if (respuestas.dato1 == "Diseño Instruccional" && respuestas.dato2 == "Corrección de Estilo") {
              var datosDeptos = [];
              datosDeptos = deptoDI(proyectoFK); //Retorna nombre, correoCDI, correoRDI en ese orden
              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: asuntoCA,
                htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>" + txtEmail
                  + "<br><br>" + cuerpoCA
                  + "<br><br>TO: " + ("__" + datosDeptos[1])
                  + "<br><br>CC: " + ("__" + datosDeptos[2])
              });
            } else {
              var nombreRemitente = remitenteEmail(respuestas.email);
              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: "No aplica / " + asuntoCA,
                htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
                  + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
                  + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
                  + "<br><br>Saludos cordiales!!!"
                  + "<br><br>TO: " + respuestas.email
              });
            }
            break;
          case 'Entrega CE con comentarios':
            if (respuestas.dato1 == "Corrección de Estilo" && respuestas.dato2 == "Diseño Instruccional") {
              var datosDeptos = [];
              datosDeptos = deptoCE(proyectoFK); //Retorna nombre, correoRCE

              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: asuntoCA,
                htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>"
                  + txtEmail + "<br><br>" + cuerpoCA
                  + "<br><br>TO: " + "__" + datosDeptos[1]
              });
            } else {
              var nombreRemitente = remitenteEmail(respuestas.email);

              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: "No aplica / " + asuntoCA,
                htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
                  + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
                  + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
                  + "<br><br>Saludos cordiales!!!"
                  + "<br><br>TO: " + (respuestas.email)
              });
            }
            break;
          case 'Correcciones':

            if (respuestas.dato1 == "Diseño Instruccional" && respuestas.dato2 == "Multimedia") {
              var datosDeptos = [];
              datosDeptos = deptoDI(proyectoFK); //Retorna nombre, correoCDI, correoRDI en ese orden

              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: asuntoCA,
                htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>"
                  + txtEmail + "<br><br>" + cuerpoCA
                  + "<br><br>TO: " + "__" + datosDeptos[1]
                  + "<br><br>CC: " + "__" + datosDeptos[2]
              });
            } else {
              var nombreRemitente = remitenteEmail(respuestas.email);

              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: "No aplica / " + asuntoCA,
                htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
                  + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
                  + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
                  + "<br><br>Saludos cordiales!!!"
                  + "<br><br>TO: " + respuestas.email
              });
            }
            break;
          case "Programación":
            if (respuestas.dato1 == "Multimedia" && respuestas.dato2 == "Programación de Recursos") {
              var datosDeptos = [];
              datosDeptos = deptoCV(proyectoFK); //Retorna nombre, correoCCV, correoRCV en ese orden
              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: asuntoCA,
                htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>" + txtEmail
                  + "<br><br>" + cuerpoCA
                  + "<br><br>TO: " + "__" + datosDeptos[1]
                  + "<br><br>CC: " + "__" + datosDeptos[2]
              });
            } else {
              var nombreRemitente = remitenteEmail(respuestas.email);
              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: "No aplica / " + asuntoCA,
                htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
                  + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
                  + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
                  + "<br><br>Saludos cordiales!!!"
                  + "<br><br>TO: " + respuestas.email
              });
            }
            break;
          case "Liberación":
            if (respuestas.dato1 == "Diseño Instruccional" && respuestas.dato2 == "Administración de Proyectos") {
              var colaboradoradmin = stmt.executeQuery(`select COLABORADOR_BASE.email
              from COLABORADOR_BASE 
              JOIN COLABORADOR on COLABORADOR_BASE.id = COLABORADOR.admin 
              JOIN PRINCIPAL on PRINCIPAL.colaboradorfk = COLABORADOR.id 
              where PRINCIPAL.proyectofk = '${proyectoFK}'`);
              var numCols = colaboradoradmin.getMetaData().getColumnCount();
              while (colaboradoradmin.next()) {
                var adminCorreo = '';
                for (var col = 0; col < numCols; col++) {
                  adminCorreo += colaboradoradmin.getString(col + 1) + "\n";
                }
              } //while
              var datosDeptos = [];
              datosDeptos = deptoDI(proyectoFK); //Retorna nombre, correoCDI, correoRDI en ese orden

              var datosDeptos1 = [];
              datosDeptos1 = deptoCV(proyectoFK); //Retorna nombre, correoCCV, correoRCV en ese orden


              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: asuntoCA,
                htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>"
                  + txtEmail + "<br><br>" + cuerpoCA
                  + "<br><br>TO: " + "__" + datosDeptos[1] + "__" + adminCorreo + "__edith_tapia@cuaieed.unam.mx"
                  + "__" + datosDeptos1[1]
                  + "<br><br>CC: " + "__" + datosDeptos[2] + "__" + datosDeptos1[2]
              });


            } else {
              var nombreRemitente = remitenteEmail(respuestas.email);
              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: "No aplica / " + asuntoCA,
                htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
                  + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
                  + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
                  + "<br><br>Saludos cordiales!!!"
                  + "<br><br>TO: " + respuestas.email
              });
            }
            break;
          case "Actualización":

            if (respuestas.dato1 == "Diseño Instruccional" && respuestas.dato2 == "Multimedia") {
              var datosDeptos = [];
              datosDeptos = deptoDI(proyectoFK); //Retorna nombre, correoCDI, correoRDI en ese orden

              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: asuntoCA,
                htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>"
                  + txtEmail + "<br><br>" + cuerpoCA
                  + "<br><br>TO: " + "__" + datosDeptos[1]
                  + "<br><br>CC: " + "__" + datosDeptos[2]
              });
            } else {
              var nombreRemitente = remitenteEmail(respuestas.email);
              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: "No aplica / " + asuntoCA,
                htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
                  + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
                  + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
                  + "<br><br>Saludos cordiales!!!"
                  + "<br><br>TO: " + respuestas.email
              });
            }
            break;
          case "Actualización finalizada":

            if (respuestas.dato1 == "Multimedia" && respuestas.dato2 == "Diseño Instruccional") {
              var datosDeptos = [];
              datosDeptos = deptoCV(proyectoFK); //Retorna nombre, correoCCV, correoRCV en ese orden


              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: asuntoCA,
                htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>"
                  + txtEmail + "<br><br>" + cuerpoCA
                  + "<br><br>TO: " + "__" + datosDeptos[1]
                  + "<br><br>CC: " + "__" + datosDeptos[2]
              });
            } else {
              var nombreRemitente = remitenteEmail(respuestas.email);

              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: "No aplica / " + asuntoCA,
                htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
                  + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
                  + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
                  + "<br><br>Saludos cordiales!!!"
                  + "<br><br>TO: " + respuestas.email
              });
            }
            break;
          default:
            Logger.log("Error!")
            break;
        }

      } //13.0

      // Flujo de trabajo -> Orden -> Órdenes(varias) -> Dependencia -> Proyecto -> Solicitud
      if (Object.keys(respuestas).length == 12.0) { //Órdenes que NO tienen Asignatura
        var results = conn2.prepareStatement('INSERT INTO SOLICITUD ' +
          '(nombre, instrucciones, ruta, observacion, email, proyectofk)' +
          'values (?, ?, ?, ?, ?, ?)');
        results.setString(1, respuestas.solicitud);
        results.setString(2, respuestas.dato8); //instrucciones
        results.setString(3, respuestas.dato9); //ruta
        results.setString(4, respuestas.dato10); //observacion
        results.setString(5, respuestas.email);

        var stmt = conn2.createStatement();
        var proyectofk = stmt.executeQuery(`select PROYECTO.id from DEPENDENCIA 
        JOIN PROYECTO on DEPENDENCIA.id = PROYECTO.dependenciafk 
        where (DEPENDENCIA.nombre='${respuestas.dato4}' 
        and PROYECTO.proyecto = '${respuestas.dato5}')`);
        var numCols = proyectofk.getMetaData().getColumnCount();
        while (proyectofk.next()) {
          var proyectoFK = '';
          for (var col = 0; col < numCols; col++) {
            proyectoFK += proyectofk.getString(col + 1) + "\n";
          }
          results.setString(6, proyectoFK.toString());
          results.execute();
        } //while
        var maximo = stmt.executeQuery('select last_insert_id();');
        maximo.next();
        var solicitudlast = maximo.getString(1); //solicitudfk
        var results = conn2.prepareStatement('INSERT INTO ORDEN ' +
          '(nombre, depa_solicitante, depa_atencion, solicitudfk, url) values (?, ?, ?, ?, ?)');
        results.setString(1, respuestas.dato3); //nombre
        results.setString(2, respuestas.dato1); //depa_solictante
        results.setString(3, respuestas.dato2); //depa_atencion
        results.setString(4, solicitudlast);
        results.setString(5, answer.answerURL);
        results.execute();

        //------------------------------------------------------------------------

        var temporal = {}
        temporal.entrega = respuestas.dato6;//entrega
        temporal.numero = respuestas.dato7;//numero
        Logger.log(temporal);

        var solicitudfk = stmt.executeQuery(`SELECT id FROM SOLICITUD 
        where proyectofk = '${proyectoFK.toString()}';`); //proyectofk
        var numCols = solicitudfk.getMetaData().getColumnCount();
        while (solicitudfk.next()) {
          var solicitudFK = '';
          for (var col = 0; col < numCols; col++) {
            solicitudFK += solicitudfk.getString(col + 1) + "\n";
          }
        } //while

        switch (respuestas.dato3) {
          case 'Revisión':
            if ((respuestas.dato1 == "Diseño Instruccional") && (respuestas.dato2 == "Corrección de Estilo")) {
              avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
            }
            break;
          case 'Entrega CE con comentarios':

            if ((respuestas.dato1 == "Corrección de Estilo") && (respuestas.dato2 == "Diseño Instruccional")) {
              avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
            }
            break;
          case 'Correcciones':
            if ((respuestas.dato1 == "Diseño Instruccional") && (respuestas.dato2 == "Multimedia")) {
              avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
            }
            break;

          case "Programación":
            if ((respuestas.dato1 == "Multimedia") && (respuestas.dato2 == "Programación de Recursos")) {
              avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
            }
            break;
          case "Liberación":
            if ((respuestas.dato1 == "Diseño Instruccional") && (respuestas.dato2 == "Administración de Proyectos")) {
              avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
            }
            break;
          case "Actualización":
            if ((respuestas.dato1 == "Diseño Instruccional") && (respuestas.dato2 == "Multimedia")) {
              avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
            }
            break;
          case "Actualización finalizada":
            if ((respuestas.dato1 == "Multimedia") && (respuestas.dato2 == "Diseño Instruccional")) {
              avancexmaterial(temporal, solicitudFK, proyectoFK, respuestas.dato3);
            }
            break;
          default:
            Logger.log("Error varias ordenes: avance")
            break;
        }

        //------------------------------------------------------------------------
        var iniciales_elemento = '';
        for (var item in temporal) {
          temporal[item].forEach(function (elemento, indice) {

            var entregaM = stmt.executeQuery(`select abreviatura from ELEMENTO
          where (ELEMENTO.nombre='${elemento}')`);
            var numCols = entregaM.getMetaData().getColumnCount();
            while (entregaM.next()) {
              for (var col = 0; col < numCols; col++) {
                iniciales_elemento += entregaM.getString(col + 1) + ",";
              }
            } //while
          });
        }//for
        var iniciales_elemento_mod = ""
        iniciales_elemento_mod = iniciales_elemento.slice(0, -1)

        //------------------------------------------------------------------------

        //Liga con las respuestas del formulario

        var liga = stmt.executeQuery(`select url from ORDEN 
        where (solicitudfk='${solicitudlast}')`);
        var numCols = liga.getMetaData().getColumnCount();
        while (liga.next()) {
          var liga_form = '';
          for (var col = 0; col < numCols; col++) {
            liga_form += liga.getString(col + 1) + "\n";
          }
        } //while

        //------------------------------------------------------------------------

        //Consulta de iniciales para dependencia y proyecto para correo 

        var inicialdep = stmt.executeQuery(`select inicial_dep from DEPENDENCIA 
          where (DEPENDENCIA.nombre='${respuestas.dato4}')`);
        var numCols = inicialdep.getMetaData().getColumnCount();
        while (inicialdep.next()) {
          var iniciales_depend = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_depend += inicialdep.getString(col + 1) + "\n";
          }
        } //while
        var inicialproy = stmt.executeQuery(`select inicial_proy from PROYECTO
            where (PROYECTO.proyecto='${respuestas.dato5}')`);
        var numCols = inicialproy.getMetaData().getColumnCount();
        while (inicialproy.next()) {
          var iniciales_proy = '';
          for (var col = 0; col < numCols; col++) {
            iniciales_proy += inicialproy.getString(col + 1) + "\n";
          }
        } //while

        //-------------------------------------------------------------------------------
        //Consulta del semestre y el total 
        var datos_principal = stmt.executeQuery(`select PRINCIPAL.total, PRINCIPAL.organizacion, PRINCIPAL.semestre  
            from PRINCIPAL 
            JOIN PROYECTO on PRINCIPAL.proyectofk = PROYECTO.id  
            where (PROYECTO.proyecto = '${respuestas.dato5}');`);
        var tos = [];
        while (datos_principal.next()) {
          for (var x = 1; x <= datos_principal.getMetaData().getColumnCount(); x++) {
            tos.push(datos_principal.getString(x));
          }
        }
        //Validación de campos nulos o con valor 0
        if (tos[2] == 0) {
          tos[2] = "----";
        }
        if (tos[1] == "Módulo") {
          tos[1] = "Módulos"
        } else if (tos[1] == "Unidad") {
          tos[1] = "Unidades"
        } else if (tos[1] == "Tema") {
          tos[1] = "Temas"
        } else if (tos[1] == "Secuencia") {
          tos[1] = "Secuencias"
        }
        if (respuestas.dato10 == 0) {
          respuestas.dato10 = "----";
        }

        if (respuestas.dato9 == 0) {
          respuestas.dato9 = "----";
        }
        //-------------------------Estructura del correo---------------------
        if (respuestas.dato7 == 0 || (respuestas.dato6 == "Escritorio" || respuestas.dato6 == "Sitio público"
          || respuestas.dato6 == "Componentes Generales")) {
          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
          results.setString(1, solicitudlast);
          results.setString(2, iniciales_elemento_mod);
          results.setString(3, 0);
          results.execute();

          var maximo = stmt.executeQuery('select last_insert_id();');
          maximo.next();
          var auxiliarlast = maximo.getString(1); //auxiliarfk

          var elemento_auxiliar = stmt.executeQuery(`SELECT elemento FROM AUXILIAR 
          WHERE AUXILIAR.id = '${auxiliarlast}'`);
          var numCols = elemento_auxiliar.getMetaData().getColumnCount();
          while (elemento_auxiliar.next()) {
            var elemento_aux = '';
            for (var col = 0; col < numCols; col++) {
              elemento_aux += elemento_auxiliar.getString(col + 1);
            }
          } //while
          if (respuestas.dato3 == "Correcciones" || respuestas.dato3 == "Revisión" ||
            respuestas.dato3 == "Entrega CE con comentarios") {
            var conteo_solicitudes = stmt.executeQuery(`SELECT COUNT(*) FROM ORDEN 
            JOIN SOLICITUD ON SOLICITUD.id = ORDEN.solicitudfk
            JOIN AUXILIAR ON AUXILIAR.solicitudfk = SOLICITUD.id
            WHERE (ORDEN.nombre = '${respuestas.dato3}'
            AND SOLICITUD.proyectofk ='${proyectoFK.toString()}'
            AND AUXILIAR.elemento ='${elemento_aux}');`);

            var numCols = conteo_solicitudes.getMetaData().getColumnCount();
            while (conteo_solicitudes.next()) {
              var cont = '';
              for (var col = 0; col < numCols; col++) {
                cont += conteo_solicitudes.getString(col + 1);
              }
            } //while            
          if (cont == 1) {
            var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod + " / "
              + iniciales_proy + " / " + iniciales_depend;
            var txtEmail = cuerpoEmailSA_CG_SP_E(
              respuestas.dato3,
              respuestas.dato1,
              respuestas.dato4,
              respuestas.dato8,
              respuestas.dato10,
              respuestas.dato9,
              iniciales_proy, tos, iniciales_elemento_mod);


          } else {
            var asuntoCA = "**APROBACIÓN** O. " + respuestas.dato3 + " " + cont + " / " + iniciales_elemento_mod + " / "
              + iniciales_proy + " / " + iniciales_depend;

            var txtEmail = cuerpoEmailSACount_CG_SP_E(
              respuestas.dato3,
              respuestas.dato1,
              respuestas.dato4,
              respuestas.dato8,
              respuestas.dato10,
              respuestas.dato9,
              iniciales_proy, tos, iniciales_elemento_mod, cont);
          }            
          }else{
            //otras ordenes
            var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod + " / "
              + iniciales_proy + " / " + iniciales_depend;
            var txtEmail = cuerpoEmailSA_CG_SP_E(
              respuestas.dato3,
              respuestas.dato1,
              respuestas.dato4,
              respuestas.dato8,
              respuestas.dato10,
              respuestas.dato9,
              iniciales_proy, tos, iniciales_elemento_mod);

          }

        } else {

          //Inserción en tabla AUXILIAR
          var results = conn2.prepareStatement('INSERT INTO AUXILIAR ' +
            '(solicitudfk, elemento, numero) values (?, ?, ?)');
          results.setString(1, solicitudlast);
          results.setString(2, iniciales_elemento_mod);
          results.setString(3, respuestas.dato7);
          results.execute();
          var maximo = stmt.executeQuery('select last_insert_id();');
          maximo.next();
          var auxiliarlast = maximo.getString(1); //auxiliarfk

          var elemento_auxiliar = stmt.executeQuery(`SELECT elemento FROM AUXILIAR 
          WHERE AUXILIAR.id = '${auxiliarlast}'`);
          var numCols = elemento_auxiliar.getMetaData().getColumnCount();
          while (elemento_auxiliar.next()) {
            var elemento_aux = '';
            for (var col = 0; col < numCols; col++) {
              elemento_aux += elemento_auxiliar.getString(col + 1);
            }
          } //while
          if (respuestas.dato3 == "Correcciones" || respuestas.dato3 == "Revisión" ||
            respuestas.dato3 == "Entrega CE con comentarios") {
            var conteo_solicitudes = stmt.executeQuery(`SELECT COUNT(*) FROM ORDEN 
            JOIN SOLICITUD ON SOLICITUD.id = ORDEN.solicitudfk
            JOIN AUXILIAR ON AUXILIAR.solicitudfk = SOLICITUD.id
            WHERE (ORDEN.nombre = '${respuestas.dato3}'
            AND SOLICITUD.proyectofk ='${proyectoFK.toString()}'
            AND AUXILIAR.elemento ='${elemento_aux}');`);

            var numCols = conteo_solicitudes.getMetaData().getColumnCount();
            while (conteo_solicitudes.next()) {
              var cont = '';
              for (var col = 0; col < numCols; col++) {
                cont += conteo_solicitudes.getString(col + 1);
              }
            } //while            
          if (cont == 1) {
            var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod + respuestas.dato7 + " / "
              + iniciales_proy + " / " + iniciales_depend;
            var txtEmail = cuerpoEmailSA_M_U_T_S(
              respuestas.dato3,
              respuestas.dato1,
              respuestas.dato4,
              respuestas.dato8,
              respuestas.dato10,
              respuestas.dato9,
              iniciales_proy, tos, iniciales_elemento_mod, respuestas.dato7);
          } else {

            var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " " + cont + " / "
              + iniciales_elemento_mod + respuestas.dato7 + " / "
              + iniciales_proy + " / " + iniciales_depend;
            var txtEmail = cuerpoEmailSACount_M_U_T_S(
              respuestas.dato3,
              respuestas.dato1,
              respuestas.dato4,
              respuestas.dato8,
              respuestas.dato10,
              respuestas.dato9,
              iniciales_proy, tos, iniciales_elemento_mod, respuestas.dato7, cont);
          }            
          } else{
            //otras ordenes
            var asuntoCA = "**APROBACIÓN** O." + respuestas.dato3 + " / " + iniciales_elemento_mod + respuestas.dato7 + " / "
              + iniciales_proy + " / " + iniciales_depend;
            var txtEmail = cuerpoEmailSA_M_U_T_S(
              respuestas.dato3,
              respuestas.dato1,
              respuestas.dato4,
              respuestas.dato8,
              respuestas.dato10,
              respuestas.dato9,
              iniciales_proy, tos, iniciales_elemento_mod, respuestas.dato7);            
          }


        }


        var cuerpoCA = "Da clic en esta <a href = " + liga_form
          + ">liga</a> para aprobar o rechazar la solicitud. <br><br> Saludos cordiales!!!";

        switch (respuestas.dato3) {
          case 'Revisión':
            if (respuestas.dato1 == "Diseño Instruccional" && respuestas.dato2 == "Corrección de Estilo") {
              var datosDeptos = [];
              datosDeptos = deptoDI(proyectoFK); //Retorna nombre, correoCDI, correoRDI en ese orden
              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: asuntoCA,
                htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>" + txtEmail
                  + "<br><br>" + cuerpoCA
                  + "<br><br>TO: " + ("__" + datosDeptos[1])
                  + "<br><br>CC: " + ("__" + datosDeptos[2])
              });
            } else {
              var nombreRemitente = remitenteEmail(respuestas.email);
              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: "No aplica / " + asuntoCA,
                htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
                  + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
                  + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
                  + "<br><br>Saludos cordiales!!!"
                  + "<br><br>TO: " + respuestas.email
              });
            }
            break;
          case 'Entrega CE con comentarios':
            if (respuestas.dato1 == "Corrección de Estilo" && respuestas.dato2 == "Diseño Instruccional") {
              var datosDeptos = [];
              datosDeptos = deptoCE(proyectoFK); //Retorna nombre, correoRCE

              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: asuntoCA,
                htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>"
                  + txtEmail + "<br><br>" + cuerpoCA
                  + "<br><br>TO: " + "__" + datosDeptos[1]
              });
            } else {
              var nombreRemitente = remitenteEmail(respuestas.email);

              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: "No aplica / " + asuntoCA,
                htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
                  + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
                  + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
                  + "<br><br>Saludos cordiales!!!"
                  + "<br><br>TO: " + (respuestas.email)
              });
            }
            break;
          case 'Correcciones':

            if (respuestas.dato1 == "Diseño Instruccional" && respuestas.dato2 == "Multimedia") {
              var datosDeptos = [];
              datosDeptos = deptoDI(proyectoFK); //Retorna nombre, correoCDI, correoRDI en ese orden

              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: asuntoCA,
                htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>"
                  + txtEmail + "<br><br>" + cuerpoCA
                  + "<br><br>TO: " + "__" + datosDeptos[1]
                  + "<br><br>CC: " + "__" + datosDeptos[2]
              });
            } else {
              var nombreRemitente = remitenteEmail(respuestas.email);

              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: "No aplica / " + asuntoCA,
                htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
                  + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
                  + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
                  + "<br><br>Saludos cordiales!!!"
                  + "<br><br>TO: " + respuestas.email
              });
            }
            break;
          case "Programación":
            if (respuestas.dato1 == "Multimedia" && respuestas.dato2 == "Programación de Recursos") {
              var datosDeptos = [];
              datosDeptos = deptoCV(proyectoFK); //Retorna nombre, correoCCV, correoRCV en ese orden
              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: asuntoCA,
                htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>" + txtEmail
                  + "<br><br>" + cuerpoCA
                  + "<br><br>TO: " + "__" + datosDeptos[1]
                  + "<br><br>CC: " + "__" + datosDeptos[2]
              });
            } else {
              var nombreRemitente = remitenteEmail(respuestas.email);
              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: "No aplica / " + asuntoCA,
                htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
                  + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
                  + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
                  + "<br><br>Saludos cordiales!!!"
                  + "<br><br>TO: " + (respuestas.email)
              });
            }
            break;
          case "Liberación":
            if (respuestas.dato1 == "Diseño Instruccional" && respuestas.dato2 == "Administración de Proyectos") {


              var colaboradoradmin = stmt.executeQuery(`select COLABORADOR_BASE.email
              from COLABORADOR_BASE 
              JOIN COLABORADOR on COLABORADOR_BASE.id = COLABORADOR.admin 
              JOIN PRINCIPAL on PRINCIPAL.colaboradorfk = COLABORADOR.id 
              where PRINCIPAL.proyectofk = '${proyectoFK}'`);
              var numCols = colaboradoradmin.getMetaData().getColumnCount();
              while (colaboradoradmin.next()) {
                var adminCorreo = '';
                for (var col = 0; col < numCols; col++) {
                  adminCorreo += colaboradoradmin.getString(col + 1) + "\n";
                }
              } //while
              var datosDeptos = [];
              datosDeptos = deptoDI(proyectoFK); //Retorna nombre, correoCDI, correoRDI en ese orden

              var datosDeptos1 = [];
              datosDeptos1 = deptoCV(proyectoFK); //Retorna nombre, correoCCV, correoRCV en ese orden


              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: asuntoCA,
                htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>"
                  + txtEmail + "<br><br>" + cuerpoCA
                  + "<br><br>TO: " + "__" + datosDeptos[1] + "__" + adminCorreo + "__edith_tapia@cuaieed.unam.mx"
                  + "__" + datosDeptos1[1]
                  + "<br><br>CC: " + "__" + datosDeptos[2] + "__" + datosDeptos1[2]
              });


            } else {
              var nombreRemitente = remitenteEmail(respuestas.email);
              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: "No aplica / " + asuntoCA,
                htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
                  + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
                  + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
                  + "<br><br>Saludos cordiales!!!"
                  + "<br><br>TO: " + respuestas.email
              });
            }
            break;
          case "Actualización":

            if (respuestas.dato1 == "Diseño Instruccional" && respuestas.dato2 == "Multimedia") {
              var datosDeptos = [];
              datosDeptos = deptoDI(proyectoFK); //Retorna nombre, correoCDI, correoRDI en ese orden

              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: asuntoCA,
                htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>"
                  + txtEmail + "<br><br>" + cuerpoCA
                  + "<br><br>TO: " + "__" + datosDeptos[1]
                  + "<br><br>CC: " + "__" + datosDeptos[2]
              });
            } else {
              var nombreRemitente = remitenteEmail(respuestas.email);
              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: "No aplica / " + asuntoCA,
                htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
                  + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
                  + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
                  + "<br><br>Saludos cordiales!!!"
                  + "<br><br>TO: " + respuestas.email
              });
            }
            break;
          case "Actualización finalizada":

            if (respuestas.dato1 == "Multimedia" && respuestas.dato2 == "Diseño Instruccional") {
              var datosDeptos = [];
              datosDeptos = deptoCV(proyectoFK); //Retorna nombre, correoCCV, correoRCV en ese orden


              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: asuntoCA,
                htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu aprobación. <br><br>"
                  + txtEmail + "<br><br>" + cuerpoCA
                  + "<br><br>TO: " + "__" + datosDeptos[1]
                  + "<br><br>CC: " + "__" + datosDeptos[2]
              });
            } else {
              var nombreRemitente = remitenteEmail(respuestas.email);

              MailApp.sendEmail({
                to: ("karen_maya@cuaieed.unam.mx"),
                subject: "No aplica / " + asuntoCA,
                htmlBody: "Hola, " + nombreRemitente + ".<br><br>"
                  + "Se envío la solicitud:<br><br> Departamento solicitante: " + respuestas.dato1
                  + "<br><br>Departamento de atención: " + respuestas.dato2 + txtEmail
                  + "<br><br>Saludos cordiales!!!"
                  + "<br><br>TO: " + respuestas.email
              });
            }
            break;
          default:

            Logger.log("Error!")
            break;
        }
      } //12.0              
      break;

    default:
      Logger.log("OTRO ORDENES")
      break;
  }//switch (respuestas.dato3)
}//ordenes

function validacion(respuestas) {
  var stmt = conn2.createStatement();
  var ordenfk = stmt.executeQuery(`SELECT id FROM ORDEN where url = '${answer.answerURL}';`);
  var numCols = ordenfk.getMetaData().getColumnCount();
  while (ordenfk.next()) {
    var ordenFK = '';
    for (var col = 0; col < numCols; col++) {
      ordenFK += ordenfk.getString(col + 1) + "\n";
    }
  } //while  

  var results = conn2.prepareStatement('INSERT INTO VALIDACION ' +
    '(clave, supervisor, validacion, comentarios, ordenfk) values (?, ?, ?, ?, ?)');
  results.setString(1, respuestas.dato1); //clave
  results.setString(2, respuestas.dato2); //supervisor
  results.setString(3, respuestas.dato3); //validacion
  results.setString(4, respuestas.dato4); //comentario
  results.setString(5, ordenFK); //ordenfk
  results.execute();

  var maximo = stmt.executeQuery('select last_insert_id();');
  maximo.next();
  var validacionfk = maximo.getString(1); //validacionfk

  var aprobacion = stmt.executeQuery(`SELECT validacion FROM VALIDACION 
      where id = '${validacionfk}';`);
  var numCols = aprobacion.getMetaData().getColumnCount();
  while (aprobacion.next()) {
    var val_aprobacion = ""
    for (var col = 0; col < numCols; col++) {
      val_aprobacion += aprobacion.getString(col + 1);
    }
  } //while 

  var solicitudfk = stmt.executeQuery(`SELECT solicitudfk FROM ORDEN where id = '${ordenFK}';`);
  var numCols = solicitudfk.getMetaData().getColumnCount();
  while (solicitudfk.next()) {
    var solicitudFK = '';
    for (var col = 0; col < numCols; col++) {
      solicitudFK += solicitudfk.getString(col + 1);
    }
  } //while  

  var proyectofk = stmt.executeQuery(`SELECT proyectofk FROM SOLICITUD where id = '${solicitudFK}';`);
  var numCols = proyectofk.getMetaData().getColumnCount();
  while (proyectofk.next()) {
    var proyectoFK = '';
    for (var col = 0; col < numCols; col++) {
      proyectoFK += proyectofk.getString(col + 1);
    }
  } //while  

  var dependenciafk = stmt.executeQuery(`SELECT dependenciaFK FROM PROYECTO where id = '${proyectoFK}';`);
  var numCols = dependenciafk.getMetaData().getColumnCount();
  while (dependenciafk.next()) {
    var dependenciaFK = '';
    for (var col = 0; col < numCols; col++) {
      dependenciaFK += dependenciafk.getString(col + 1);
    }
  } //while  

  var colaboradorfk = stmt.executeQuery(`select COLABORADOR.id from PRINCIPAL 
              JOIN COLABORADOR on PRINCIPAL.colaboradorfk = COLABORADOR.id
              JOIN PROYECTO on PRINCIPAL.proyectofk = PROYECTO.id  
              where (PROYECTO.id = '${proyectoFK}')`);
  var numCols = colaboradorfk.getMetaData().getColumnCount();
  while (colaboradorfk.next()) {
    var colaboradorFK = '';
    for (var col = 0; col < numCols; col++) {
      colaboradorFK += colaboradorfk.getString(col + 1);
    }
  } //while

  var nombre_orden = stmt.executeQuery(`SELECT ORDEN.nombre FROM ORDEN where id = '${ordenFK}';`);
  var numCols = nombre_orden.getMetaData().getColumnCount();
  while (nombre_orden.next()) {
    var nombreOrden = '';
    for (var col = 0; col < numCols; col++) {
      nombreOrden += nombre_orden.getString(col + 1);
    }
  } //while 

  if (nombreOrden == "Integración finalizada" || nombreOrden == "Correcciones aplicadas") {

    var cuerpo_correo = stmt.executeQuery(`
            SELECT ORDEN.nombre, ORDEN.depa_solicitante,ORDEN.depa_atencion, 
            SOLICITUD.instrucciones, SOLICITUD.ruta, SOLICITUD.observacion, SOLICITUD.email,
            PROYECTO.inicial_proy,
            DEPENDENCIA.inicial_dep,
            PRINCIPAL.semestre, PRINCIPAL.organizacion, PRINCIPAL.total,
            COTEJO.alr_usuario, COTEJO.alr_pass, COTEJO.ar_usuario, COTEJO.ar_pass, COTEJO.url_acceso
            FROM ORDEN JOIN COTEJO
            on ORDEN.id = COTEJO.ordenfk
            JOIN SOLICITUD
            on ORDEN.solicitudfk = SOLICITUD.id
            JOIN PROYECTO
            on SOLICITUD.proyectofk = PROYECTO.id
            JOIN DEPENDENCIA
            on PROYECTO.dependenciafk = DEPENDENCIA.id
            JOIN PRINCIPAL
            on PRINCIPAL.proyectofk = PROYECTO.id
            where (
            ORDEN.solicitudfk = '${solicitudFK}' and SOLICITUD.id = '${solicitudFK}' and
            SOLICITUD.proyectofk = '${proyectoFK}' and PROYECTO.id = '${proyectoFK}' and
            PROYECTO.dependenciafk = '${dependenciaFK}' and DEPENDENCIA.id = '${dependenciaFK}' and
            PRINCIPAL.proyectofk = '${proyectoFK}' and PRINCIPAL.id = '${proyectoFK}' and
            COTEJO.ordenfk = '${ordenFK}' and ORDEN.id = '${ordenFK}'
            );`);
  } else if (nombreOrden == "Liberación") {
    var cuerpo_correo = stmt.executeQuery(`
            SELECT ORDEN.nombre, ORDEN.depa_solicitante,ORDEN.depa_atencion, 
            SOLICITUD.instrucciones, SOLICITUD.ruta, SOLICITUD.observacion, SOLICITUD.email,
            PROYECTO.inicial_proy,
            DEPENDENCIA.inicial_dep,
            PRINCIPAL.semestre, PRINCIPAL.organizacion, PRINCIPAL.total,
            COLABORADOR.admincorreo
            FROM ORDEN JOIN SOLICITUD
            on ORDEN.solicitudfk = SOLICITUD.id
            JOIN PROYECTO
            on SOLICITUD.proyectofk = PROYECTO.id
            JOIN DEPENDENCIA
            on PROYECTO.dependenciafk = DEPENDENCIA.id
            JOIN PRINCIPAL
            on PRINCIPAL.proyectofk = PROYECTO.id
            JOIN COLABORADOR
            on PRINCIPAL.colaboradorfk = COLABORADOR.id
            where (
            ORDEN.solicitudfk = '${solicitudFK}' and SOLICITUD.id = '${solicitudFK}' and
            SOLICITUD.proyectofk = '${proyectoFK}' and PROYECTO.id = '${proyectoFK}' and
            PROYECTO.dependenciafk = '${dependenciaFK}' and DEPENDENCIA.id = '${dependenciaFK}' and
            PRINCIPAL.proyectofk = '${proyectoFK}' and PRINCIPAL.id = '${proyectoFK}' and
            PRINCIPAL.colaboradorfk = '${colaboradorFK}' and COLABORADOR.id = '${colaboradorFK}'
            );`);
  } else {
    var cuerpo_correo = stmt.executeQuery(`
            SELECT ORDEN.nombre, ORDEN.depa_solicitante,ORDEN.depa_atencion, 
            SOLICITUD.instrucciones, SOLICITUD.ruta, SOLICITUD.observacion, SOLICITUD.email,
            PROYECTO.inicial_proy,
            DEPENDENCIA.inicial_dep,
            PRINCIPAL.semestre, PRINCIPAL.organizacion, PRINCIPAL.total,
            VALIDACION.comentarios
            FROM ORDEN JOIN SOLICITUD
            on ORDEN.solicitudfk = SOLICITUD.id
            JOIN PROYECTO
            on SOLICITUD.proyectofk = PROYECTO.id
            JOIN DEPENDENCIA
            on PROYECTO.dependenciafk = DEPENDENCIA.id
            JOIN PRINCIPAL
            on PRINCIPAL.proyectofk = PROYECTO.id
            JOIN VALIDACION
            on VALIDACION.ordenfk = ORDEN.id
            where (
            ORDEN.solicitudfk = '${solicitudFK}' and SOLICITUD.id = '${solicitudFK}' and
            SOLICITUD.proyectofk = '${proyectoFK}' and PROYECTO.id = '${proyectoFK}' and
            PROYECTO.dependenciafk = '${dependenciaFK}' and DEPENDENCIA.id = '${dependenciaFK}' and
            PRINCIPAL.proyectofk = '${proyectoFK}' and PRINCIPAL.id = '${proyectoFK}' and
            VALIDACION.ordenfk = '${ordenFK}' and ORDEN.id = '${ordenFK}'

            );`);
  }
  var numCols = cuerpo_correo.getMetaData().getColumnCount();
  while (cuerpo_correo.next()) {
    var array_correo = ""
    for (var col = 0; col < numCols; col++) {
      array_correo += cuerpo_correo.getString(col + 1) + ",";
    }
  } //while
  var array_correo_mod = "";
  array_correo_mod = array_correo.slice(0, -1);
  array_correoHTML = array_correo_mod.split(",");
  Logger.log("Array_HTML:" + array_correoHTML);

  var nombre_dependencia = stmt.executeQuery(`SELECT nombre FROM DEPENDENCIA where id = '${dependenciaFK}';`);
  var numCols = nombre_dependencia.getMetaData().getColumnCount();
  while (nombre_dependencia.next()) {
    var dependencia = ""
    for (var col = 0; col < numCols; col++) {
      dependencia += nombre_dependencia.getString(col + 1);
    }
  } //while

  var nombre_asignatura = stmt.executeQuery(`SELECT asignatura FROM PROYECTO where id = '${proyectoFK}';`);
  var numCols = nombre_asignatura.getMetaData().getColumnCount();
  while (nombre_asignatura.next()) {
    var asignatura = ""
    for (var col = 0; col < numCols; col++) {
      asignatura += nombre_asignatura.getString(col + 1);
    }
  } //while

  var elemento = stmt.executeQuery(`SELECT elemento FROM AUXILIAR where solicitudfk = '${solicitudFK}';`);
  var numCols = elemento.getMetaData().getColumnCount();
  while (elemento.next()) {
    var elementos = ""
    for (var col = 0; col < numCols; col++) {
      elementos += elemento.getString(col + 1);
    }
  } //while

  var num_elemento = stmt.executeQuery(`SELECT numero FROM AUXILIAR where solicitudfk = '${solicitudFK}';`);
  var numCols = num_elemento.getMetaData().getColumnCount();
  while (num_elemento.next()) {
    var num_elementos = ""
    for (var col = 0; col < numCols; col++) {
      num_elementos += num_elemento.getString(col + 1);
    }
  } //while

  var resp_lista = stmt.executeQuery(`SELECT respuesta FROM LISTA where ordenFK = '${ordenFK}';`);
  var numCols = resp_lista.getMetaData().getColumnCount();
  while (resp_lista.next()) {
    var listav = ""
    for (var col = 0; col < numCols; col++) {
      listav += resp_lista.getString(col + 1);
    }
  } //while

  var obs_lista = stmt.executeQuery(`SELECT observacion FROM LISTA where ordenFK = '${ordenFK}';`);
  var numCols = obs_lista.getMetaData().getColumnCount();
  while (obs_lista.next()) {
    var observacion_lista = ""
    for (var col = 0; col < numCols; col++) {
      observacion_lista += obs_lista.getString(col + 1);
    }
  } //while
  //Envio de correo
  correoValidado(array_correoHTML, elementos, num_elementos, asignatura, dependencia, listav, observacion_lista, val_aprobacion, proyectoFK)


}//validacion

function avancexmaterial(temporal, solicitudFK, proyectoFK, nombreOrden) {
  for (var item in temporal) {
    temporal[item].forEach(function (elemento) {
      var stmt = conn2.createStatement();
      var elementofk = stmt.executeQuery(`select id from ELEMENTO where nombre = '${elemento}'`);
      var numCols = elementofk.getMetaData().getColumnCount();
      while (elementofk.next()) {
        var elementoFK = '';
        for (var col = 0; col < numCols; col++) {
          elementoFK += elementofk.getString(col + 1) + "\n";
        }
      } //while

      if (elemento == "Componentes Generales" || elemento == "Escritorio" || elemento == "Sitio público") {
        var results = conn2.prepareStatement('INSERT INTO SOLICITUD_ELEMENTO (solicitudfk, elementofk, numero)'
          + 'values (?, ?, ?)');

        results.setString(1, solicitudFK);
        results.setString(2, elementoFK.toString()); //elementoFK 
        results.setString(3, 0);
        results.execute();

        var totalSolicitud = stmt.executeQuery(`SELECT COUNT(*) FROM SOLICITUD 
          JOIN SOLICITUD_ELEMENTO on SOLICITUD_ELEMENTO.solicitudfk = SOLICITUD.id 
          where (SOLICITUD.proyectofk = '${proyectoFK}' and SOLICITUD_ELEMENTO.elementofk = '${elementoFK}');`);

        var numCols = totalSolicitud.getMetaData().getColumnCount();
        while (totalSolicitud.next()) {
          var totalAO = '';
          for (var col = 0; col < numCols; col++) {
            totalAO += totalSolicitud.getString(col + 1) + "\n";
          }
        } //while    
        if (totalAO == 1) {
          var results = conn2.prepareStatement(`UPDATE PROYECTO_ELEMENTO SET avance = 4.0 
              WHERE (proyectofk = '${proyectoFK}' and elementofk = '${elementoFK}');`);
          results.execute();
        } else if (totalAO == 2) {
          var results = conn2.prepareStatement(`UPDATE PROYECTO_ELEMENTO SET avance = 17.0 
                WHERE (proyectofk = '${proyectoFK}' and elementofk = '${elementoFK}');`);
          results.execute();
        } else {
          if (nombreOrden == "Integración") {
            var factor100 = stmt.executeQuery(`SELECT COUNT(*) FROM SOLICITUD 
              JOIN ORDEN ON SOLICITUD.id = ORDEN.solicitudfk 
              JOIN SOLICITUD_ELEMENTO ON SOLICITUD.id = SOLICITUD_ELEMENTO.solicitudfk
              WHERE (ORDEN.nombre = "Integración" and SOLICITUD.proyectofk = '${proyectoFK.toString()}'
              and SOLICITUD_ELEMENTO.elementofk = '${elementoFK}');`);

            var numCols = factor100.getMetaData().getColumnCount();
            while (factor100.next()) {
              var factor_100 = '';
              for (var col = 0; col < numCols; col++) {
                factor_100 += factor100.getString(col + 1) + "\n";
              }
            } //while
          }//integración
          if (nombreOrden == "Corrección") {
            var factor70 = stmt.executeQuery(`SELECT COUNT(*) FROM SOLICITUD 
              JOIN ORDEN ON SOLICITUD.id = ORDEN.solicitudfk 
              JOIN SOLICITUD_ELEMENTO ON SOLICITUD.id = SOLICITUD_ELEMENTO.solicitudfk
              WHERE (ORDEN.nombre = "Corrección" and SOLICITUD.proyectofk = '${proyectoFK.toString()}'
              and SOLICITUD_ELEMENTO.elementofk = '${elementoFK}');`);

            var numCols = factor70.getMetaData().getColumnCount();
            while (factor70.next()) {
              var factor_70 = '';
              for (var col = 0; col < numCols; col++) {
                factor_70 += factor70.getString(col + 1) + "\n";
              }
            } //while

          }

        }

        if (totalAO > 2) {
          if (factor_100 != 0) {
            var avance = ((totalAO - 2) / totalAO) * 100
          } else if (factor_70 != 0) {
            var avance = ((totalAO - 2) / totalAO) * 70
          } else {
            var avance = ((totalAO - 2) / totalAO) * 40
          }
          var results = conn2.prepareStatement(`UPDATE PROYECTO_ELEMENTO SET avance = '${avance}' 
                WHERE (proyectofk = '${proyectoFK.toString()}' and elementofk = '${elementoFK}');`);
          results.execute();
          var calificacion = stmt.executeQuery(`SELECT COUNT(*) FROM SOLICITUD 
              JOIN ORDEN ON SOLICITUD.id = ORDEN.solicitudfk 
              JOIN SOLICITUD_ELEMENTO ON SOLICITUD.id = SOLICITUD_ELEMENTO.solicitudfk
              WHERE (SOLICITUD.proyectofk = '${proyectoFK.toString()}'
              and SOLICITUD_ELEMENTO.elementofk = '${elementoFK}');`);

          var numCols = calificacion.getMetaData().getColumnCount();
          while (calificacion.next()) {
            var calif = '';
            for (var col = 0; col < numCols; col++) {
              calif += calificacion.getString(col + 1) + "\n";
            }
          } //while
          if (nombreOrden == "Liberación") {
            var avance100 = stmt.executeQuery(`SELECT COUNT(*) FROM SOLICITUD 
              JOIN ORDEN ON SOLICITUD.id = ORDEN.solicitudfk 
              JOIN SOLICITUD_ELEMENTO ON SOLICITUD.id = SOLICITUD_ELEMENTO.solicitudfk
              WHERE (ORDEN.nombre = "Liberación" and SOLICITUD.proyectofk = '${proyectoFK}'
              and SOLICITUD_ELEMENTO.elementofk = '${elementoFK}');`);

            var numCols = avance100.getMetaData().getColumnCount();
            while (avance100.next()) {
              var avance_100 = '';
              for (var col = 0; col < numCols; col++) {
                avance_100 += avance100.getString(col + 1) + "\n";
              }
            } //while

            Logger.log("AVANCE 100: " + avance_100);

            if (avance_100 > 0) {
              var results = conn2.prepareStatement(`UPDATE PROYECTO_ELEMENTO SET avance = 100
                WHERE (proyectofk = '${proyectoFK}' and elementofk = '${elementoFK}');`);
              results.execute();
            }
          }//liberacion          

          Logger.log("Calificacion: " + calif.toString());
          if (calif.toString() <= 4) {
            var results = conn2.prepareStatement(`UPDATE PROYECTO_ELEMENTO SET calificacion = 1.0
          WHERE (proyectofk = '${proyectoFK.toString()}' and elementofk = '${elementoFK}');`);
            results.execute();
          } else if (calif.toString() > 4 && calif.toString() <= 7) {
            var results = conn2.prepareStatement(`UPDATE PROYECTO_ELEMENTO SET calificacion = 2.0
          WHERE (proyectofk = '${proyectoFK.toString()}' and elementofk = '${elementoFK}');`);
            results.execute();
          } else if (calif.toString() > 8) {
            var results = conn2.prepareStatement(`UPDATE PROYECTO_ELEMENTO SET calificacion = 3.0
          WHERE (proyectofk = '${proyectoFK.toString()}' and elementofk = '${elementoFK}');`);
            results.execute();
          }
        }

      } else if (elemento == "Módulo" || elemento == "Tema" || elemento == "Secuencia" || elemento == "Unidad") {
        var results = conn2.prepareStatement('INSERT INTO SOLICITUD_ELEMENTO (solicitudfk, elementofk, numero)'
          + 'values (?, ?, ?)');

        results.setString(1, solicitudFK);
        results.setString(2, elementoFK.toString()); //elementofk

        for (var i = 0; i < temporal.numero.length; i++) {
          if (temporal.numero[i] != 0) {
            results.setString(3, temporal.numero[i]);
            results.execute();
          }
        }//temporal.numero  

        for (var i = 0; i < temporal.numero.length; i++) {
          if (temporal.numero[i] != 0) {
            var totalSolicitud = stmt.executeQuery(`SELECT COUNT(*) FROM SOLICITUD 
              JOIN SOLICITUD_ELEMENTO on SOLICITUD_ELEMENTO.solicitudfk = SOLICITUD.id 
              where (SOLICITUD.proyectofk = '${proyectoFK.toString()}' and SOLICITUD_ELEMENTO.elementofk = '${elementoFK}'
              and numero= '${temporal.numero[i]}');`);

            var numCols = totalSolicitud.getMetaData().getColumnCount();
            while (totalSolicitud.next()) {
              var totalAO = '';
              for (var col = 0; col < numCols; col++) {
                totalAO += totalSolicitud.getString(col + 1) + "\n";
              }
            } //while          
          }

          if (totalAO == 1) {
            var results = conn2.prepareStatement(`UPDATE PROYECTO_ELEMENTO SET avance = 4.0 
              WHERE (proyectofk = '${proyectoFK.toString()}' and elementofk = '${elementoFK}' 
              and numero= '${temporal.numero[i]}');`);
            results.execute();
          } else if (totalAO == 2) {
            var results = conn2.prepareStatement(`UPDATE PROYECTO_ELEMENTO SET avance = 17.0 
            WHERE (proyectofk = '${proyectoFK.toString()}' and elementofk = '${elementoFK}'
            and numero= '${temporal.numero[i]}');`);
            results.execute();
          } else {

            if (nombreOrden == "Integración") {
              var factor100 = stmt.executeQuery(`SELECT COUNT(*) FROM SOLICITUD 
              JOIN ORDEN ON SOLICITUD.id = ORDEN.solicitudfk 
              JOIN SOLICITUD_ELEMENTO on SOLICITUD_ELEMENTO.solicitudfk = SOLICITUD.id 
              WHERE (ORDEN.nombre = "Integración" 
              and SOLICITUD.proyectofk = '${proyectoFK.toString()}' 
              and SOLICITUD_ELEMENTO.elementofk = '${elementoFK}' 
              and SOLICITUD_ELEMENTO.numero= '${temporal.numero[i]}');`);

              var numCols = factor100.getMetaData().getColumnCount();
              while (factor100.next()) {
                var factor_100 = '';
                for (var col = 0; col < numCols; col++) {
                  factor_100 += factor100.getString(col + 1) + "\n";
                }
              } //while

            }//Integración

            if (nombreOrden == "Corrección") {
              var factor70 = stmt.executeQuery(`SELECT COUNT(*) FROM SOLICITUD 
              JOIN ORDEN ON SOLICITUD.id = ORDEN.solicitudfk 
              JOIN SOLICITUD_ELEMENTO on SOLICITUD_ELEMENTO.solicitudfk = SOLICITUD.id 
              WHERE (ORDEN.nombre = "Corrección" 
              and SOLICITUD.proyectofk = '${proyectoFK.toString()}' 
              and SOLICITUD_ELEMENTO.elementofk = '${elementoFK}' 
              and SOLICITUD_ELEMENTO.numero= '${temporal.numero[i]}');`);

              var numCols = factor70.getMetaData().getColumnCount();
              while (factor70.next()) {
                var factor_70 = '';
                for (var col = 0; col < numCols; col++) {
                  factor_70 += factor70.getString(col + 1) + "\n";
                }
              } //while

            }//corrección
          }//else


          if (totalAO > 2) {
            if (factor_100 != 0) {
              Logger.log("Factor 100");
              var avance = ((totalAO - 2) / totalAO) * 100
            } else if (factor_70 != 0) {
              Logger.log("Factor 70");
              var avance = ((totalAO - 2) / totalAO) * 70
            } else {
              Logger.log("Factor 40");
              var avance = ((totalAO - 2) / totalAO) * 40
            }
            var results = conn2.prepareStatement(`UPDATE PROYECTO_ELEMENTO SET avance = '${avance}' 
                WHERE (proyectofk = '${proyectoFK.toString()}' and elementofk = '${elementoFK}'  
                and numero= '${temporal.numero[i]}');`);
            results.execute();
            if (nombreOrden == "Liberación") {
              var avance100 = stmt.executeQuery(`SELECT COUNT(*) FROM SOLICITUD 
                  JOIN ORDEN ON SOLICITUD.id = ORDEN.solicitudfk 
                  JOIN SOLICITUD_ELEMENTO ON SOLICITUD.id = SOLICITUD_ELEMENTO.solicitudfk
                  WHERE (ORDEN.nombre = "Liberación" and SOLICITUD.proyectofk = '${proyectoFK.toString()}'
                  and SOLICITUD_ELEMENTO.elementofk = '${elementoFK}'
                  and SOLICITUD_ELEMENTO.numero = '${temporal.numero[i]}');`);

              var numCols = avance100.getMetaData().getColumnCount();
              while (avance100.next()) {
                var avance_100 = '';
                for (var col = 0; col < numCols; col++) {
                  avance_100 += avance100.getString(col + 1) + "\n";
                }
              } //while
              if (avance_100 >= 1) {
                var results = conn2.prepareStatement(`UPDATE PROYECTO_ELEMENTO SET avance = 100
                WHERE (proyectofk = '${proyectoFK.toString()}' and elementofk = '${elementoFK}'
                and numero= '${temporal.numero[i]}');`);
                results.execute();
              }
            }//liberacion

          var calificacion = stmt.executeQuery(`SELECT COUNT(*) FROM SOLICITUD 
              JOIN ORDEN ON SOLICITUD.id = ORDEN.solicitudfk 
              JOIN SOLICITUD_ELEMENTO ON SOLICITUD.id = SOLICITUD_ELEMENTO.solicitudfk
              WHERE (SOLICITUD.proyectofk = '${proyectoFK.toString()}'
              and SOLICITUD_ELEMENTO.elementofk = '${elementoFK}'
              and SOLICITUD_ELEMENTO.numero = '${temporal.numero[i]}');`);

          var numCols = calificacion.getMetaData().getColumnCount();
          while (calificacion.next()) {
            var calif = '';
              for (var col = 0; col < numCols; col++) {
                calif += calificacion.getString(col + 1) + "\n";
              }
            } //while

            if (calif.toString() <= 4) {
              var results = conn2.prepareStatement(`UPDATE PROYECTO_ELEMENTO SET calificacion = 1
            WHERE (proyectofk = '${proyectoFK.toString()}' and elementofk = '${elementoFK}'
            and numero= '${temporal.numero[i]}');`);
              results.execute();
            } else if (calif.toString() > 4 && calif.toString() <= 7) {
              var results = conn2.prepareStatement(`UPDATE PROYECTO_ELEMENTO SET calificacion = 2
            WHERE (proyectofk = '${proyectoFK.toString()}' and elementofk = '${elementoFK}'
            and numero= '${temporal.numero[i]}');`);
              results.execute();
            } else {
              var results = conn2.prepareStatement(`UPDATE PROYECTO_ELEMENTO SET calificacion = 3
            WHERE (proyectofk = '${proyectoFK.toString()}' and elementofk = '${elementoFK}'
            and numero= '${temporal.numero[i]}');`);
              results.execute();
            }
          }

        }//temporal.numero  
      }
    });//forEach temporal
  }//for item in temporal
}//avancexmaterial

// Envía el correo de "Validación" a aquellas ordenes con y sin asignatura
function correoValidado(array_correoHTML, entrega, numero, asig, dep, lv, obs_lv, val_aprobacion, proyectoFK) {
  if (array_correoHTML[5] == "") {
    array_correoHTML[5] = "----"
  }

  if (array_correoHTML[9] == "") {
    array_correoHTML[9] = "----"
  }

  if (array_correoHTML[12] == "") {
    array_correoHTML[12] = "----"
  }
  if (array_correoHTML[10] == "Módulo") {
    array_correoHTML[10] = "Módulos"
  } else if (array_correoHTML[10] == "Unidad") {
    array_correoHTML[10] = "Unidades"
  } else if (array_correoHTML[10] == "Tema") {
    array_correoHTML[10] = "Temas"
  } else if (array_correoHTML[10] == "Secuencia") {
    array_correoHTML[10] = "Secuencias"
  }

  if (array_correoHTML[0] == "Correcciones" || array_correoHTML[0] == "Revisión"
    || array_correoHTML[0] == "Entrega CE con comentarios"
    || array_correoHTML[0] == "Correcciones aplicadas") {
    if (numero == 0) {
      var stmt = conn2.createStatement();
      var nuevoElemento = entrega.split(",");
      for (let j = 0; j < nuevoElemento.length; j++) {
        var conteo_solicitudes = stmt.executeQuery(`SELECT COUNT(*) FROM ORDEN 
            JOIN SOLICITUD ON SOLICITUD.id = ORDEN.solicitudfk
            JOIN AUXILIAR ON AUXILIAR.solicitudfk = SOLICITUD.id
            where SOLICITUD.proyectofk = '${proyectoFK}' 
            and ORDEN.nombre = '${array_correoHTML[0]}'
            and (AUXILIAR.elemento = "${nuevoElemento[j]}"
            OR AUXILIAR.numero = 0);`);
      }
    } else {
      var nuevoElemento = entrega.split(",");
      var nuevoNumero = numero.split(",");
      var stmt = conn2.createStatement();
      for (let j = 0; j < nuevoElemento.length; j++) {
        for (let k = 0; k < nuevoNumero.length; k++) {
          var conteo_solicitudes = stmt.executeQuery(`SELECT COUNT(*) FROM ORDEN 
            JOIN SOLICITUD ON SOLICITUD.id = ORDEN.solicitudfk
            JOIN AUXILIAR ON AUXILIAR.solicitudfk = SOLICITUD.id
            where SOLICITUD.proyectofk = '${proyectoFK}' 
            and ORDEN.nombre = '${array_correoHTML[0]}'
            and (AUXILIAR.elemento = "${nuevoElemento[j]}"
            OR AUXILIAR.numero LIKE '%${numero[k]}%');`);
        }
      }
    }
    var numCols = conteo_solicitudes.getMetaData().getColumnCount();
    while (conteo_solicitudes.next()) {
      var cont = '';
      for (var col = 0; col < numCols; col++) {
        cont += conteo_solicitudes.getString(col + 1);
      }
    } //while            
  }

  switch (array_correoHTML[0]) {
    case 'Correcciones':
    case 'Revisión':
    case 'Entrega CE con comentarios':
    case "Correcciones aplicadas":
    if(asig != ""){
      //Con asignatura
      if(numero == 0){
        //solo CG
        if(cont > 1){
            var asuntoSA = "O." + array_correoHTML[0] + " " + cont + " / " + entrega + " / " + asig + " / "
              + array_correoHTML[7] + " / " + array_correoHTML[8];
            var cuerpoHTML = "<table style='border:1px solid #000000; border-collapse:collapse;"
              + "table-layout: fixed;width: 90% '>"
              + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
              + "<strong>Orden de " + array_correoHTML[0] + " " + cont + "</strong></td>"
              + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Departamento de " + array_correoHTML[1] + "</strong></td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Dependencia</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + dep +"</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>" + "Asignatura" + "</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[7] 
              + " / " + asig + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Semestre</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[9] + "</td>"
              + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Total de " + array_correoHTML[10] + "</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[11]
              + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Entrega</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + entrega + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Instrucciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[3] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Observaciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[5] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Ruta de descarga</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" 
              + array_correoHTML[4] + "</td></tr></table>";          
        }else{
            var asuntoSA = "O." + array_correoHTML[0] + " / " + entrega + " / " + asig + " / "
              + array_correoHTML[7] + " / " + array_correoHTML[8];
            var cuerpoHTML = "<table style='border:1px solid #000000; border-collapse:collapse;"
              + "table-layout: fixed;width: 90% '>"
              + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
              + "<strong>Orden de " + array_correoHTML[0] + "</strong></td>"
              + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Departamento de " + array_correoHTML[1] + "</strong></td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Dependencia</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + dep +"</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>" + "Asignatura" + "</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[7] 
              + " / " + asig + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Semestre</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[9] + "</td>"
              + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Total de " + array_correoHTML[10] + "</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[11]
              + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Entrega</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + entrega + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Instrucciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[3] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Observaciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[5] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Ruta de descarga</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[4] + "</td></tr></table>";

        }
      }else{
        //mezclados
        //solo CG
        if(cont > 1){
            var asuntoSA = "O." + array_correoHTML[0] + " " + cont + " / " + entrega + numero + " / " + asig + " / "
              + array_correoHTML[7] + " / " + array_correoHTML[8];
            var cuerpoHTML = "<table style='border:1px solid #000000; border-collapse:collapse;"
              + "table-layout: fixed;width: 90% '>"
              + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
              + "<strong>Orden de " + array_correoHTML[0] + " " + cont + "</strong></td>"
              + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Departamento de " + array_correoHTML[1] + "</strong></td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Dependencia</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + dep + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>" + "Asignatura" + "</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[7] 
              + " / " + asig + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Semestre</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[9] + "</td>"
              + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Total de " + array_correoHTML[10] + "</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[11]
              + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Entrega</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + entrega + numero + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Instrucciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[3] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Observaciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[5] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Ruta de descarga</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" 
              + array_correoHTML[4] + "</td></tr></table>";          
        }else{
            var asuntoSA = "O." + array_correoHTML[0] + " / " + entrega + numero + " / " + asig + " / "
              + array_correoHTML[7] + " / " + array_correoHTML[8];
            var cuerpoHTML = "<table style='border:1px solid #000000; border-collapse:collapse;"
              + "table-layout: fixed;width: 90% '>"
              + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
              + "<strong>Orden de " + array_correoHTML[0] + "</strong></td>"
              + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Departamento de " + array_correoHTML[1] + "</strong></td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Dependencia</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + dep +"</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>" + "Asignatura" + "</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[7] 
              + " / " + asig + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Semestre</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[9] + "</td>"
              + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Total de " + array_correoHTML[10] + "</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[11]
              + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Entrega</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + entrega + numero + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Instrucciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[3] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Observaciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[5] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Ruta de descarga</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[4] + "</td></tr></table>";

          }     
      }
    }else{
      //sin asignatura
      if(numero == 0){
        //solo CG
        if(cont > 1){
            var asuntoSA = "O." + array_correoHTML[0] + " " + cont + " / " + entrega + " / " 
              + array_correoHTML[7] + " / " + array_correoHTML[8];
            var cuerpoHTML = "<table style='border:1px solid #000000; border-collapse:collapse;"
              + "table-layout: fixed;width: 90% '>"
              + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
              + "<strong>Orden de " + array_correoHTML[0] + " " + cont + "</strong></td>"
              + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Departamento de " + array_correoHTML[1] + "</strong></td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Dependencia</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + dep +"</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>" + "Asignatura" + "</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[7] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Semestre</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[9] + "</td>"
              + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Total de " + array_correoHTML[10] + "</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[11]
              + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Entrega</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + entrega + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Instrucciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[3] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Observaciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[5] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Ruta de descarga</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" 
              + array_correoHTML[4] + "</td></tr></table>";          
        }else{
            var asuntoSA = "O." + array_correoHTML[0] + " / " + entrega + " / " 
              + array_correoHTML[7] + " / " + array_correoHTML[8];
            var cuerpoHTML = "<table style='border:1px solid #000000; border-collapse:collapse;"
              + "table-layout: fixed;width: 90% '>"
              + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
              + "<strong>Orden de " + array_correoHTML[0] + "</strong></td>"
              + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Departamento de " + array_correoHTML[1] + "</strong></td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Dependencia</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + dep +"</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>" + "Asignatura" + "</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[7] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Semestre</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[9] + "</td>"
              + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Total de " + array_correoHTML[10] + "</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[11]
              + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Entrega</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + entrega + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Instrucciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[3] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Observaciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[5] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Ruta de descarga</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[4] + "</td></tr></table>";

        }
      }else{
        //mezclados
        //solo CG
        if(cont > 1){
            var asuntoSA = "O." + array_correoHTML[0] + " " + cont + " / " + entrega + numero + " / " 
              + array_correoHTML[7] + " / " + array_correoHTML[8];
            var cuerpoHTML = "<table style='border:1px solid #000000; border-collapse:collapse;"
              + "table-layout: fixed;width: 90% '>"
              + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
              + "<strong>Orden de " + array_correoHTML[0] + " " + cont + "</strong></td>"
              + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Departamento de " + array_correoHTML[1] + "</strong></td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Dependencia</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + dep + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>" + "Asignatura" + "</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[7] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Semestre</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[9] + "</td>"
              + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Total de " + array_correoHTML[10] + "</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[11]
              + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Entrega</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + entrega + numero + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Instrucciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[3] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Observaciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[5] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Ruta de descarga</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" 
              + array_correoHTML[4] + "</td></tr></table>";          
        }else{
            var asuntoSA = "O." + array_correoHTML[0] + " / " + entrega + numero + " / "
              + array_correoHTML[7] + " / " + array_correoHTML[8];
            var cuerpoHTML = "<table style='border:1px solid #000000; border-collapse:collapse;"
              + "table-layout: fixed;width: 90% '>"
              + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
              + "<strong>Orden de " + array_correoHTML[0] + "</strong></td>"
              + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Departamento de " + array_correoHTML[1] + "</strong></td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Dependencia</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + dep +"</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>" + "Asignatura" + "</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[7] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Semestre</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[9] + "</td>"
              + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Total de " + array_correoHTML[10] + "</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[11]
              + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Entrega</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + entrega + numero + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Instrucciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[3] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Observaciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[5] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Ruta de descarga</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[4] + "</td></tr></table>";

          }     
      }      
    }

    break;

    case "Corrección":
    case "Integración":
    case "Integración finalizada":
    case "Programación finalizada":
    case 'Programación':
    case 'Liberación':
    case 'Actualización':
    case 'Actualización finalizada':

      if (asig == "") {
        //sin asig
        if (numero == 0) {
          //solo CG
          var asuntoSA = "O." + array_correoHTML[0] + " / " + entrega + " / "
            + array_correoHTML[7] + " / " + array_correoHTML[8];
          var cuerpoHTML = "<table style='border:1px solid #000000; border-collapse:collapse;"
            + "table-layout: fixed;width: 90% '>"
            + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
            + "<strong>Orden de " + array_correoHTML[0] + "</strong></td>"
            + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Departamento de " + array_correoHTML[1] + "</strong></td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Dependencia</strong></td>"
            + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + dep + "</td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>" + "Asignatura" + "</strong></td>"
            + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[7] + "</td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Semestre</strong></td>"
            + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[9] + "</td>"
            + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Total de " + array_correoHTML[10] + "</strong></td>"
            + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[11]
            + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Entrega</strong></td>"
            + "<td style='border:1px solid #000000; padding:5px'>" + entrega + "</td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Instrucciones</strong></td>"
            + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[3] + "</td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Observaciones</strong></td>"
            + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[5] + "</td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Ruta de descarga</strong></td>"
            + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[4] + "</td></tr></table>";
        } else {
          //mezclados
          var asuntoSA = "O." + array_correoHTML[0] + " / " + entrega + numero + " / "
            + array_correoHTML[7] + " / " + array_correoHTML[8];

          var cuerpoHTML = "<table style='border:1px solid #000000; border-collapse:collapse;"
            + "table-layout: fixed;width: 90% '>"
            + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
            + "<strong>Orden de " + array_correoHTML[0] + "</strong></td>"
            + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Departamento de " + array_correoHTML[1] + "</strong></td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Dependencia</strong></td>"
            + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + dep + "</td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>" + "Asignatura" + "</strong></td>"
            + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[7]
            + "</td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Semestre</strong></td>"
            + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[9] + "</td>"
            + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Total de " + array_correoHTML[10] + "</strong></td>"
            + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[11]
            + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Entrega</strong></td>"
            + "<td style='border:1px solid #000000; padding:5px'>" + entrega + numero + "</td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Instrucciones</strong></td>"
            + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[3] + "</td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Observaciones</strong></td>"
            + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[5] + "</td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Ruta de descarga</strong></td>"
            + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[4] + "</td></tr></table>";
        }
      } else {
        //con asig
        if (numero == 0) {
          //solo CG
          var asuntoSA = "O." + array_correoHTML[0] + " / " + entrega + " / "
            + asig + " / " + array_correoHTML[7] + " / " + array_correoHTML[8];

          var cuerpoHTML = "<table style='border:1px solid #000000; border-collapse:collapse;"
            + "table-layout: fixed;width: 90% '>"
            + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
            + "<strong>Orden de " + array_correoHTML[0] + "</strong></td>"
            + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Departamento de " + array_correoHTML[1] + "</strong></td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Dependencia</strong></td>"
            + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + dep + "</td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>" + "Asignatura" + "</strong></td>"
            + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[7]
            + " / " + asig + "</td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Semestre</strong></td>"
            + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[9] + "</td>"
            + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Total de " + array_correoHTML[10] + "</strong></td>"
            + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[11]
            + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Entrega</strong></td>"
            + "<td style='border:1px solid #000000; padding:5px'>" + entrega + "</td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Instrucciones</strong></td>"
            + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[3] + "</td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Observaciones</strong></td>"
            + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[5] + "</td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Ruta de descarga</strong></td>"
            + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[4] + "</td></tr></table>";
        } else {
          //mezclados
          var asuntoSA = "O." + array_correoHTML[0] + " / " + entrega + numero + " / "
            + asig + " / " + array_correoHTML[7] + " / " + array_correoHTML[8];

          var cuerpoHTML = "<table style='border:1px solid #000000; border-collapse:collapse;"
            + "table-layout: fixed;width: 90% '>"
            + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
            + "<strong>Orden de " + array_correoHTML[0] + "</strong></td>"
            + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Departamento de " + array_correoHTML[1] + "</strong></td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Dependencia</strong></td>"
            + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + dep + "</td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>" + "Asignatura" + "</strong></td>"
            + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[7]
            + " / " + asig + "</td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Semestre</strong></td>"
            + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[9] + "</td>"
            + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Total de " + array_correoHTML[10] + "</strong></td>"
            + "<td style='border:1px solid #000000; padding:5px'>" + array_correoHTML[11]
            + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Entrega</strong></td>"
            + "<td style='border:1px solid #000000; padding:5px'>" + entrega + numero + "</td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Instrucciones</strong></td>"
            + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[3] + "</td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Observaciones</strong></td>"
            + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[5] + "</td></tr>"
            + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
            + "<strong>Ruta de descarga</strong></td>"
            + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + array_correoHTML[4] + "</td></tr></table>";
        }
      }
      break;
    default:
      Logger.log("ARRAY HTML OTRO")
      break;
  }

  switch (array_correoHTML[0]) {
    case 'Corrección':
      let lv_mod_di = lv.split(",")
      var parte1 = listaVerificacion(lv_mod_di, lv_di);

      if (obs_lv == "") {
        obs_lv = "----"
      }
        var observaciones_tabla = '<tr><th style="border:1px solid;padding:5px;text-align:inherit;font-weight:lighter;"' 
        + 'colspan="2">' + 'Observaciones específicas: </th><td style="border:1px solid;" colspan="8">' 
        + respuestas.dato5 + '</td></tr>';

      if (val_aprobacion == "Aprobado") {
        var datosDeptos = [];
        datosDeptos = deptoCE(proyectoFK); //Retorna nombre, correoRCE

        var txtHistorial = historial_CA(proyectoFK, entrega, numero);
        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: asuntoSA,
          htmlBody: "Hola," + datosDeptos[0] + ".<br><br>" + "Envío para tu atención. "
            + "<br><br>" + array_correoHTML[12]
            + "<br><br>" + cuerpoHTML
            + "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>Saludos cordiales!!!"
            + "TO: " + datosDeptos[1]
            + "<br><br>" + txtHistorial
        });
      } else {//Es rechazado
        var nombreRemitente = remitenteEmail(array_correoHTML[6]);
        var datosDeptos = [];
        datosDeptos = deptoDI(proyectoFK); //Retorna nombre, correoCDI, correoRDI       
        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: "**Rechazado** " + asuntoSA,
          htmlBody: "Hola." + nombreRemitente + "<br><br>" + "Revisa tu requerimiento, tiene inconsistencias."
            + "<br><br>" + array_correoHTML[12]
            + "<br><br>" + cuerpoHTML
            + "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>Saludos cordiales!!!"
            + "TO: " + array_correoHTML[6]
            + "CC: " + datosDeptos[1] + datosDeptos[2]
        });
      }
      break;
    case 'Integración':
      let lv_mod_ce = lv.split(",")
      var parte1 = listaVerificacion(lv_mod_ce, lv_ce);

        var observaciones_tabla = '<tr><th style="border:1px solid;padding:5px;text-align:inherit;font-weight:lighter;"' 
        + 'colspan="2">' + 'Observaciones específicas: </th><td style="border:1px solid;" colspan="8">' 
        + obs_lv + '</td></tr>';

      if (val_aprobacion == "Aprobado") {
        if (array_correoHTML[1] == "Diseño Instruccional" && array_correoHTML[2] == "Multimedia") {
          var datosDeptos = [];
          datosDeptos = deptoCV(proyectoFK); //Retorna nombre, correoCCV, correoRCV en ese orden
          var txtHistorial = historial_CA(proyectoFK, entrega, numero);
          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: asuntoSA,
            htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu atención."
              + "<br><br>" + array_correoHTML[12]
              + "<br><br>" + cuerpoHTML
              + "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>Saludos cordiales!!!"
              + "TO: " + datosDeptos[1]
              + "CC: " + datosDeptos[2]
              + "<br><br>" + txtHistorial
          });
        } else if (array_correoHTML[1] == "Corrección de Estilo" && array_correoHTML[2] == "Multimedia") {
          var datosDeptos = [];
          datosDeptos = deptoCV(proyectoFK); //Retorna nombre, correoCCV, correoRCV en ese orden

          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: asuntoSA,
            htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu atención."
              + "<br><br>" + array_correoHTML[12]
              + "<br><br>" + cuerpoHTML
              + "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>Saludos cordiales!!!"
              + "TO: " + datosDeptos[1]
              + "CC: " + datosDeptos[2]
          });
        }
      } else {
        if (array_correoHTML[1] == "Diseño Instruccional" && array_correoHTML[2] == "Multimedia") {
          var datosDeptos = [];
          datosDeptos = deptoDI(proyectoFK); //Retorna nombre, correoCDI, correoRDI
          var nombreRemitente = remitenteEmail(respuestas.email);
          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: "**Rechazado** " + asuntoSA,
            htmlBody: "Hola, " + nombreRemitente + ".<br><br>" + "Revisa tu requerimiento, tiene inconsistencias."
              + "<br><br>" + array_correoHTML[12]
              + "<br><br>" + cuerpoHTML
              + "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>Saludos cordiales!!!"
              + "TO: " + array_correoHTML[6]
              + "CC: " + datosDeptos[1] + datosDeptos[2]
          });
        } else if (array_correoHTML[1] == "Corrección de Estilo" && array_correoHTML[2] == "Multimedia") {
          var datosDeptos = [];
          datosDeptos = deptoCE(proyectoFK); //Retorna nombre, correoRCE

          var nombreRemitente = remitenteEmail(array_correoHTML[6]);
          MailApp.sendEmail({
            to: ("karen_maya@cuaieed.unam.mx"),
            subject: "**Rechazado** " + asuntoSA,
            htmlBody: "Hola, " + nombreRemitente + ".<br><br>" + "Revisa tu requerimiento, tiene inconsistencias."
              + "<br><br>" + array_correoHTML[12]
              + "<br><br>" + cuerpoHTML
              + "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>Saludos cordiales!!!"
              + "TO: " + array_correoHTML[6]
              + "CC: " + datosDeptos[1]
          });
        }
      }//
      break;
    case "Programación finalizada":
      let lv_mod_pr = lv.split(",");
      var parte1 = listaVerificacion(lv_mod_pr, lv_pr);

        var observaciones_tabla = '<tr><th style="border:1px solid;padding:5px;text-align:inherit;font-weight:lighter;"' 
        + 'colspan="2">' + 'Observaciones específicas: </th><td style="border:1px solid;" colspan="8">' 
        + obs_lv + '</td></tr>';

      if (val_aprobacion == "Aprobado") {
        var datosDeptos = [];
        datosDeptos = deptoCV(proyectoFK); //Retorna nombre, correoCCV, correoRCV en ese orden
        var txtHistorial = historial_CA(proyectoFK, entrega, numero);
        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: asuntoSA,
          htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu atención."
            + "<br><br>" + array_correoHTML[12]
            + "<br><br>" + cuerpoHTML
            + "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>Saludos cordiales!!!"
            + "TO: " + datosDeptos[1]
            + "CC: " + datosDeptos[2] + correos.CPR
            + "<br><br>" + txtHistorial
        });
      } else {
        var nombreRemitente = remitenteEmail(array_correoHTML[6]);
        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: "**Rechazado **" + asuntoSA,
          htmlBody: "Hola, " + nombreRemitente + ".<br><br>" + "Revisa tu requerimiento, tiene inconsistencias."
            + "<br><br>" + array_correoHTML[12]
            + "<br><br>" + cuerpoHTML
            + "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>Saludos cordiales!!!"
            + "TO: " + array_correoHTML[6]
            + "CC: " + correos.CPR
        });
      }
      break;
    case "Integración finalizada":
      var cotejo = cuerpoCotejo(
        array_correoHTML[16],
        array_correoHTML[12],
        array_correoHTML[13],
        array_correoHTML[14],
        array_correoHTML[15],
      );
      let lv_mod_cv = lv.split(",");
      var parte1 = listaVerificacion(lv_mod_cv, lv_cv);

        var observaciones_tabla = '<tr><th style="border:1px solid;padding:5px;text-align:inherit;font-weight:lighter;"' 
        + 'colspan="2">' + 'Observaciones específicas: </th><td style="border:1px solid;" colspan="8">' 
        + obs_lv + '</td></tr>';

      if (val_aprobacion == "Aprobado") {
        var datosDeptos = [];
        datosDeptos = deptoDI(proyectoFK); //Retorna nombre, correoCDI, correoRDI
        
        var txtHistorial = historial_CA(proyectoFK, entrega, numero);
        
        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: asuntoSA,
          htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu atención."
            + "<br><br>" + array_correoHTML[12]
            + "<br><br>" + cuerpoHTML
            + "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>Saludos cordiales!!!"
            + "TO: " + datosDeptos[1]
            + "CC: " + datosDeptos[2]
            + "<br><br>" + txtHistorial
        });

      } else {
        var nombreRemitente = remitenteEmail(array_correoHTML[6]);
        var datosDeptos = [];
        datosDeptos = deptoDI(proyectoFK); //Retorna nombre, correoCDI, correoRDI en ese orden

        MailApp.sendEmail({
          to: "karen_maya@cuaieed.unam.mx",
          subject: "**Rechazado **" + asuntoSA,
          htmlBody: "Hola, " + nombreRemitente + ".<br><br>" + "Revisa tu requerimiento, tiene inconsistencias."
            + "<br><br>" + array_correoHTML[12]
            + "<br><br>" + cuerpoHTML
            + "<br>" + cotejo + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>"
            + "<br>Saludos cordiales!!!"
            + "TO: " + array_correoHTML[6]
            + "CC: " + datosDeptos[1] + datosDeptos[2]

        });
      }
      break;
    case "Correcciones aplicadas":
      var cotejo = cuerpoCotejo(
        array_correoHTML[16],
        array_correoHTML[12],
        array_correoHTML[13],
        array_correoHTML[14],
        array_correoHTML[15],
      );

      if (val_aprobacion == "Aprobado") {
        var datosDeptos = [];
        datosDeptos = deptoDI(proyectoFK); //Retorna nombre, correoCDI, correoRDI
        var txtHistorial = historial_CA(proyectoFK, entrega, numero);
        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: asuntoSA,
          htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu atención."
            + "<br><br>" + array_correoHTML[12]
            + "<br><br>" + cuerpoHTML
            + "<br>" + cotejo + "<br><br>Saludos cordiales!!!"
            + "TO: " + datosDeptos[1]
            + "CC: " + datosDeptos[2]
            + "<br><br>" + txtHistorial
        });
      } else {
        var nombreRemitente = remitenteEmail(array_correoHTML[6]);
        var datosDeptos = [];
        datosDeptos = deptoCV(proyectoFK); //Retorna nombre, correoCCV, correoRCV en ese orden
        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: "**Rechazado **" + asuntoSA,
          htmlBody: "Hola, " + +".<br><br>" + "Revisa tu requerimiento, tiene inconsistencias."
            + "<br><br>" + array_correoHTML[12]
            + "<br><br>" + cuerpoHTML
            + "<br>" + cotejo + "<br><br>Saludos cordiales!!!"
            + "TO: " + array_correoHTML[6]
            + "CC: " + datosDeptos[1] + datosDeptos[2]
        });
      }
      break;
    case 'Revisión':
      if (val_aprobacion == "Aprobado") {
        var datosDeptos = [];
        datosDeptos = deptoCE(proyectoFK); //Retorna nombre, correoRCE
        var txtHistorial = historial_CA(proyectoFK, entrega, numero);
        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: asuntoSA,
          htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu atención."
            + "<br><br>" + array_correoHTML[12]
            + "<br><br>" + cuerpoHTML
            + "<br><br>Saludos cordiales!!!"
            + "TO: " + datosDeptos[1]
            + "<br><br>" + txtHistorial
        });
      } else {
        var nombreRemitente = remitenteEmail(array_correoHTML[6]);
        var datosDeptos = [];
        datosDeptos = deptoDI(proyectoFK); //Retorna nombre, correoCDI, correoRDI        
        MailApp.sendEmail({
          to: (+ "karen_maya@cuaieed.unam.mx"),
          //cc: ("__" + correos.RDI + ", __" + correos.CDI),
          subject: "**Rechazado** " + asuntoSA,
          htmlBody: "Hola, " + nombreRemitente + ".<br><br>" + "Revisa tu requerimiento, tiene inconsistencias."
            + "<br><br>" + array_correoHTML[12]
            + "<br><br>" + cuerpoHTML
            + "<br><br>Saludos cordiales!!!"
            + "TO: " + array_correoHTML[6]
            + "CC: " + datosDeptos[1] + datosDeptos[2]
        });
      }
      break;
    case 'Entrega CE con comentarios':
      if (val_aprobacion == "Aprobado") {
        var datosDeptos = [];
        datosDeptos = deptoDI(proyectoFK); //Retorna nombre, correoCDI, correoRDI
        var txtHistorial = historial_CA(proyectoFK, entrega, numero);
        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: asuntoSA,
          htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu atención."
            + "<br><br>" + array_correoHTML[12]
            + "<br><br>" + cuerpoHTML
            + "<br><br>Saludos cordiales!!!"
            + "TO: " + datosDeptos[1]
            + "CC: " + datosDeptos[2]
            + "<br><br>" + txtHistorial
        });
      } else {
        var nombreRemitente = remitenteEmail(array_correoHTML[6]);
        var datosDeptos = [];
        datosDeptos = deptoCE(proyectoFK); //Retorna nombre, correoRCE
        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: "**Rechazado** " + asuntoSA,
          htmlBody: "Hola, " + nombreRemitente + ".<br><br>" + "Revisa tu requerimiento, tiene inconsistencias."
            + "<br><br>" + array_correoHTML[12]
            + "<br><br>" + cuerpoHTML
            + "<br><br>Saludos cordiales!!!"
            + "TO: " + array_correoHTML[6]
            + "CC: " + datosDeptos[1]
        });
      }
      break;
    case 'Correcciones':
      if (val_aprobacion == "Aprobado") {
        var datosDeptos = [];
        datosDeptos = deptoCV(proyectoFK); //Retorna nombre, correoCCV, correoRCV en ese orden
        var txtHistorial = historial_CA(proyectoFK, entrega, numero);
        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: asuntoSA,
          htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu atención."
            + "<br><br>" + array_correoHTML[12]
            + "<br><br>" + cuerpoHTML
            + "<br><br>Saludos cordiales!!!"
            + "TO: " + datosDeptos[1]
            + "CC: " + datosDeptos[2]
            + "<br><br>" + txtHistorial
        });
      } else {
        var nombreRemitente = remitenteEmail(array_correoHTML[6]);
        var datosDeptos = [];
        datosDeptos = deptoDI(proyectoFK); //Retorna nombre, correoCDI, correoRDI        
        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: "**Rechazado **" + asuntoSA,
          htmlBody: "Hola, " + nombreRemitente + ".<br><br>" + "Revisa tu requerimiento, tiene inconsistencias."
            + "<br><br>" + array_correoHTML[12]
            + "<br><br>" + cuerpoHTML
            + "<br><br>Saludos cordiales!!!"
            + "TO: " + array_correoHTML[6]
            + "CC: " + datosDeptos[1] + datosDeptos[2]
        });
      }
      break;

    case "Programación":
      if (val_aprobacion == "Aprobado") {
        var txtHistorial = historial_CA(proyectoFK, entrega, numero);
        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: asuntoSA,
          htmlBody: "Hola, Juan.<br><br>" + "Envío para tu atención."
            + "<br><br>" + array_correoHTML[12]
            + "<br><br>" + cuerpoHTML
            + "<br><br>Saludos cordiales!!!"
            + "<br><br>" + txtHistorial
        });
      } else {
        var nombreRemitente = remitenteEmail(array_correoHTML[6]);
        var datosDeptos = [];
        datosDeptos = deptoCV(proyectoFK); //Retorna nombre, correoCCV, correoRCV en ese orden
        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: "**Rechazado **" + asuntoSA,
          htmlBody: "Hola, " + nombreRemitente + "<br><br>" + "Revisa tu requerimiento, tiene inconsistencias."
            + "<br><br>" + array_correoHTML[12]
            + "<br><br>" + cuerpoHTML
            + "<br><br>Saludos cordiales!!!"
            + "TO: " + array_correoHTML[6]
            + "CC: " + datosDeptos[1] + datosDeptos[2]
        });
      }
      break;
    case "Liberación":
      if (val_aprobacion == "Aprobado") {
        //Retorna 0-nombre, 1-correoCDI, 2-correoRDI, 3-nombre, 4-correoCCV, 5-correoRCV en ese orden          
        datosDeptos.push(deptoDI(proyectoFK));
        datosDeptos.push(deptoCV(proyectoFK));
        var txtHistorial = historial_CA(proyectoFK, entrega, numero);
        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: asuntoSA,
          htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu atención."
            + "<br><br>" + array_correoHTML[12]
            + "<br><br>" + cuerpoHTML
            + "<br><br>Saludos cordiales!!"
            + "TO: __edith_tapia@cuaieed.unam.mx" + datosDeptos[4] + datosDeptos[1] + array_correoHTML[12]
            + "CC: " + datosDeptos[5] + datosDeptos[2]
            + "<br><br>" + txtHistorial
        });
      } else {
        var nombreRemitente = remitenteEmail(array_correoHTML[6]);
        var datosDeptos = [];
        datosDeptos = deptoDI(proyectoFK); //Retorna nombre, correoCDI, correoRDI        
        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: "**Rechazado **" + asuntoSA,
          htmlBody: "Hola, " + nombreRemitente + "<br><br>" + "Revisa tu requerimiento, tiene inconsistencias."
            + "<br><br>" + array_correoHTML[12]
            + "<br><br>" + cuerpoHTML
            + "<br><br>Saludos cordiales!!!"
            + "TO: " + array_correoHTML[6]
            + "CC: " + datosDeptos[1] + datosDeptos[2]
        });
      }
      break;
    case "Actualización":
      if (val_aprobacion == "Aprobado") {
        var datosDeptos = [];
        datosDeptos = deptoCV(proyectoFK); //Retorna nombre, correoCCV, correoRCV en ese orden
        var txtHistorial = historial_CA(proyectoFK, entrega, numero);
        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: asuntoSA,
          htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu atención."
            + "<br><br>" + array_correoHTML[12]
            + "<br><br>" + cuerpoHTML
            + "<br><br>Saludos cordiales!!!"
            + "TO: " + datosDeptos[1]
            + "CC: " + datosDeptos[2]
            + "<br><br>" + txtHistorial
        });
      } else {
        var nombreRemitente = remitenteEmail(array_correoHTML[6]);
        var datosDeptos = [];
        datosDeptos = deptoDI(proyectoFK); //Retorna nombre, correoCDI, correoRDI
        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: "**Rechazado **" + asuntoSA,
          htmlBody: "Hola, " + nombreRemitente + ".<br><br>" + "Revisa tu requerimiento, tiene inconsistencias."
            + "<br><br>" + array_correoHTML[12]
            + "<br><br>" + cuerpoHTML
            + "<br><br>Saludos cordiales!!!"
            + "TO: " + array_correoHTML[6]
            + "CC: " + datosDeptos[1] + datosDeptos[2]
        });
      }

      break;
    case "Actualización finalizada":
      if (val_aprobacion == "Aprobado") {
        var datosDeptos = [];
        datosDeptos = deptoDI(proyectoFK); //Retorna nombre, correoCDI, correoRDI
        var txtHistorial = historial_CA(proyectoFK, entrega, numero);
        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: asuntoSA,
          htmlBody: "Hola, " + datosDeptos[0] + ".<br><br>" + "Envío para tu atención."
            + "<br><br>" + array_correoHTML[12]
            + "<br><br>" + cuerpoHTML
            + "<br><br>Saludos cordiales!!!"
            + "TO: " + datosDeptos[1]
            + "CC: " + datosDeptos[2]
            + "<br><br>" + txtHistorial
        });
      } else {
        var datosDeptos = [];
        datosDeptos = deptoCV(proyectoFK); //Retorna nombre, correoCCV, correoRCV en ese orden
        var nombreRemitente = remitenteEmail(array_correoHTML[6]);
        MailApp.sendEmail({
          to: ("karen_maya@cuaieed.unam.mx"),
          subject: "**Rechazado **" + asuntoSA,
          htmlBody: "Hola, " + nombreRemitente + ".<br><br>" + "Revisa tu requerimiento, tiene inconsistencias."
            + "<br><br>" + array_correoHTML[12]
            + "<br><br>" + cuerpoHTML
            + "<br><br>Saludos cordiales!!!"
            + "TO: " + array_correoHTML[6]
            + "CC: " + datosDeptos[1] + [2]
        });
      }
      break;
    default:
      Logger.log("ORDENES validación")
      break;
  }

} //correoValidado

function historial_CA(proyectoFK, elemento, numero) {
  var stmt = conn2.createStatement();
  var nuevoElemento = elemento.split(",");
  var nuevoNumero = numero.split(",");

  if (numero == 0) {
    for (let j = 0; j < nuevoElemento.length; j++) {
      var datosOrden = stmt.executeQuery(`select ORDEN.nombre, ORDEN.id, ORDEN.solicitudfk, ORDEN.fechasistema
      from ORDEN JOIN SOLICITUD on ORDEN.solicitudfk = SOLICITUD.id
      JOIN AUXILIAR on AUXILIAR.solicitudfk = SOLICITUD.id
      JOIN VALIDACION on ORDEN.id = VALIDACION.ordenfk
      where SOLICITUD.proyectofk = '${proyectoFK}' 
      and VALIDACION.validacion = "Aprobado"
      and (AUXILIAR.elemento LIKE "%${elemento}%" 
      or AUXILIAR.elemento LIKE "%${nuevoElemento[j]}%"
      and AUXILIAR.numero = 0)
      ORDER BY ORDEN.fechaSistema DESC;`);
    }
  } else {
    //Query para elementos mezclados
    var nuevoNumero = numero.split(",");
    for (let j = 0; j < nuevoElemento.length; j++) {
      for (let k = 0; k < nuevoNumero.length; k++) {
        var datosOrden = stmt.executeQuery(`select ORDEN.nombre, ORDEN.id, ORDEN.solicitudfk, ORDEN.fechasistema
            from ORDEN JOIN SOLICITUD on ORDEN.solicitudfk = SOLICITUD.id
            JOIN AUXILIAR on AUXILIAR.solicitudfk = SOLICITUD.id
            JOIN VALIDACION on ORDEN.id = VALIDACION.ordenfk
            where SOLICITUD.proyectofk = '${proyectoFK}' 
            and VALIDACION.validacion = "Aprobado"
            and (AUXILIAR.elemento LIKE "%${nuevoElemento[j]}%"
            OR AUXILIAR.numero LIKE '%${numero[k]}%')
            ORDER BY ORDEN.fechaSistema DESC;`);
      }
    }
  }
  var datosHistorial = [];
  while (datosOrden.next()) {
    for (var x = 1; x <= datosOrden.getMetaData().getColumnCount(); x++) {
      datosHistorial.push(datosOrden.getString(x));
    }
  }
  var arregloHistoriales = [];
  const corte = 4;
  for (let i = 0; i < datosHistorial.length; i += corte) {
    let pedazo = datosHistorial.slice(i, i + corte);
    arregloHistoriales.push(pedazo);
  }
  Logger.log(arregloHistoriales);
  arregloHistoriales.splice(0, 1);

  for (let i = 0; i < arregloHistoriales.length; i++) {
    if (numero == 0) {
      for (let j = 0; j < nuevoElemento.length; j++) {
        var datosOrdenHistorial = stmt.executeQuery(`select 
          ORDEN.depa_solicitante, ORDEN.fechaSistema,
          SOLICITUD.instrucciones, SOLICITUD.observacion, SOLICITUD.ruta,
          PROYECTO.inicial_proy,
          PRINCIPAL.semestre, PRINCIPAL.organizacion, PRINCIPAL.total
          from ORDEN JOIN SOLICITUD on ORDEN.solicitudfk = SOLICITUD.id
          JOIN AUXILIAR on AUXILIAR.solicitudfk = SOLICITUD.id
          JOIN PROYECTO on PROYECTO.id = SOLICITUD.proyectofk
          JOIN PRINCIPAL on PRINCIPAL.proyectofk = PROYECTO.id
          where SOLICITUD.proyectofk = '${proyectoFK}' 
          and ORDEN.solicitudfk = '${arregloHistoriales[i][2]}'  
          and (AUXILIAR.elemento LIKE "%${elemento}%" 
          or AUXILIAR.elemento LIKE "%${nuevoElemento[j]}%"
          and AUXILIAR.numero = 0)
          ORDER BY ORDEN.fechaSistema DESC;`);
      }
    } else {
      //query para elementos mezclados
      var nuevoNumero = numero.split(",");
      for (let j = 0; j < nuevoElemento.length; j++) {
        for (let k = 0; k < nuevoNumero.length; k++) {
          var datosOrdenHistorial = stmt.executeQuery(`select 
              ORDEN.depa_solicitante, ORDEN.fechaSistema,
              SOLICITUD.instrucciones, SOLICITUD.observacion, SOLICITUD.ruta,
              PROYECTO.inicial_proy,
              PRINCIPAL.semestre, PRINCIPAL.organizacion, PRINCIPAL.total
              from ORDEN JOIN SOLICITUD on ORDEN.solicitudfk = SOLICITUD.id
              JOIN AUXILIAR on AUXILIAR.solicitudfk = SOLICITUD.id
              JOIN PROYECTO on PROYECTO.id = SOLICITUD.proyectofk
              JOIN PRINCIPAL on PRINCIPAL.proyectofk = PROYECTO.id
              where SOLICITUD.proyectofk = '${proyectoFK}' 
              and ORDEN.solicitudfk = '${arregloHistoriales[i][2]}'  
              and (AUXILIAR.elemento LIKE "%${nuevoElemento[j]}%"
              OR AUXILIAR.numero LIKE '%${numero[k]}%')
              ORDER BY ORDEN.fechaSistema DESC;`);
        }
      }
    }
    var numCols = datosOrdenHistorial.getMetaData().getColumnCount();
    while (datosOrdenHistorial.next()) {
      var historialCorreccion0 = '';
      for (var col = 0; col < numCols; col++) {
        historialCorreccion0 += datosOrdenHistorial.getString(col + 1) + ",";
      }
    } //while
    
    var cad_aux = "";
    var historialCorreccion = {}
    cad_aux = historialCorreccion0.slice(0, -1);
    historialCorreccion = cad_aux.split(",");
    var nombre_dependencia = stmt.executeQuery(`SELECT DEPENDENCIA.nombre FROM DEPENDENCIA 
        JOIN PROYECTO on PROYECTO.dependenciafk = DEPENDENCIA.id 
        where PROYECTO.id = '${proyectoFK}';`);
    var numCols = nombre_dependencia.getMetaData().getColumnCount();
    while (nombre_dependencia.next()) {
      var dependencia = ""
      for (var col = 0; col < numCols; col++) {
        dependencia += nombre_dependencia.getString(col + 1);
      }
    } //while
    historialCorreccion.push(dependencia);

    var nombre_asignatura = stmt.executeQuery(`SELECT asignatura FROM PROYECTO where id = '${proyectoFK}';`);
    var numCols = nombre_asignatura.getMetaData().getColumnCount();
    while (nombre_asignatura.next()) {
      var asignatura = ""
      for (var col = 0; col < numCols; col++) {
        asignatura += nombre_asignatura.getString(col + 1);
      }
    } //while

    var elemento = stmt.executeQuery(`SELECT elemento FROM AUXILIAR 
      where solicitudfk = '${arregloHistoriales[i][2]}';`);
    var numCols = elemento.getMetaData().getColumnCount();
    while (elemento.next()) {
      var elementos = ""
      for (var col = 0; col < numCols; col++) {
        elementos += elemento.getString(col + 1);
      }
    } //while

    var num_elemento = stmt.executeQuery(`SELECT numero FROM AUXILIAR 
      where solicitudfk = '${arregloHistoriales[i][2]}';`);
    var numCols = num_elemento.getMetaData().getColumnCount();
    while (num_elemento.next()) {
      var num_elementos = ""
      for (var col = 0; col < numCols; col++) {
        num_elementos += num_elemento.getString(col + 1);
      }
    } //while    

    Logger.log("HISTORIAL: " + historialCorreccion);
    cuerpoHistorial += "<hr><br><br>Fecha: " + historialCorreccion[1] + "<br><br>"
    if (historialCorreccion[6] == ""){
      historialCorreccion[6] = "----"
    }
    if (historialCorreccion[3] == ""){
      historialCorreccion[3] = "----"
    }

    

    Logger.log("TIEMPO: " + arregloHistoriales[i][3])
    if (arregloHistoriales[i][0] == "Correcciones" || arregloHistoriales[i][0] == "Revisión"
      || arregloHistoriales[i][0] == "Entrega CE con comentarios"
      || arregloHistoriales[i][0] == "Correcciones aplicadas") {
      if (numero == 0) {
        Logger.log("ENTRO A ESTE IF");
        var stmt = conn2.createStatement();
        for (let j = 0; j < nuevoElemento.length; j++) {
          var conteo_solicitudes = stmt.executeQuery(`SELECT COUNT(*) FROM ORDEN 
            JOIN SOLICITUD ON SOLICITUD.id = ORDEN.solicitudfk
            JOIN AUXILIAR ON AUXILIAR.solicitudfk = SOLICITUD.id
            JOIN VALIDACION ON VALIDACION.ordenfk = ORDEN.id
            where SOLICITUD.proyectofk = '${proyectoFK}'
            and VALIDACION.validacion = "Aprobado"
            and ORDEN.nombre = '${arregloHistoriales[i][0]}'
            and (AUXILIAR.elemento = "${nuevoElemento[j]}"
            AND AUXILIAR.numero = 0
            AND ORDEN.fechasistema <= '${arregloHistoriales[i][3]}');`);
        }
      } else {
        var nuevoElemento = entrega.split(",");
        var nuevoNumero = numero.split(",");
        var stmt = conn2.createStatement();
        for (let j = 0; j < nuevoElemento.length; j++) {
          for (let k = 0; k < nuevoNumero.length; k++) {
            var conteo_solicitudes = stmt.executeQuery(`SELECT COUNT(*) FROM ORDEN 
            JOIN SOLICITUD ON SOLICITUD.id = ORDEN.solicitudfk
            JOIN AUXILIAR ON AUXILIAR.solicitudfk = SOLICITUD.id
            JOIN VALIDACION ON VALIDACION.ordenfk = ORDEN.id
            where SOLICITUD.proyectofk = '${proyectoFK}'
            and VALIDACION.validacion = "Aprobado"
            and ORDEN.nombre = '${arregloHistoriales[i][0]}'
            and (AUXILIAR.elemento = "${nuevoElemento[j]}"
            AND AUXILIAR.numero LIKE '%${numero[k]}%'
            AND ORDEN.fechasistema <= '${arregloHistoriales[i][3]}');`);
          }
        }
      }
    }
    var numCols = conteo_solicitudes.getMetaData().getColumnCount();
    while (conteo_solicitudes.next()) {
      var cont = '';
      for (var col = 0; col < numCols; col++) {
        cont += conteo_solicitudes.getString(col + 1);
      }
    } //while            

    Logger.log("Cont: " + cont)

    switch (arregloHistoriales[i][0]) {
      case 'Entrega CE con comentarios':
      case 'Revisión':
      case 'Correcciones':
      case "Correcciones aplicadas":
        if (asignatura == "") {
          //sin asignatura
          if (num_elementos == 0) {
            if (cont > 1) {
              cuerpoHistorial += "<br><br><table style='border:1px solid #000000; border-collapse:collapse;"
                + "table-layout: fixed;width: 90% '>"
                + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
                + "<strong>Orden de " + arregloHistoriales[i][0] + " " + cont + "</strong></td>"
                + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Departamento de " + historialCorreccion[0] + "</strong></td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Dependencia</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[9] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>" + "Asignatura" + "</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[5] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Semestre</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[6] + "</td>"
                + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Total de " + historialCorreccion[7] + "</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[8]
                + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Entrega</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + elementos + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Instrucciones</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[2] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Observaciones</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[3] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Ruta de descarga</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>"
                + historialCorreccion[4] + "</td></tr></table>";

            } else {
              //cont 1
              cuerpoHistorial += "<br><br><table style='border:1px solid #000000; border-collapse:collapse;"
                + "table-layout: fixed;width: 90% '>"
                + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
                + "<strong>Orden de " + arregloHistoriales[i][0] + "</strong></td>"
                + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Departamento de " + historialCorreccion[0] + "</strong></td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Dependencia</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[9] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>" + "Asignatura" + "</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[5] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Semestre</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[6] + "</td>"
                + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Total de " + historialCorreccion[7] + "</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[8]
                + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Entrega</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + elementos + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Instrucciones</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[2] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Observaciones</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[3] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Ruta de descarga</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>"
                + historialCorreccion[4] + "</td></tr></table>";

            }
          } else {
            //mezclados sin asignatura
            if (cont > 1) {
              cuerpoHistorial += "<br><br><table style='border:1px solid #000000; border-collapse:collapse;"
                + "table-layout: fixed;width: 90% '>"
                + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
                + "<strong>Orden de " + arregloHistoriales[i][0] + " " + cont + "</strong></td>"
                + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Departamento de " + historialCorreccion[0] + "</strong></td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Dependencia</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[9] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>" + "Asignatura" + "</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[5] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Semestre</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[6] + "</td>"
                + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Total de " + historialCorreccion[7] + "</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[8]
                + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Entrega</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + elementos + num_elementos + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Instrucciones</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[2] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Observaciones</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[3] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Ruta de descarga</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>"
                + historialCorreccion[4] + "</td></tr></table>";

            } else {
              cuerpoHistorial += "<br><br><table style='border:1px solid #000000; border-collapse:collapse;"
                + "table-layout: fixed;width: 90% '>"
                + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
                + "<strong>Orden de " + arregloHistoriales[i][0] + "</strong></td>"
                + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Departamento de " + historialCorreccion[0] + "</strong></td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Dependencia</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[9] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>" + "Asignatura" + "</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[5] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Semestre</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[6] + "</td>"
                + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Total de " + historialCorreccion[7] + "</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[8]
                + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Entrega</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + elementos + num_elementos + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Instrucciones</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[2] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Observaciones</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[3] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Ruta de descarga</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>"
                + historialCorreccion[4] + "</td></tr></table>";

            }
          }
        } else {
          //con asignatura
          if (num_elementos == 0) {
            if (cont > 1) {
              cuerpoHistorial += "<br><br><table style='border:1px solid #000000; border-collapse:collapse;"
                + "table-layout: fixed;width: 90% '>"
                + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
                + "<strong>Orden de " + arregloHistoriales[i][0] + " " + cont + "</strong></td>"
                + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Departamento de " + historialCorreccion[0] + "</strong></td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Dependencia</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[9] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>" + "Asignatura" + "</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[5]
                + " / " + asignatura + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Semestre</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[6] + "</td>"
                + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Total de " + historialCorreccion[7] + "</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[8]
                + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Entrega</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + elementos + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Instrucciones</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[2] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Observaciones</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[3] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Ruta de descarga</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>"
                + historialCorreccion[4] + "</td></tr></table>";

            } else {
              //cont 1
              cuerpoHistorial += "<br><br><table style='border:1px solid #000000; border-collapse:collapse;"
                + "table-layout: fixed;width: 90% '>"
                + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
                + "<strong>Orden de " + arregloHistoriales[i][0] + "</strong></td>"
                + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Departamento de " + historialCorreccion[0] + "</strong></td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Dependencia</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[9] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>" + "Asignatura" + "</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[5]
                + " / " + asignatura + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Semestre</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[6] + "</td>"
                + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Total de " + historialCorreccion[7] + "</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[8]
                + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Entrega</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + elementos + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Instrucciones</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[2] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Observaciones</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[3] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Ruta de descarga</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>"
                + historialCorreccion[4] + "</td></tr></table>";

            }
          } else {
            //mezclados sin asignatura
            if (cont > 1) {
              cuerpoHistorial += "<br><br><table style='border:1px solid #000000; border-collapse:collapse;"
                + "table-layout: fixed;width: 90% '>"
                + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
                + "<strong>Orden de " + arregloHistoriales[i][0] + " " + cont + "</strong></td>"
                + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Departamento de " + historialCorreccion[0] + "</strong></td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Dependencia</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[9] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>" + "Asignatura" + "</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[5]
                + " / " + asignatura + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Semestre</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[6] + "</td>"
                + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Total de " + historialCorreccion[7] + "</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[8]
                + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Entrega</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + elementos + num_elementos + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Instrucciones</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[2] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Observaciones</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[3] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Ruta de descarga</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>"
                + historialCorreccion[4] + "</td></tr></table>";

            } else {
              cuerpoHistorial += "<br><br><table style='border:1px solid #000000; border-collapse:collapse;"
                + "table-layout: fixed;width: 90% '>"
                + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
                + "<strong>Orden de " + arregloHistoriales[i][0] + "</strong></td>"
                + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Departamento de " + historialCorreccion[0] + "</strong></td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Dependencia</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[9] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>" + "Asignatura" + "</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[5]
                + " / " + asignatura + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Semestre</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[6] + "</td>"
                + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Total de " + historialCorreccion[7] + "</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[8]
                + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Entrega</strong></td>"
                + "<td style='border:1px solid #000000; padding:5px'>" + elementos + num_elementos + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Instrucciones</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[2] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Observaciones</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[3] + "</td></tr>"
                + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
                + "<strong>Ruta de descarga</strong></td>"
                + "<td colspan='5' style='border:1px solid #000000; padding:5px'>"
                + historialCorreccion[4] + "</td></tr></table>";

            }
          }
        }

        break;
      case "Corrección":
      case "Integración":
      case "Integración finalidada":
      case "Programación finalizada":
      case 'Programación':
      case 'Liberación':
      case 'Actualización':
      case 'Actualización finalizada':
        if (asignatura == "") {
          //sin asignatura
          if (num_elementos == 0) {
            cuerpoHistorial += "<br><br><table style='border:1px solid #000000; border-collapse:collapse;"
              + "table-layout: fixed;width: 90% '>"
              + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
              + "<strong>Orden de " + arregloHistoriales[i][0] + "</strong></td>"
              + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Departamento de " + historialCorreccion[0] + "</strong></td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Dependencia</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[9] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>" + "Asignatura" + "</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[5] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Semestre</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[6] + "</td>"
              + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Total de " + historialCorreccion[7] + "</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[8]
              + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Entrega</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + elementos + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Instrucciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[2] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Observaciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[3] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Ruta de descarga</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>"
              + historialCorreccion[4] + "</td></tr></table>";
          } else {
            //mezclados sin asignatura
            cuerpoHistorial += "<br><br><table style='border:1px solid #000000; border-collapse:collapse;"
              + "table-layout: fixed;width: 90% '>"
              + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
              + "<strong>Orden de " + arregloHistoriales[i][0] + "</strong></td>"
              + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Departamento de " + historialCorreccion[0] + "</strong></td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Dependencia</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[9] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>" + "Asignatura" + "</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[5] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Semestre</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[6] + "</td>"
              + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Total de " + historialCorreccion[7] + "</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[8]
              + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Entrega</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + elementos + num_elementos + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Instrucciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[2] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Observaciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[3] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Ruta de descarga</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>"
              + historialCorreccion[4] + "</td></tr></table>";
          }
        } else {
          //con asignatura
          if (num_elementos == 0) {
            cuerpoHistorial += "<br><br><table style='border:1px solid #000000; border-collapse:collapse;"
              + "table-layout: fixed;width: 90% '>"
              + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
              + "<strong>Orden de " + arregloHistoriales[i][0] + "</strong></td>"
              + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Departamento de " + historialCorreccion[0] + "</strong></td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Dependencia</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[9] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>" + "Asignatura" + "</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[5]
              + " / " + asignatura + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Semestre</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[6] + "</td>"
              + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Total de " + historialCorreccion[7] + "</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[8]
              + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Entrega</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + elementos + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Instrucciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[2] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Observaciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[3] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Ruta de descarga</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>"
              + historialCorreccion[4] + "</td></tr></table>";

          } else {
            //mezclados con asignatura
            cuerpoHistorial += "<br><br><table style='border:1px solid #000000; border-collapse:collapse;"
              + "table-layout: fixed;width: 90% '>"
              + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
              + "<strong>Orden de " + arregloHistoriales[i][0] + "</strong></td>"
              + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Departamento de " + historialCorreccion[0] + "</strong></td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Dependencia</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[9] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>" + "Asignatura" + "</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[5]
              + " / " + asignatura + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Semestre</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[6] + "</td>"
              + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Total de " + historialCorreccion[7] + "</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + historialCorreccion[8]
              + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Entrega</strong></td>"
              + "<td style='border:1px solid #000000; padding:5px'>" + elementos + num_elementos + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Instrucciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[2] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Observaciones</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + historialCorreccion[3] + "</td></tr>"
              + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
              + "<strong>Ruta de descarga</strong></td>"
              + "<td colspan='5' style='border:1px solid #000000; padding:5px'>"
              + historialCorreccion[4] + "</td></tr></table>";
          }
        }
        break;
      default:
        Logger.log("Arreglo de Historiales conteo")
        break;
    }



    switch (arregloHistoriales[i][0]) {
      case "Corrección":
        var listav = ""
        var parte1 = ""
        var resp_lista = stmt.executeQuery(`SELECT respuesta FROM LISTA 
        where ordenFK = '${arregloHistoriales[i][1]}';`);
        var numCols = resp_lista.getMetaData().getColumnCount();
        while (resp_lista.next()) {
          for (var col = 0; col < numCols; col++) {
            listav += resp_lista.getString(col + 1);
          }
        } //while

        var obs_lista = stmt.executeQuery(`SELECT observacion FROM LISTA 
        where ordenFK = '${arregloHistoriales[i][1]}';`);
        var numCols = obs_lista.getMetaData().getColumnCount();
        while (obs_lista.next()) {
          var observacion_lista = ""
          for (var col = 0; col < numCols; col++) {
            observacion_lista += obs_lista.getString(col + 1);
          }
        } //while

        let lv_mod_di = listav.split(",");
        parte1 = listaVerificacion(lv_mod_di, lv_di);

        if (observacion_lista == "") {
          observacion_lista = "----"
        }

        var observaciones_tabla = '<tr><th style="border:1px solid;padding:5px;text-align:inherit;font-weight:lighter;"' 
        + 'colspan="2">' + 'Observaciones específicas: </th><td style="border:1px solid;" colspan="8">' 
        + observacion_lista + '</td></tr>';

        cuerpoHistorial += "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "<br><br>"
        break;
      case "Integración":
        var listav = ""
        var resp_lista = stmt.executeQuery(`SELECT respuesta FROM LISTA 
        where ordenFK = '${arregloHistoriales[i][1]}';`);
        var numCols = resp_lista.getMetaData().getColumnCount();
        while (resp_lista.next()) {
          for (var col = 0; col < numCols; col++) {
            listav += resp_lista.getString(col + 1);
          }
        } //while

        var obs_lista = stmt.executeQuery(`SELECT observacion FROM LISTA 
        where ordenFK = '${arregloHistoriales[i][1]}';`);
        var numCols = obs_lista.getMetaData().getColumnCount();
        while (obs_lista.next()) {
          var observacion_lista = ""
          for (var col = 0; col < numCols; col++) {
            observacion_lista += obs_lista.getString(col + 1);
          }
        } //while


        let lv_mod_ce = listav.split(",");
        var parte1 = listaVerificacion(lv_mod_ce, lv_ce);

        if (observacion_lista == "") {
          observacion_lista = "----"
        }
        var observaciones_tabla = '<tr><th style="border:1px solid;padding:5px;text-align:inherit;font-weight:lighter;"' 
        + 'colspan="2">' + 'Observaciones específicas: </th><td style="border:1px solid;" colspan="8">' 
        + observacion_lista + '</td></tr>';

        cuerpoHistorial += "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "<br><br>"
        break;
      case "Integración finalizada":

        var datosCotejo = stmt.executeQuery(`SELECT  COTEJO.url_acceso,
          COTEJO.alr_usuario, COTEJO.alr_pass, COTEJO.ar_usuario, COTEJO.ar_pass
            FROM ORDEN JOIN COTEJO on ORDEN.id = COTEJO.ordenfk
            where COTEJO.ordenfk = '${arregloHistoriales[i][1]}' and ORDEN.id = '${arregloHistoriales[i][1]}';`);
        var numCols = datosCotejo.getMetaData().getColumnCount();
        while (datosCotejo.next()) {
          var cotejo = '';
          for (var col = 0; col < numCols; col++) {
            cotejo += datosCotejo.getString(col + 1) + ",";
          }
        } //while

        var array_cotejo = cotejo.split(",");
        var cotejo = cuerpoCotejo(
          array_cotejo[0],
          array_cotejo[1],
          array_cotejo[2],
          array_cotejo[3],
          array_cotejo[4],
        );
        var listav = ""
        var resp_lista = stmt.executeQuery(`SELECT respuesta FROM LISTA 
        where ordenFK = '${arregloHistoriales[i][1]}';`);
        var numCols = resp_lista.getMetaData().getColumnCount();
        while (resp_lista.next()) {
          for (var col = 0; col < numCols; col++) {
            listav += resp_lista.getString(col + 1);
          }
        } //while

        var obs_lista = stmt.executeQuery(`SELECT observacion FROM LISTA 
        where ordenFK = '${arregloHistoriales[i][1]}';`);
        var numCols = obs_lista.getMetaData().getColumnCount();
        while (obs_lista.next()) {
          var observacion_lista = ""
          for (var col = 0; col < numCols; col++) {
            observacion_lista += obs_lista.getString(col + 1);
          }
        } //while


        let lv_mod_cv = listav.split(",")
        var parte1 = ""
        parte1 = listaVerificacion(lv_mod_cv, lv_cv);

        if (observacion_lista == "") {
          observacion_lista = "----"
        }

        var observaciones_tabla = '<tr><th style="border:1px solid;padding:5px;text-align:inherit;font-weight:lighter;"' 
        + 'colspan="2">' + 'Observaciones específicas: </th><td style="border:1px solid;" colspan="8">' 
        + observacion_lista + '</td></tr>';

        cuerpoHistorial += "<br><br>" + cotejo
        cuerpoHistorial += "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "<br><br>"
        break;
      case "Correcciones aplicadas":
        var datosCotejo = stmt.executeQuery(`SELECT  COTEJO.url_acceso,
          COTEJO.alr_usuario, COTEJO.alr_pass, COTEJO.ar_usuario, COTEJO.ar_pass
            FROM ORDEN JOIN COTEJO on ORDEN.id = COTEJO.ordenfk
            where COTEJO.ordenfk = '${arregloHistoriales[i][1]}' and ORDEN.id = '${arregloHistoriales[i][1]}';`);
        var numCols = datosCotejo.getMetaData().getColumnCount();
        while (datosCotejo.next()) {
          var cotejo = '';
          for (var col = 0; col < numCols; col++) {
            cotejo += datosCotejo.getString(col + 1) + ",";
          }
        } //while

        var array_cotejo = cotejo.split(",");
        var cotejo = cuerpoCotejo(
          array_cotejo[0],
          array_cotejo[1],
          array_cotejo[2],
          array_cotejo[3],
          array_cotejo[4],
        );
        cuerpoHistorial += "<br><br>" + cotejo
        break;
      case "Programación finalizada":
        var listav = ""
        var resp_lista = stmt.executeQuery(`SELECT respuesta FROM LISTA 
        where ordenFK = '${arregloHistoriales[i][1]}';`);
        var numCols = resp_lista.getMetaData().getColumnCount();
        while (resp_lista.next()) {
          for (var col = 0; col < numCols; col++) {
            listav += resp_lista.getString(col + 1);
          }
        } //while

        var obs_lista = stmt.executeQuery(`SELECT observacion FROM LISTA 
        where ordenFK = '${arregloHistoriales[i][1]}';`);
        var numCols = obs_lista.getMetaData().getColumnCount();
        while (obs_lista.next()) {
          var observacion_lista = ""
          for (var col = 0; col < numCols; col++) {
            observacion_lista += obs_lista.getString(col + 1);
          }
        } //while


        let lv_mod_pr = listav.split(",")
        var parte1 = ""
        parte1 = listaVerificacion(lv_mod_pr, lv_pr);

        if (observacion_lista == "") {
          observacion_lista = "----"
        }
        var observaciones_tabla = '<tr><th style="border:1px solid;padding:5px;text-align:inherit;font-weight:lighter;"' 
        + 'colspan="2">' + 'Observaciones específicas: </th><td style="border:1px solid;" colspan="8">' 
        + observacion_lista + '</td></tr>';

        cuerpoHistorial += "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "<br><br>"
        break;
      case 'Entrega CE con comentarios':
      case 'Revisión':
      case 'Correcciones':
      case 'Programación':
      case 'Liberación':
      case 'Actualización':
      case 'Actualización finalizada':
        cuerpoHistorial += "<br><br>"
        break;
      default:
        Logger.log("Arreglo de Arreglos OTRO")
        break;
    }

  }//for arreglo de historiales
  return cuerpoHistorial

}

function deptoDI(proyectoFK) {
  var stmt = conn2.createStatement();
  var colaboradorCDI = stmt.executeQuery(`select COLABORADOR_BASE.nombre
          from COLABORADOR_BASE 
          JOIN COLABORADOR on COLABORADOR_BASE.id = COLABORADOR.RDI 
          JOIN PRINCIPAL on PRINCIPAL.colaboradorfk = COLABORADOR.id 
          where PRINCIPAL.proyectofk = '${proyectoFK}'`);
  var numCols = colaboradorCDI.getMetaData().getColumnCount();
  while (colaboradorCDI.next()) {
    var CDI = '';
    for (var col = 0; col < numCols; col++) {
      CDI += colaboradorCDI.getString(col + 1);
    }
  } //while
  var nombreCDI = CDI.split(" ");

  var emailRDI = stmt.executeQuery(`select COLABORADOR_BASE.email
          from COLABORADOR_BASE 
          JOIN COLABORADOR on COLABORADOR_BASE.id = COLABORADOR.RDI 
          JOIN PRINCIPAL on PRINCIPAL.colaboradorfk = COLABORADOR.id 
          where PRINCIPAL.proyectofk = '${proyectoFK}'`);
  var numCols = emailRDI.getMetaData().getColumnCount();
  while (emailRDI.next()) {
    var correoRDI = '';
    for (var col = 0; col < numCols; col++) {
      correoRDI += emailRDI.getString(col + 1);
    }
  } //while

  var emailCDI = stmt.executeQuery(`select COLABORADOR_BASE.email
          from COLABORADOR_BASE 
          JOIN COLABORADOR on COLABORADOR_BASE.id = COLABORADOR.CDI 
          JOIN PRINCIPAL on PRINCIPAL.colaboradorfk = COLABORADOR.id 
          where PRINCIPAL.proyectofk = 1`);
  var numCols = emailCDI.getMetaData().getColumnCount();
  while (emailCDI.next()) {
    var correoCDI = '';
    for (var col = 0; col < numCols; col++) {
      correoCDI += emailCDI.getString(col + 1);
    }
  } //while

  return [nombreCDI[0], correoCDI, correoRDI]

}

function deptoCE(proyectoFK) {
  var stmt = conn2.createStatement();
  var colaboradorRCE = stmt.executeQuery(`select COLABORADOR_BASE.nombre
          from COLABORADOR_BASE 
          JOIN COLABORADOR on COLABORADOR_BASE.id = COLABORADOR.RCE
          JOIN PRINCIPAL on PRINCIPAL.colaboradorfk = COLABORADOR.id 
          where PRINCIPAL.proyectofk = '${proyectoFK}'`);
  var numCols = colaboradorRCE.getMetaData().getColumnCount();
  while (colaboradorRCE.next()) {
    var RCE = '';
    for (var col = 0; col < numCols; col++) {
      RCE += colaboradorRCE.getString(col + 1);
    }
  } //while
  var nombreRCE = RCE.split(" ");

  var emailRCE = stmt.executeQuery(`select COLABORADOR_BASE.email
          from COLABORADOR_BASE 
          JOIN COLABORADOR on COLABORADOR_BASE.id = COLABORADOR.RCE 
          JOIN PRINCIPAL on PRINCIPAL.colaboradorfk = COLABORADOR.id 
          where PRINCIPAL.proyectofk = '${proyectoFK}'`);
  var numCols = emailRCE.getMetaData().getColumnCount();
  while (emailRCE.next()) {
    var correoRCE = '';
    for (var col = 0; col < numCols; col++) {
      correoRCE += emailRCE.getString(col + 1);
    }
  } //while
  return [nombreRCE[0], correoRCE]

}

function deptoCV(proyectoFK) {
  var stmt = conn2.createStatement();
  var colaboradorCCV = stmt.executeQuery(`select COLABORADOR_BASE.nombre
          from COLABORADOR_BASE 
          JOIN COLABORADOR on COLABORADOR_BASE.id = COLABORADOR.CCV 
          JOIN PRINCIPAL on PRINCIPAL.colaboradorfk = COLABORADOR.id 
          where PRINCIPAL.proyectofk = '${proyectoFK}'`);
  var numCols = colaboradorCCV.getMetaData().getColumnCount();
  while (colaboradorCCV.next()) {
    var CCV = '';
    for (var col = 0; col < numCols; col++) {
      CCV += colaboradorCCV.getString(col + 1);
    }
  } //while
  var nombreCCV = CCV.split(" ");

  var emailCCV = stmt.executeQuery(`select COLABORADOR_BASE.email
          from COLABORADOR_BASE 
          JOIN COLABORADOR on COLABORADOR_BASE.id = COLABORADOR.CCV 
          JOIN PRINCIPAL on PRINCIPAL.colaboradorfk = COLABORADOR.id 
          where PRINCIPAL.proyectofk = '${proyectoFK}'`);
  var numCols = emailCCV.getMetaData().getColumnCount();
  while (emailCCV.next()) {
    var correoCCV = '';
    for (var col = 0; col < numCols; col++) {
      correoCCV += emailCCV.getString(col + 1);
    }
  } //while

  var emailRCV = stmt.executeQuery(`select COLABORADOR_BASE.email
          from COLABORADOR_BASE 
          JOIN COLABORADOR on COLABORADOR_BASE.id = COLABORADOR.RCV 
          JOIN PRINCIPAL on PRINCIPAL.colaboradorfk = COLABORADOR.id 
          where PRINCIPAL.proyectofk = '${proyectoFK}'`);
  var numCols = emailRCV.getMetaData().getColumnCount();
  while (emailRCV.next()) {
    var correoRCV = '';
    for (var col = 0; col < numCols; col++) {
      correoRCV += emailRCV.getString(col + 1);
    }
  } //while

  return [nombreCCV[0], correoCCV, correoRCV]

}

function remitenteEmail(correo) {
  var stmt = conn2.createStatement();
  var query_remitente = stmt.executeQuery(`select nombre
          from COLABORADOR_BASE where email = '${correo}'`);
  var numCols = query_remitente.getMetaData().getColumnCount();
  while (query_remitente.next()) {
    var REMITENTE = '';
    for (var col = 0; col < numCols; col++) {
      REMITENTE += query_remitente.getString(col + 1);
    }
  } //while  
  var nombreRemitente = REMITENTE.split(" ");
  return nombreRemitente[0]
}

function cuerpoEmailCA_CG_SP_E(d0, d1, d2, d3, d4, d5, d6, iniciales_proy, tos, iniciales_elemento_mod) {
  var cuerpoHTML = "<table style='border:1px solid #000000; border-collapse:collapse;"
    + "table-layout: fixed;width: 90%;'>"
    + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
    + "<strong>Orden de " + d0 + "</strong></td>"
    + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Departamento de " + d1 + "</strong></td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Dependencia</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d2 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>" + "Asignatura" + "</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + iniciales_proy + " / "
    + d3 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Semestre</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + tos[2] + "</td>"
    + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Total de " + tos[1] + "</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + tos[0]
    + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Entrega</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + iniciales_elemento_mod + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Instrucciones</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d4 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Observaciones</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d5 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Ruta de descarga</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d6 + "</td></tr></table>";

  return cuerpoHTML

}

function cuerpoEmailCA_M_U_T_S(d0, d1, d2, d3, d4, d5, d6, iniciales_proy, tos, iniciales_elemento_mod, num_elementos) {
  var cuerpoHTML = "<table style='border:1px solid #000000; border-collapse:collapse;"
    + "table-layout: fixed;width: 90%;'>"
    + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
    + "<strong>Orden de " + d0 + "</strong></td>"
    + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Departamento de " + d1 + "</strong></td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Dependencia</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d2 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>" + "Asignatura" + "</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + iniciales_proy + " / "
    + d3 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Semestre</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + tos[2] + "</td>"
    + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Total de " + tos[1] + "</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + tos[0]
    + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Entrega</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + iniciales_elemento_mod
    + num_elementos + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Instrucciones</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d4 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Observaciones</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d5 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Ruta de descarga</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d6 + "</td></tr></table>";

  return cuerpoHTML

}

function cuerpoEmailSA_CG_SP_E(d0, d1, d2, d3, d4, d5, iniciales_proy, tos, iniciales_elemento_mod) {
  var cuerpoHTML = "<table style='border:1px solid #000000; border-collapse:collapse;"
    + "table-layout: fixed;width: 90%;'>"
    + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
    + "<strong>Orden de " + d0 + "</strong></td>"
    + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Departamento de " + d1 + "</strong></td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Dependencia</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d2 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>" + "Asignatura" + "</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + iniciales_proy + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Semestre</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + tos[2] + "</td>"
    + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Total de " + tos[1] + "</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + tos[0]
    + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Entrega</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + iniciales_elemento_mod + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Instrucciones</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d3 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Observaciones</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d4 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Ruta de descarga</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d5 + "</td></tr></table>";

  return cuerpoHTML

}

function cuerpoEmailSA_M_U_T_S(d0, d1, d2, d3, d4, d5, iniciales_proy, tos, iniciales_elemento_mod, num_elementos) {
  var cuerpoHTML = "<table style='border:1px solid #000000; border-collapse:collapse;"
    + "table-layout: fixed;width: 90%;'>"
    + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
    + "<strong>Orden de " + d0 + "</strong></td>"
    + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Departamento de " + d1 + "</strong></td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Dependencia</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d2 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>" + "Asignatura" + "</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + iniciales_proy + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Semestre</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + tos[2] + "</td>"
    + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Total de " + tos[1] + "</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + tos[0]
    + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Entrega</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + iniciales_elemento_mod
    + num_elementos + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Instrucciones</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d3 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Observaciones</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d4 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Ruta de descarga</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d5 + "</td></tr></table>";

  return cuerpoHTML

}

function cuerpoEmailCACount_CG_SP_E(d0, d1, d2, d3, d4, d5, d6, iniciales_proy, tos, iniciales_elemento_mod, count) {

  var cuerpoHTML = "<table style='border:1px solid #000000; border-collapse:collapse;"
    + "table-layout: fixed;width: 90% '>"
    + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
    + "<strong>Orden de " + d0 + " " + count + "</strong></td>"
    + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Departamento de " + d1 + "</strong></td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Dependencia</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d2 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>" + "Asignatura" + "</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + iniciales_proy + " / "
    + d3 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Semestre</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + tos[2] + "</td>"
    + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Total de " + tos[1] + "</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + tos[0]
    + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Entrega</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + iniciales_elemento_mod + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Instrucciones</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d4 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Observaciones</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d5 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Ruta de descarga</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d6 + "</td></tr></table>";

  return cuerpoHTML
}

function cuerpoEmailCACount_M_U_T_S(d0, d1, d2, d3, d4, d5, d6, iniciales_proy, tos, iniciales_elemento_mod, num_elementos, count) {

  var cuerpoHTML = "<table style='border:1px solid #000000; border-collapse:collapse;"
    + "table-layout: fixed;width: 90% '>"
    + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
    + "<strong>Orden de " + d0 + " " + count + "</strong></td>"
    + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Departamento de " + d1 + "</strong></td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Dependencia</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d2 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>" + "Asignatura" + "</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + iniciales_proy + " / "
    + d3 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Semestre</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + tos[2] + "</td>"
    + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Total de " + tos[1] + "</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + tos[0]
    + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Entrega</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + iniciales_elemento_mod + num_elementos + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Instrucciones</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d4 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Observaciones</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d5 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Ruta de descarga</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d6 + "</td></tr></table>";

  return cuerpoHTML
}

function cuerpoEmailSACount_CG_SP_E(d0, d1, d2, d3, d4, d5, iniciales_proy, tos, iniciales_elemento_mod, count) {

  var cuerpoHTML = "<table style='border:1px solid #000000; border-collapse:collapse;"
    + "table-layout: fixed;width: 90% '>"
    + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
    + "<strong>Orden de " + d0 + " " + count + "</strong></td>"
    + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Departamento de " + d1 + "</strong></td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Dependencia</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d2 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>" + "Asignatura" + "</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + iniciales_proy + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Semestre</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + tos[2] + "</td>"
    + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Total de " + tos[1] + "</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + tos[0]
    + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Entrega</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + iniciales_elemento_mod + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Instrucciones</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d3 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Observaciones</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d4 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Ruta de descarga</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d5 + "</td></tr></table>";

  return cuerpoHTML
}

function cuerpoEmailSACount_M_U_T_S(d0, d1, d2, d3, d4, d5, iniciales_proy, tos, iniciales_elemento_mod, num_elementos, count) {

  var cuerpoHTML = "<table style='border:1px solid #000000; border-collapse:collapse;"
    + "table-layout: fixed;width: 90% '>"
    + "<tr><td colspan='3' style='border:1px solid #000000; padding:5px'>"
    + "<strong>Orden de " + d0 + " " + count + "</strong></td>"
    + "<td colspan='3' style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Departamento de " + d1 + "</strong></td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Dependencia</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d2 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>" + "Asignatura" + "</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + iniciales_proy + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Semestre</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + tos[2] + "</td>"
    + "<td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Total de " + tos[1] + "</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + tos[0]
    + "</td><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Entrega</strong></td>"
    + "<td style='border:1px solid #000000; padding:5px'>" + iniciales_elemento_mod + num_elementos + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Instrucciones</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d3 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Observaciones</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d4 + "</td></tr>"
    + "<tr><td style='border:1px solid #000000; padding:5px; text-align:right;'>"
    + "<strong>Ruta de descarga</strong></td>"
    + "<td colspan='5' style='border:1px solid #000000; padding:5px'>" + d5 + "</td></tr></table>";

  return cuerpoHTML
}

function cuerpoCotejo(d0, d1, d2, d3, d4) {
  var txt1 = "<tr style='background-color:#8F8F8F'><th colspan='2'>URL de acceso</th></tr>"
    + "<tr><td colspan='2'style='text-align:center' >" + d0 + "</td></tr>";
  var txt2 = "<tr style='background-color:#8F8F8F'><th colspan='2'>Alumno revisión (demo)</th></tr>"
    + "<tr><td style='text-align:center'>Usuario</td><td style='text-align:center'>Contraseña</td></tr>";
  var txt3 = "<tr><td style='text-align:center'>" + d1 + "</td><td style='text-align:center'>"
    + d2 + "</td></tr>";
  var txt4 = "<tr style='background-color:#8F8F8F'><th colspan='2'>Asesor revisión (demo)</th></tr>"
    + "<tr><td style='text-align:center'>Usuario</td><td style='text-align:center'>Contraseña</td></tr>";
  var txt5 = "<tr><td style='text-align:center'>" + d3 + "</td><td style='text-align:center'>"
    + d4 + "</td></tr>";
  var txtCotejo = "<br/><table style='table-layout: fixed;width: 90%;border-collapse:collapse;'>"
    + txt1 + txt2 + txt3 + txt4 + txt5 + "</table><br/>";
  return txtCotejo
}

function listaVerificacion(d0, d1) {
  var txtParte1 = ""
  //Sustitución del elemenos null por "No aplica" en las respuestas de la lista de verificación
  for (let i = 0; i < d0.length; i++) {
    if (d0[i] == null) {
      d0[d0.indexOf(null)] = "No aplica"
    }else if (d0[i] == "") {
      d0[d0.indexOf("")] = "No aplica"   
    }
  }

  for (let i = 0; i < d1.length; i++) {
    if(i % 2 == 0){
      txtParte1 += "<tr><th colspan='6' style='padding:5px;text-align: inherit;font-weight: lighter;background-color: #ededed;'>" + d1[i] + "</th>";
      for (var opcion in opcionesBase) {  
        if (d0[i] == "Si" && opcionesBase[opcion] == "Si") {
          txtParte1 += "<td style='background-color: #ededed;'>" + punto + "</td>";
        } else if (d0[i] == "No" && opcionesBase[opcion] == "No") {
          txtParte1 += "<td style='background-color: #ededed;'>" + punto + "</td>";
        } else if (d0[i] == "No aplica" && opcionesBase[opcion] == "No aplica") {
          txtParte1 += "<td style='background-color: #ededed;'>" + punto + "</td>";
        } else {
          txtParte1 += "<td style='background-color: #ededed;'>" + "</td>";
        }
      }
    }else{
      txtParte1 += "<tr><th colspan='6' style='padding:5px;text-align: inherit;font-weight: lighter;'>" + d1[i] + "</th>";
      for (var opcion in opcionesBase) {  
        if (d0[i] == "Si" && opcionesBase[opcion] == "Si") {
          txtParte1 += "<td'>" + punto + "</td>";
        } else if (d0[i] == "No" && opcionesBase[opcion] == "No") {
          txtParte1 += "<td'>" + punto + "</td>";
        } else if (d0[i] == "No aplica" && opcionesBase[opcion] == "No aplica") {
          txtParte1 += "<td'>" + punto + "</td>";
        } else {
          txtParte1 += "<td'>" + "</td>";
        }
      }      
    }

  }//for
  return txtParte1
}



function prueba() {
  var lista_prueba = ["Si", "No", "No aplica", "Si", "Si", "Si", "Si", "Si", "Si", "Si", "Si", "No", "No aplica", "Si", "No"]
  var parte1 = listaVerificacion(lista_prueba, lv_di);

  var txt = "Texto de observaciones"
  var observaciones_tabla = '<tr><th style="border:1px solid;padding:5px;text-align: inherit;font-weight: lighter;" colspan="2">'
    + 'Observaciones específicas: </th><td style="border:1px solid;" colspan="8">' + txt + '</td></tr>';

  MailApp.sendEmail({

    to: ("karen_maya@cuaieed.unam.mx"),
    subject: "8 Prueba de listas",
    htmlBody: "<br><br>" + tabla_lista + parte1 + observaciones_tabla + "</table><br><br>"
  });

}



